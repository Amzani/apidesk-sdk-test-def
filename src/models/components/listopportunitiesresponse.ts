/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { RFCDate } from "../../types/rfcdate.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Currency,
  Currency$inboundSchema,
  Currency$outboundSchema,
} from "./currency.js";

export type ListOpportunitiesResponseValue6 = {};

export type ListOpportunitiesResponseValue4 = {};

/**
 * This property holds the actual data or input stored in the custom field for a specific opportunity. It allows for capturing tailored information that can be utilized within the CRM system, enhancing the opportunity's data profile.
 */
export type ListOpportunitiesResponseValue =
  | ListOpportunitiesResponseValue4
  | string
  | number
  | boolean
  | Array<string>
  | Array<ListOpportunitiesResponseValue6>;

export type ListOpportunitiesResponseCustomFields = {
  /**
   * This property is a unique identifier for each custom field within the opportunity. It ensures that each field can be distinctly referenced and managed, which is crucial for operations involving updates or deletions of specific custom fields.
   */
  id: string | null;
  /**
   * This property contains the name assigned to the custom field, describing the type of information it holds. It helps users understand the purpose of the field and how it relates to the opportunity's data, facilitating better data management and usage.
   */
  name?: string | null | undefined;
  /**
   * This string field provides additional context or details about a custom field associated with the opportunity. It helps in understanding the purpose or usage of the custom field within the CRM system, offering insights into its role or significance.
   */
  description?: string | null | undefined;
  /**
   * This property holds the actual data or input stored in the custom field for a specific opportunity. It allows for capturing tailored information that can be utilized within the CRM system, enhancing the opportunity's data profile.
   */
  value?:
    | ListOpportunitiesResponseValue4
    | string
    | number
    | boolean
    | Array<string>
    | Array<ListOpportunitiesResponseValue6>
    | null
    | undefined;
};

/**
 * This property contains an object that holds custom mappings configured specifically for the opportunity resource. These mappings allow for the inclusion of additional, user-defined fields in the response, offering flexibility in how opportunity data is represented and utilized. This feature is particularly useful for tailoring the CRM data to meet specific business needs or integration requirements.
 */
export type ListOpportunitiesResponseCustomMappings = {};

export type ListOpportunitiesResponseExtendPaths = {
  /**
   * This property contains the JSONPath string that specifies where the value should be applied within the data structure. It is a required field for each object in the 'extend_paths' array, ensuring precise modification of the data. The path must adhere to a valid JSONPath expression format, allowing developers to target specific elements in the JSON response for updates or retrieval.
   */
  path: string;
  /**
   * This property contains the value to be set at the specified JSONPath within the 'extend_paths' array. It is a required field and can hold any data type, providing flexibility for inserting or updating data at the designated path. This is crucial for dynamically managing CRM opportunity data in the response.
   */
  value?: any | undefined;
};

export type ListOpportunitiesResponsePassThrough = {
  /**
   * The 'service_id' within the 'pass_through' array identifies the service to which the custom data or modifications should be applied. This string ID ensures precise association with the intended service, facilitating effective data handling within the CRM system.
   */
  serviceId: string;
  /**
   * This property contains an optional identifier for a specific workflow operation. It is used to apply the pass-through logic to a particular operation, especially useful in scenarios where multiple downstream requests are made in a single Unify call. The value should be a string that uniquely identifies the operation within the workflow.
   */
  operationId?: string | undefined;
  /**
   * This property contains a flexible object that allows developers to add custom key-value pairs to extend the functionality of the pass-through operation. It is designed to accommodate additional data that may be necessary for specific use cases, without a predefined structure, enabling seamless integration of extra information into the CRM opportunities response.
   */
  extendObject?: { [k: string]: any } | undefined;
  /**
   * An array containing objects that specify modifications to the data structure using JSONPath strings. Each object in the array includes a 'path' and a 'value', allowing developers to dynamically alter the structure of the returned opportunity data. This feature is useful for customizing the data output to fit specific application needs or workflows.
   */
  extendPaths?: Array<ListOpportunitiesResponseExtendPaths> | undefined;
};

export type ListOpportunitiesResponseData = {
  /**
   * This property represents the unique identifier for each opportunity within the CRM system. It is a string that allows developers to reference and manage specific opportunities, ensuring that each can be uniquely identified and accessed for further operations or analysis.
   */
  id?: string | undefined;
  /**
   * This property holds the title or name of the opportunity, acting as a brief descriptor or label. It is crucial for identifying and differentiating opportunities within the CRM system, enabling users to quickly recognize and categorize them based on their titles.
   */
  title: string;
  /**
   * This property contains the unique identifier of the primary contact associated with the opportunity. It links the opportunity to a specific contact, which is essential for maintaining communication and managing relationships within the CRM system.
   */
  primaryContactId?: string | null | undefined;
  /**
   * This property provides a detailed description of the opportunity, offering additional context and information about its nature and scope. It helps users understand the specifics and potential of the opportunity, aiding in decision-making and strategic planning.
   */
  description?: string | null | undefined;
  /**
   * This property contains the category or classification of the opportunity within the CRM system. It is a string value that helps in organizing and filtering opportunities based on their type, such as 'new business', 'renewal', or 'upsell'. Understanding the type of opportunity is crucial for sales strategy and prioritization.
   */
  type?: string | null | undefined;
  /**
   * This property represents the total financial value associated with the opportunity. It is a numeric value that is crucial for assessing the potential revenue impact of the opportunity within the sales pipeline. This helps in financial forecasting and resource allocation.
   */
  monetaryAmount?: number | null | undefined;
  currency?: Currency | null | undefined;
  /**
   * This property indicates the likelihood of successfully closing the opportunity, expressed as a percentage. It is a numeric value that helps prioritize opportunities based on their potential to convert into actual sales. This metric is essential for sales forecasting and decision-making.
   */
  winProbability?: number | null | undefined;
  /**
   * This property calculates the anticipated revenue from the opportunity by considering both the monetary amount and the win probability. It is a numeric value that aids in forecasting and strategic planning within the sales process, providing insights into potential future earnings.
   */
  expectedRevenue?: number | null | undefined;
  /**
   * The 'close_date' field contains the date when the opportunity was finalized, formatted as a string. If this field is null, it indicates that the opportunity is still open and has not yet reached a conclusion. This information is crucial for tracking the timeline of sales opportunities within the CRM system.
   */
  closeDate?: RFCDate | null | undefined;
  /**
   * The 'loss_reason_id' is a unique string identifier for the reason an opportunity was lost. This identifier is used to categorize and analyze lost opportunities, helping businesses understand patterns and improve future sales strategies.
   */
  lossReasonId?: string | null | undefined;
  /**
   * The 'loss_reason' field contains a descriptive text explaining why a particular sales opportunity was not successful. This information is crucial for analyzing sales performance and understanding the factors that contributed to the loss. It helps sales teams to identify patterns and areas for improvement in their sales strategies.
   */
  lossReason?: string | null | undefined;
  /**
   * A unique identifier string representing the reason an opportunity was successfully closed as won. This ID is used to categorize and analyze successful sales strategies and practices, aiding in the understanding of what factors contribute to winning opportunities. It is part of the detailed opportunity data returned by the 'opportunitiesAll' operation, which helps in sales tracking and management.
   */
  wonReasonId?: string | null | undefined;
  /**
   * A string detailing the reason why a particular opportunity was successfully closed as a win. This information helps in analyzing successful sales strategies and understanding key factors that contribute to closing deals. It is an optional field that provides insights into the sales process, aiding in strategic planning and decision-making.
   */
  wonReason?: string | null | undefined;
  /**
   * This property contains the unique identifier for the sales pipeline associated with the opportunity. It is a string value that helps categorize the opportunity within a specific pipeline, facilitating organized tracking and management of sales processes. Understanding which pipeline an opportunity belongs to is crucial for sales strategy and forecasting.
   */
  pipelineId?: string | null | undefined;
  /**
   * This property holds the unique identifier for the current stage of the opportunity within its sales pipeline. As a string value, it indicates the opportunity's progress and helps determine the next steps in the sales process. Tracking the stage of an opportunity is essential for managing sales cycles effectively.
   */
  pipelineStageId?: string | null | undefined;
  /**
   * This property represents the unique identifier for the source from which the opportunity originated. It is a string value that allows tracing the origin of the opportunity, providing insights into the effectiveness of different lead generation channels. Understanding the source helps in evaluating marketing strategies and optimizing lead acquisition.
   */
  sourceId?: string | null | undefined;
  /**
   * This property contains the unique identifier for the lead associated with the opportunity. As a string value, it links the opportunity to its originating lead, enabling tracking and analysis of lead conversion rates. This connection is vital for understanding the journey from lead to opportunity and improving sales conversion strategies.
   */
  leadId?: string | null | undefined;
  /**
   * This property describes the origin of the lead associated with the opportunity, such as a marketing campaign or referral. It is a string value that helps evaluate the success of different lead sources by providing context on where the lead came from. Analyzing lead sources is crucial for optimizing marketing efforts and improving lead quality.
   */
  leadSource?: string | null | undefined;
  /**
   * A unique string identifier for a contact linked to the opportunity. This ID is used to fetch detailed information about the contact, facilitating the association of the opportunity with a specific individual within the CRM system.
   */
  contactId?: string | null | undefined;
  /**
   * An array of string identifiers, each representing a contact associated with the opportunity. This allows the CRM to manage opportunities involving multiple contacts, ensuring all relevant stakeholders are tracked and managed effectively.
   */
  contactIds?: Array<string> | undefined;
  /**
   * A unique string identifier for the company linked to the opportunity. This ID connects the opportunity to a specific company record, allowing users to access detailed company information and history within the CRM.
   */
  companyId?: string | null | undefined;
  /**
   * The name of the company associated with the opportunity, represented as a string. This human-readable name aids in identifying and managing opportunities related to specific companies within the CRM system.
   */
  companyName?: string | null | undefined;
  /**
   * This property contains the unique identifier of the user who owns the opportunity within the CRM system. It is a string value that links the opportunity to a specific user, facilitating the tracking and management of sales activities by the responsible individual. This ID is crucial for associating opportunities with users, enabling efficient sales process management and accountability.
   */
  ownerId?: string | null | undefined;
  /**
   * Indicates the importance or urgency of the opportunity within the sales pipeline. This string value helps prioritize tasks and allocate resources effectively based on the opportunity's significance.
   */
  priority?: string | null | undefined;
  /**
   * Reflects the current stage of the opportunity in the sales process. This string value helps in understanding the progress and current position of the opportunity within the sales cycle.
   */
  status?: string | null | undefined;
  /**
   * A unique identifier for the current status of the opportunity, used to reference specific stages in the sales process programmatically. This ID is crucial for integrating and automating workflows based on the opportunity's status.
   */
  statusId?: string | null | undefined;
  /**
   * This property contains an array of tags associated with the CRM opportunity. Each tag is a string that serves as a label for categorizing and organizing opportunities, making them easier to search and filter within the CRM system. The tags help in identifying themes or characteristics of opportunities, enhancing the ability to retrieve relevant data efficiently.
   */
  tags?: Array<string> | null | undefined;
  /**
   * This property represents the total number of interactions recorded with the opportunity, such as calls, emails, or meetings. It is a numeric value that helps assess the level of engagement and activity associated with the opportunity, providing insights into its progress and potential.
   */
  interactionCount?: number | null | undefined;
  /**
   * This property is an array containing custom fields that store additional, user-defined information about the opportunity. Each element in the array is a custom field object, allowing for flexible data storage tailored to specific business needs. This enables users to extend the standard data model with fields specific to their requirements.
   */
  customFields?: Array<ListOpportunitiesResponseCustomFields> | undefined;
  /**
   * This property records the date and time when the opportunity's stage was last updated, formatted as a string in ISO 8601. It provides a timestamp that helps track the opportunity's progression through different stages in the sales pipeline.
   */
  stageLastChangedAt?: Date | null | undefined;
  /**
   * This string property indicates the timestamp of the most recent activity related to the opportunity, formatted in ISO 8601. It aids users in tracking the latest interactions or updates associated with the opportunity, facilitating effective activity management.
   */
  lastActivityAt?: string | null | undefined;
  /**
   * A boolean flag indicating whether the opportunity has been marked as deleted. If true, the opportunity is considered removed from active records, though it may still exist in the system for historical or recovery purposes.
   */
  deleted?: boolean | undefined;
  /**
   * This property contains the date and time when the opportunity's stage was last updated in the sales pipeline. It is formatted as an ISO 8601 string, such as '2023-10-05T14:48:00Z', providing a standardized timestamp that helps track the opportunity's progress. This information is crucial for understanding the timeline of changes and managing sales activities effectively.
   */
  dateStageChanged?: Date | null | undefined;
  /**
   * This property contains the date and time when the opportunity was last contacted, providing insight into the most recent interaction with the opportunity. It is formatted in ISO 8601, such as '2023-10-05T14:48:00Z', ensuring consistency and ease of parsing across systems. Understanding the last contact date is essential for managing follow-ups and prioritizing sales efforts within the CRM.
   */
  dateLastContacted?: Date | null | undefined;
  /**
   * The 'date_lead_created' property contains the timestamp indicating when the lead associated with the CRM opportunity was initially created. This information is crucial for understanding the lead's lifecycle and tracking its progress over time. The value is formatted as an ISO 8601 string, such as '2023-10-05T14:48:00Z', ensuring consistency and ease of parsing across different systems.
   */
  dateLeadCreated?: Date | null | undefined;
  /**
   * This property contains an object that holds custom mappings configured specifically for the opportunity resource. These mappings allow for the inclusion of additional, user-defined fields in the response, offering flexibility in how opportunity data is represented and utilized. This feature is particularly useful for tailoring the CRM data to meet specific business needs or integration requirements.
   */
  customMappings?: ListOpportunitiesResponseCustomMappings | null | undefined;
  /**
   * Contains the unique identifier of the user who last updated the opportunity. This string value is crucial for tracking changes and maintaining an audit trail, as it identifies the individual responsible for the most recent modifications. In the context of the 'opportunitiesAll' GET operation, it helps users understand the history and accountability of each opportunity record.
   */
  updatedBy?: string | null | undefined;
  /**
   * The 'created_by' property contains the unique identifier of the user who initiated the opportunity. This ID is crucial for tracking user actions within the CRM, ensuring accountability and traceability. It is typically a string that corresponds to a user record in the system.
   */
  createdBy?: string | null | undefined;
  /**
   * The 'updated_at' property indicates the date and time when the opportunity was last modified. This timestamp, formatted in ISO 8601 (e.g., '2023-10-01T12:00:00Z'), is essential for understanding the recency of changes and maintaining an accurate sales pipeline.
   */
  updatedAt?: Date | null | undefined;
  /**
   * The 'created_at' property records the date and time when the opportunity was initially created. Formatted in ISO 8601 (e.g., '2023-10-01T12:00:00Z'), this information is vital for tracking the opportunity's lifecycle and supporting historical analysis and reporting.
   */
  createdAt?: Date | null | undefined;
  /**
   * The 'pass_through' property is an array designed to include service-specific, custom data or structured modifications. This feature allows for the integration of additional data not covered by standard fields, enabling more flexible and tailored CRM operations.
   */
  passThrough?: Array<ListOpportunitiesResponsePassThrough> | undefined;
};

/**
 * This object contains cursor information used for navigating between pages of results. It includes cursors for moving to previous or next pages, facilitating seamless data retrieval in paginated responses and ensuring efficient data management.
 */
export type ListOpportunitiesResponseCursors = {
  /**
   * A string representing the cursor used to access the previous page of results. This is essential for implementing backward navigation in paginated API responses, allowing developers to retrieve earlier sets of opportunity data efficiently.
   */
  previous?: string | null | undefined;
  /**
   * A string representing the cursor for the current page of results. This cursor is crucial for maintaining the current position in the paginated dataset, ensuring consistent data retrieval across API calls and aiding in data management.
   */
  current?: string | null | undefined;
  /**
   * A string token used to fetch the next set of results in a paginated response. This cursor is essential for navigating through large datasets, allowing seamless continuation from the current page to the next. It appears only when additional pages are available, ensuring efficient data retrieval.
   */
  next?: string | null | undefined;
};

/**
 * This object contains metadata about the API response, including pagination details and cursors for navigating through pages of results. It provides context for the data returned, helping manage large sets of opportunities efficiently by indicating how to traverse the dataset.
 */
export type ListOpportunitiesResponseMeta = {
  /**
   * An integer indicating the number of opportunity items included in the current page of the response. This helps developers understand the volume of data returned in a single API call, which is crucial for implementing effective pagination strategies.
   */
  itemsOnPage?: number | undefined;
  /**
   * This object contains cursor information used for navigating between pages of results. It includes cursors for moving to previous or next pages, facilitating seamless data retrieval in paginated responses and ensuring efficient data management.
   */
  cursors?: ListOpportunitiesResponseCursors | undefined;
};

/**
 * An object containing URLs for navigating through paginated API results. It includes links to the previous, current, and next pages, enabling developers to easily move between different pages of data. This object is included when pagination is applicable, providing a structured way to access various parts of the dataset.
 */
export type ListOpportunitiesResponseLinks = {
  /**
   * A URL string that directs to the previous page of results in a paginated response. This link is crucial for backward navigation, allowing developers to revisit earlier data sets. It is included only if there is a preceding page available, ensuring logical data traversal.
   */
  previous?: string | null | undefined;
  /**
   * A URL string representing the current page of results in the API response. This link helps developers maintain context within the pagination structure, allowing easy reference or reloading of the current dataset. It is included to provide clarity on the current position within the paginated results.
   */
  current?: string | undefined;
  /**
   * A URL string that directs to the next page of results in a paginated response. This link facilitates forward navigation, enabling developers to proceed to subsequent data sets. It is included only if there is a following page available, ensuring smooth data exploration.
   */
  next?: string | null | undefined;
};

/**
 * Opportunities
 */
export type ListOpportunitiesResponse = {
  /**
   * The status_code property contains the HTTP response status code returned by the server. This integer value indicates the outcome of the GET request to retrieve CRM opportunities, helping developers understand if the request was successful (e.g., 200 for success) or if there was an error (e.g., 404 for not found). It is crucial for error handling and debugging in the integration of CRM data.
   */
  statusCode: number;
  /**
   * This property contains a human-readable string that describes the HTTP response status for the request to fetch CRM opportunities. It provides immediate feedback on the success or failure of the operation, such as 'OK' for a successful retrieval. This helps developers quickly assess the outcome of their API call and take appropriate actions based on the status.
   */
  status: string;
  /**
   * This property contains the unique identifier for the service provider from which the CRM opportunities data is retrieved. It is a string that ensures the response is correctly associated with the specific third-party service integrated via Apideck. This identifier is crucial for distinguishing between different service providers and ensuring accurate data retrieval.
   */
  service: string;
  /**
   * This property contains the name of the unified API resource being accessed, specifically related to CRM opportunities. It is a string that helps developers identify the type of resource involved in the operation, ensuring clarity when dealing with multiple resources. This is crucial for understanding the context of the data returned by the 'opportunitiesAll' operation, which fetches a list of CRM opportunities.
   */
  resource: string;
  /**
   * This property contains the name of the API operation executed, specifically indicating that the action performed is the retrieval of CRM opportunities. It helps developers understand the context of the response by confirming the type of data operation that was requested. The value is a string that directly corresponds to the action taken, ensuring clarity in the API's response structure.
   */
  operation: string;
  /**
   * This property contains an array of CRM opportunities, where each element is a detailed representation of a single opportunity. The array serves as the core component of the response, offering a comprehensive overview of all opportunities available in the CRM system. Each opportunity includes essential details such as ID, title, and primary contact, facilitating effective sales tracking and management.
   */
  data: Array<ListOpportunitiesResponseData>;
  /**
   * This object contains metadata about the API response, including pagination details and cursors for navigating through pages of results. It provides context for the data returned, helping manage large sets of opportunities efficiently by indicating how to traverse the dataset.
   */
  meta?: ListOpportunitiesResponseMeta | undefined;
  /**
   * An object containing URLs for navigating through paginated API results. It includes links to the previous, current, and next pages, enabling developers to easily move between different pages of data. This object is included when pagination is applicable, providing a structured way to access various parts of the dataset.
   */
  links?: ListOpportunitiesResponseLinks | undefined;
};

/** @internal */
export const ListOpportunitiesResponseValue6$inboundSchema: z.ZodType<
  ListOpportunitiesResponseValue6,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ListOpportunitiesResponseValue6$Outbound = {};

/** @internal */
export const ListOpportunitiesResponseValue6$outboundSchema: z.ZodType<
  ListOpportunitiesResponseValue6$Outbound,
  z.ZodTypeDef,
  ListOpportunitiesResponseValue6
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOpportunitiesResponseValue6$ {
  /** @deprecated use `ListOpportunitiesResponseValue6$inboundSchema` instead. */
  export const inboundSchema = ListOpportunitiesResponseValue6$inboundSchema;
  /** @deprecated use `ListOpportunitiesResponseValue6$outboundSchema` instead. */
  export const outboundSchema = ListOpportunitiesResponseValue6$outboundSchema;
  /** @deprecated use `ListOpportunitiesResponseValue6$Outbound` instead. */
  export type Outbound = ListOpportunitiesResponseValue6$Outbound;
}

export function listOpportunitiesResponseValue6ToJSON(
  listOpportunitiesResponseValue6: ListOpportunitiesResponseValue6,
): string {
  return JSON.stringify(
    ListOpportunitiesResponseValue6$outboundSchema.parse(
      listOpportunitiesResponseValue6,
    ),
  );
}

export function listOpportunitiesResponseValue6FromJSON(
  jsonString: string,
): SafeParseResult<ListOpportunitiesResponseValue6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListOpportunitiesResponseValue6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListOpportunitiesResponseValue6' from JSON`,
  );
}

/** @internal */
export const ListOpportunitiesResponseValue4$inboundSchema: z.ZodType<
  ListOpportunitiesResponseValue4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ListOpportunitiesResponseValue4$Outbound = {};

/** @internal */
export const ListOpportunitiesResponseValue4$outboundSchema: z.ZodType<
  ListOpportunitiesResponseValue4$Outbound,
  z.ZodTypeDef,
  ListOpportunitiesResponseValue4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOpportunitiesResponseValue4$ {
  /** @deprecated use `ListOpportunitiesResponseValue4$inboundSchema` instead. */
  export const inboundSchema = ListOpportunitiesResponseValue4$inboundSchema;
  /** @deprecated use `ListOpportunitiesResponseValue4$outboundSchema` instead. */
  export const outboundSchema = ListOpportunitiesResponseValue4$outboundSchema;
  /** @deprecated use `ListOpportunitiesResponseValue4$Outbound` instead. */
  export type Outbound = ListOpportunitiesResponseValue4$Outbound;
}

export function listOpportunitiesResponseValue4ToJSON(
  listOpportunitiesResponseValue4: ListOpportunitiesResponseValue4,
): string {
  return JSON.stringify(
    ListOpportunitiesResponseValue4$outboundSchema.parse(
      listOpportunitiesResponseValue4,
    ),
  );
}

export function listOpportunitiesResponseValue4FromJSON(
  jsonString: string,
): SafeParseResult<ListOpportunitiesResponseValue4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListOpportunitiesResponseValue4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListOpportunitiesResponseValue4' from JSON`,
  );
}

/** @internal */
export const ListOpportunitiesResponseValue$inboundSchema: z.ZodType<
  ListOpportunitiesResponseValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => ListOpportunitiesResponseValue4$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.string()),
  z.array(z.lazy(() => ListOpportunitiesResponseValue6$inboundSchema)),
]);

/** @internal */
export type ListOpportunitiesResponseValue$Outbound =
  | ListOpportunitiesResponseValue4$Outbound
  | string
  | number
  | boolean
  | Array<string>
  | Array<ListOpportunitiesResponseValue6$Outbound>;

/** @internal */
export const ListOpportunitiesResponseValue$outboundSchema: z.ZodType<
  ListOpportunitiesResponseValue$Outbound,
  z.ZodTypeDef,
  ListOpportunitiesResponseValue
> = z.union([
  z.lazy(() => ListOpportunitiesResponseValue4$outboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.string()),
  z.array(z.lazy(() => ListOpportunitiesResponseValue6$outboundSchema)),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOpportunitiesResponseValue$ {
  /** @deprecated use `ListOpportunitiesResponseValue$inboundSchema` instead. */
  export const inboundSchema = ListOpportunitiesResponseValue$inboundSchema;
  /** @deprecated use `ListOpportunitiesResponseValue$outboundSchema` instead. */
  export const outboundSchema = ListOpportunitiesResponseValue$outboundSchema;
  /** @deprecated use `ListOpportunitiesResponseValue$Outbound` instead. */
  export type Outbound = ListOpportunitiesResponseValue$Outbound;
}

export function listOpportunitiesResponseValueToJSON(
  listOpportunitiesResponseValue: ListOpportunitiesResponseValue,
): string {
  return JSON.stringify(
    ListOpportunitiesResponseValue$outboundSchema.parse(
      listOpportunitiesResponseValue,
    ),
  );
}

export function listOpportunitiesResponseValueFromJSON(
  jsonString: string,
): SafeParseResult<ListOpportunitiesResponseValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListOpportunitiesResponseValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListOpportunitiesResponseValue' from JSON`,
  );
}

/** @internal */
export const ListOpportunitiesResponseCustomFields$inboundSchema: z.ZodType<
  ListOpportunitiesResponseCustomFields,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()),
  name: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  value: z.nullable(
    z.union([
      z.lazy(() => ListOpportunitiesResponseValue4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.string()),
      z.array(z.lazy(() => ListOpportunitiesResponseValue6$inboundSchema)),
    ]),
  ).optional(),
});

/** @internal */
export type ListOpportunitiesResponseCustomFields$Outbound = {
  id: string | null;
  name?: string | null | undefined;
  description?: string | null | undefined;
  value?:
    | ListOpportunitiesResponseValue4$Outbound
    | string
    | number
    | boolean
    | Array<string>
    | Array<ListOpportunitiesResponseValue6$Outbound>
    | null
    | undefined;
};

/** @internal */
export const ListOpportunitiesResponseCustomFields$outboundSchema: z.ZodType<
  ListOpportunitiesResponseCustomFields$Outbound,
  z.ZodTypeDef,
  ListOpportunitiesResponseCustomFields
> = z.object({
  id: z.nullable(z.string()),
  name: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  value: z.nullable(
    z.union([
      z.lazy(() => ListOpportunitiesResponseValue4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.string()),
      z.array(z.lazy(() => ListOpportunitiesResponseValue6$outboundSchema)),
    ]),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOpportunitiesResponseCustomFields$ {
  /** @deprecated use `ListOpportunitiesResponseCustomFields$inboundSchema` instead. */
  export const inboundSchema =
    ListOpportunitiesResponseCustomFields$inboundSchema;
  /** @deprecated use `ListOpportunitiesResponseCustomFields$outboundSchema` instead. */
  export const outboundSchema =
    ListOpportunitiesResponseCustomFields$outboundSchema;
  /** @deprecated use `ListOpportunitiesResponseCustomFields$Outbound` instead. */
  export type Outbound = ListOpportunitiesResponseCustomFields$Outbound;
}

export function listOpportunitiesResponseCustomFieldsToJSON(
  listOpportunitiesResponseCustomFields: ListOpportunitiesResponseCustomFields,
): string {
  return JSON.stringify(
    ListOpportunitiesResponseCustomFields$outboundSchema.parse(
      listOpportunitiesResponseCustomFields,
    ),
  );
}

export function listOpportunitiesResponseCustomFieldsFromJSON(
  jsonString: string,
): SafeParseResult<ListOpportunitiesResponseCustomFields, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListOpportunitiesResponseCustomFields$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListOpportunitiesResponseCustomFields' from JSON`,
  );
}

/** @internal */
export const ListOpportunitiesResponseCustomMappings$inboundSchema: z.ZodType<
  ListOpportunitiesResponseCustomMappings,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ListOpportunitiesResponseCustomMappings$Outbound = {};

/** @internal */
export const ListOpportunitiesResponseCustomMappings$outboundSchema: z.ZodType<
  ListOpportunitiesResponseCustomMappings$Outbound,
  z.ZodTypeDef,
  ListOpportunitiesResponseCustomMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOpportunitiesResponseCustomMappings$ {
  /** @deprecated use `ListOpportunitiesResponseCustomMappings$inboundSchema` instead. */
  export const inboundSchema =
    ListOpportunitiesResponseCustomMappings$inboundSchema;
  /** @deprecated use `ListOpportunitiesResponseCustomMappings$outboundSchema` instead. */
  export const outboundSchema =
    ListOpportunitiesResponseCustomMappings$outboundSchema;
  /** @deprecated use `ListOpportunitiesResponseCustomMappings$Outbound` instead. */
  export type Outbound = ListOpportunitiesResponseCustomMappings$Outbound;
}

export function listOpportunitiesResponseCustomMappingsToJSON(
  listOpportunitiesResponseCustomMappings:
    ListOpportunitiesResponseCustomMappings,
): string {
  return JSON.stringify(
    ListOpportunitiesResponseCustomMappings$outboundSchema.parse(
      listOpportunitiesResponseCustomMappings,
    ),
  );
}

export function listOpportunitiesResponseCustomMappingsFromJSON(
  jsonString: string,
): SafeParseResult<
  ListOpportunitiesResponseCustomMappings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ListOpportunitiesResponseCustomMappings$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ListOpportunitiesResponseCustomMappings' from JSON`,
  );
}

/** @internal */
export const ListOpportunitiesResponseExtendPaths$inboundSchema: z.ZodType<
  ListOpportunitiesResponseExtendPaths,
  z.ZodTypeDef,
  unknown
> = z.object({
  path: z.string(),
  value: z.any().optional(),
});

/** @internal */
export type ListOpportunitiesResponseExtendPaths$Outbound = {
  path: string;
  value?: any | undefined;
};

/** @internal */
export const ListOpportunitiesResponseExtendPaths$outboundSchema: z.ZodType<
  ListOpportunitiesResponseExtendPaths$Outbound,
  z.ZodTypeDef,
  ListOpportunitiesResponseExtendPaths
> = z.object({
  path: z.string(),
  value: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOpportunitiesResponseExtendPaths$ {
  /** @deprecated use `ListOpportunitiesResponseExtendPaths$inboundSchema` instead. */
  export const inboundSchema =
    ListOpportunitiesResponseExtendPaths$inboundSchema;
  /** @deprecated use `ListOpportunitiesResponseExtendPaths$outboundSchema` instead. */
  export const outboundSchema =
    ListOpportunitiesResponseExtendPaths$outboundSchema;
  /** @deprecated use `ListOpportunitiesResponseExtendPaths$Outbound` instead. */
  export type Outbound = ListOpportunitiesResponseExtendPaths$Outbound;
}

export function listOpportunitiesResponseExtendPathsToJSON(
  listOpportunitiesResponseExtendPaths: ListOpportunitiesResponseExtendPaths,
): string {
  return JSON.stringify(
    ListOpportunitiesResponseExtendPaths$outboundSchema.parse(
      listOpportunitiesResponseExtendPaths,
    ),
  );
}

export function listOpportunitiesResponseExtendPathsFromJSON(
  jsonString: string,
): SafeParseResult<ListOpportunitiesResponseExtendPaths, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListOpportunitiesResponseExtendPaths$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListOpportunitiesResponseExtendPaths' from JSON`,
  );
}

/** @internal */
export const ListOpportunitiesResponsePassThrough$inboundSchema: z.ZodType<
  ListOpportunitiesResponsePassThrough,
  z.ZodTypeDef,
  unknown
> = z.object({
  service_id: z.string(),
  operation_id: z.string().optional(),
  extend_object: z.record(z.any()).optional(),
  extend_paths: z.array(
    z.lazy(() => ListOpportunitiesResponseExtendPaths$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "service_id": "serviceId",
    "operation_id": "operationId",
    "extend_object": "extendObject",
    "extend_paths": "extendPaths",
  });
});

/** @internal */
export type ListOpportunitiesResponsePassThrough$Outbound = {
  service_id: string;
  operation_id?: string | undefined;
  extend_object?: { [k: string]: any } | undefined;
  extend_paths?:
    | Array<ListOpportunitiesResponseExtendPaths$Outbound>
    | undefined;
};

/** @internal */
export const ListOpportunitiesResponsePassThrough$outboundSchema: z.ZodType<
  ListOpportunitiesResponsePassThrough$Outbound,
  z.ZodTypeDef,
  ListOpportunitiesResponsePassThrough
> = z.object({
  serviceId: z.string(),
  operationId: z.string().optional(),
  extendObject: z.record(z.any()).optional(),
  extendPaths: z.array(
    z.lazy(() => ListOpportunitiesResponseExtendPaths$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    serviceId: "service_id",
    operationId: "operation_id",
    extendObject: "extend_object",
    extendPaths: "extend_paths",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOpportunitiesResponsePassThrough$ {
  /** @deprecated use `ListOpportunitiesResponsePassThrough$inboundSchema` instead. */
  export const inboundSchema =
    ListOpportunitiesResponsePassThrough$inboundSchema;
  /** @deprecated use `ListOpportunitiesResponsePassThrough$outboundSchema` instead. */
  export const outboundSchema =
    ListOpportunitiesResponsePassThrough$outboundSchema;
  /** @deprecated use `ListOpportunitiesResponsePassThrough$Outbound` instead. */
  export type Outbound = ListOpportunitiesResponsePassThrough$Outbound;
}

export function listOpportunitiesResponsePassThroughToJSON(
  listOpportunitiesResponsePassThrough: ListOpportunitiesResponsePassThrough,
): string {
  return JSON.stringify(
    ListOpportunitiesResponsePassThrough$outboundSchema.parse(
      listOpportunitiesResponsePassThrough,
    ),
  );
}

export function listOpportunitiesResponsePassThroughFromJSON(
  jsonString: string,
): SafeParseResult<ListOpportunitiesResponsePassThrough, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListOpportunitiesResponsePassThrough$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListOpportunitiesResponsePassThrough' from JSON`,
  );
}

/** @internal */
export const ListOpportunitiesResponseData$inboundSchema: z.ZodType<
  ListOpportunitiesResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  title: z.string(),
  primary_contact_id: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  type: z.nullable(z.string()).optional(),
  monetary_amount: z.nullable(z.number()).optional(),
  currency: z.nullable(Currency$inboundSchema).optional(),
  win_probability: z.nullable(z.number()).optional(),
  expected_revenue: z.nullable(z.number()).optional(),
  close_date: z.nullable(z.string().transform(v => new RFCDate(v))).optional(),
  loss_reason_id: z.nullable(z.string()).optional(),
  loss_reason: z.nullable(z.string()).optional(),
  won_reason_id: z.nullable(z.string()).optional(),
  won_reason: z.nullable(z.string()).optional(),
  pipeline_id: z.nullable(z.string()).optional(),
  pipeline_stage_id: z.nullable(z.string()).optional(),
  source_id: z.nullable(z.string()).optional(),
  lead_id: z.nullable(z.string()).optional(),
  lead_source: z.nullable(z.string()).optional(),
  contact_id: z.nullable(z.string()).optional(),
  contact_ids: z.array(z.string()).optional(),
  company_id: z.nullable(z.string()).optional(),
  company_name: z.nullable(z.string()).optional(),
  owner_id: z.nullable(z.string()).optional(),
  priority: z.nullable(z.string()).optional(),
  status: z.nullable(z.string()).optional(),
  status_id: z.nullable(z.string()).optional(),
  tags: z.nullable(z.array(z.string())).optional(),
  interaction_count: z.nullable(z.number()).optional(),
  custom_fields: z.array(
    z.lazy(() => ListOpportunitiesResponseCustomFields$inboundSchema),
  ).optional(),
  stage_last_changed_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  last_activity_at: z.nullable(z.string()).optional(),
  deleted: z.boolean().optional(),
  date_stage_changed: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  date_last_contacted: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  date_lead_created: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  custom_mappings: z.nullable(
    z.lazy(() => ListOpportunitiesResponseCustomMappings$inboundSchema),
  ).optional(),
  updated_by: z.nullable(z.string()).optional(),
  created_by: z.nullable(z.string()).optional(),
  updated_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  created_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  pass_through: z.array(
    z.lazy(() => ListOpportunitiesResponsePassThrough$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "primary_contact_id": "primaryContactId",
    "monetary_amount": "monetaryAmount",
    "win_probability": "winProbability",
    "expected_revenue": "expectedRevenue",
    "close_date": "closeDate",
    "loss_reason_id": "lossReasonId",
    "loss_reason": "lossReason",
    "won_reason_id": "wonReasonId",
    "won_reason": "wonReason",
    "pipeline_id": "pipelineId",
    "pipeline_stage_id": "pipelineStageId",
    "source_id": "sourceId",
    "lead_id": "leadId",
    "lead_source": "leadSource",
    "contact_id": "contactId",
    "contact_ids": "contactIds",
    "company_id": "companyId",
    "company_name": "companyName",
    "owner_id": "ownerId",
    "status_id": "statusId",
    "interaction_count": "interactionCount",
    "custom_fields": "customFields",
    "stage_last_changed_at": "stageLastChangedAt",
    "last_activity_at": "lastActivityAt",
    "date_stage_changed": "dateStageChanged",
    "date_last_contacted": "dateLastContacted",
    "date_lead_created": "dateLeadCreated",
    "custom_mappings": "customMappings",
    "updated_by": "updatedBy",
    "created_by": "createdBy",
    "updated_at": "updatedAt",
    "created_at": "createdAt",
    "pass_through": "passThrough",
  });
});

/** @internal */
export type ListOpportunitiesResponseData$Outbound = {
  id?: string | undefined;
  title: string;
  primary_contact_id?: string | null | undefined;
  description?: string | null | undefined;
  type?: string | null | undefined;
  monetary_amount?: number | null | undefined;
  currency?: string | null | undefined;
  win_probability?: number | null | undefined;
  expected_revenue?: number | null | undefined;
  close_date?: string | null | undefined;
  loss_reason_id?: string | null | undefined;
  loss_reason?: string | null | undefined;
  won_reason_id?: string | null | undefined;
  won_reason?: string | null | undefined;
  pipeline_id?: string | null | undefined;
  pipeline_stage_id?: string | null | undefined;
  source_id?: string | null | undefined;
  lead_id?: string | null | undefined;
  lead_source?: string | null | undefined;
  contact_id?: string | null | undefined;
  contact_ids?: Array<string> | undefined;
  company_id?: string | null | undefined;
  company_name?: string | null | undefined;
  owner_id?: string | null | undefined;
  priority?: string | null | undefined;
  status?: string | null | undefined;
  status_id?: string | null | undefined;
  tags?: Array<string> | null | undefined;
  interaction_count?: number | null | undefined;
  custom_fields?:
    | Array<ListOpportunitiesResponseCustomFields$Outbound>
    | undefined;
  stage_last_changed_at?: string | null | undefined;
  last_activity_at?: string | null | undefined;
  deleted?: boolean | undefined;
  date_stage_changed?: string | null | undefined;
  date_last_contacted?: string | null | undefined;
  date_lead_created?: string | null | undefined;
  custom_mappings?:
    | ListOpportunitiesResponseCustomMappings$Outbound
    | null
    | undefined;
  updated_by?: string | null | undefined;
  created_by?: string | null | undefined;
  updated_at?: string | null | undefined;
  created_at?: string | null | undefined;
  pass_through?:
    | Array<ListOpportunitiesResponsePassThrough$Outbound>
    | undefined;
};

/** @internal */
export const ListOpportunitiesResponseData$outboundSchema: z.ZodType<
  ListOpportunitiesResponseData$Outbound,
  z.ZodTypeDef,
  ListOpportunitiesResponseData
> = z.object({
  id: z.string().optional(),
  title: z.string(),
  primaryContactId: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  type: z.nullable(z.string()).optional(),
  monetaryAmount: z.nullable(z.number()).optional(),
  currency: z.nullable(Currency$outboundSchema).optional(),
  winProbability: z.nullable(z.number()).optional(),
  expectedRevenue: z.nullable(z.number()).optional(),
  closeDate: z.nullable(z.instanceof(RFCDate).transform(v => v.toString()))
    .optional(),
  lossReasonId: z.nullable(z.string()).optional(),
  lossReason: z.nullable(z.string()).optional(),
  wonReasonId: z.nullable(z.string()).optional(),
  wonReason: z.nullable(z.string()).optional(),
  pipelineId: z.nullable(z.string()).optional(),
  pipelineStageId: z.nullable(z.string()).optional(),
  sourceId: z.nullable(z.string()).optional(),
  leadId: z.nullable(z.string()).optional(),
  leadSource: z.nullable(z.string()).optional(),
  contactId: z.nullable(z.string()).optional(),
  contactIds: z.array(z.string()).optional(),
  companyId: z.nullable(z.string()).optional(),
  companyName: z.nullable(z.string()).optional(),
  ownerId: z.nullable(z.string()).optional(),
  priority: z.nullable(z.string()).optional(),
  status: z.nullable(z.string()).optional(),
  statusId: z.nullable(z.string()).optional(),
  tags: z.nullable(z.array(z.string())).optional(),
  interactionCount: z.nullable(z.number()).optional(),
  customFields: z.array(
    z.lazy(() => ListOpportunitiesResponseCustomFields$outboundSchema),
  ).optional(),
  stageLastChangedAt: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  lastActivityAt: z.nullable(z.string()).optional(),
  deleted: z.boolean().optional(),
  dateStageChanged: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  dateLastContacted: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  dateLeadCreated: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  customMappings: z.nullable(
    z.lazy(() => ListOpportunitiesResponseCustomMappings$outboundSchema),
  ).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  passThrough: z.array(
    z.lazy(() => ListOpportunitiesResponsePassThrough$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    primaryContactId: "primary_contact_id",
    monetaryAmount: "monetary_amount",
    winProbability: "win_probability",
    expectedRevenue: "expected_revenue",
    closeDate: "close_date",
    lossReasonId: "loss_reason_id",
    lossReason: "loss_reason",
    wonReasonId: "won_reason_id",
    wonReason: "won_reason",
    pipelineId: "pipeline_id",
    pipelineStageId: "pipeline_stage_id",
    sourceId: "source_id",
    leadId: "lead_id",
    leadSource: "lead_source",
    contactId: "contact_id",
    contactIds: "contact_ids",
    companyId: "company_id",
    companyName: "company_name",
    ownerId: "owner_id",
    statusId: "status_id",
    interactionCount: "interaction_count",
    customFields: "custom_fields",
    stageLastChangedAt: "stage_last_changed_at",
    lastActivityAt: "last_activity_at",
    dateStageChanged: "date_stage_changed",
    dateLastContacted: "date_last_contacted",
    dateLeadCreated: "date_lead_created",
    customMappings: "custom_mappings",
    updatedBy: "updated_by",
    createdBy: "created_by",
    updatedAt: "updated_at",
    createdAt: "created_at",
    passThrough: "pass_through",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOpportunitiesResponseData$ {
  /** @deprecated use `ListOpportunitiesResponseData$inboundSchema` instead. */
  export const inboundSchema = ListOpportunitiesResponseData$inboundSchema;
  /** @deprecated use `ListOpportunitiesResponseData$outboundSchema` instead. */
  export const outboundSchema = ListOpportunitiesResponseData$outboundSchema;
  /** @deprecated use `ListOpportunitiesResponseData$Outbound` instead. */
  export type Outbound = ListOpportunitiesResponseData$Outbound;
}

export function listOpportunitiesResponseDataToJSON(
  listOpportunitiesResponseData: ListOpportunitiesResponseData,
): string {
  return JSON.stringify(
    ListOpportunitiesResponseData$outboundSchema.parse(
      listOpportunitiesResponseData,
    ),
  );
}

export function listOpportunitiesResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<ListOpportunitiesResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListOpportunitiesResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListOpportunitiesResponseData' from JSON`,
  );
}

/** @internal */
export const ListOpportunitiesResponseCursors$inboundSchema: z.ZodType<
  ListOpportunitiesResponseCursors,
  z.ZodTypeDef,
  unknown
> = z.object({
  previous: z.nullable(z.string()).optional(),
  current: z.nullable(z.string()).optional(),
  next: z.nullable(z.string()).optional(),
});

/** @internal */
export type ListOpportunitiesResponseCursors$Outbound = {
  previous?: string | null | undefined;
  current?: string | null | undefined;
  next?: string | null | undefined;
};

/** @internal */
export const ListOpportunitiesResponseCursors$outboundSchema: z.ZodType<
  ListOpportunitiesResponseCursors$Outbound,
  z.ZodTypeDef,
  ListOpportunitiesResponseCursors
> = z.object({
  previous: z.nullable(z.string()).optional(),
  current: z.nullable(z.string()).optional(),
  next: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOpportunitiesResponseCursors$ {
  /** @deprecated use `ListOpportunitiesResponseCursors$inboundSchema` instead. */
  export const inboundSchema = ListOpportunitiesResponseCursors$inboundSchema;
  /** @deprecated use `ListOpportunitiesResponseCursors$outboundSchema` instead. */
  export const outboundSchema = ListOpportunitiesResponseCursors$outboundSchema;
  /** @deprecated use `ListOpportunitiesResponseCursors$Outbound` instead. */
  export type Outbound = ListOpportunitiesResponseCursors$Outbound;
}

export function listOpportunitiesResponseCursorsToJSON(
  listOpportunitiesResponseCursors: ListOpportunitiesResponseCursors,
): string {
  return JSON.stringify(
    ListOpportunitiesResponseCursors$outboundSchema.parse(
      listOpportunitiesResponseCursors,
    ),
  );
}

export function listOpportunitiesResponseCursorsFromJSON(
  jsonString: string,
): SafeParseResult<ListOpportunitiesResponseCursors, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListOpportunitiesResponseCursors$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListOpportunitiesResponseCursors' from JSON`,
  );
}

/** @internal */
export const ListOpportunitiesResponseMeta$inboundSchema: z.ZodType<
  ListOpportunitiesResponseMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  items_on_page: z.number().int().optional(),
  cursors: z.lazy(() => ListOpportunitiesResponseCursors$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "items_on_page": "itemsOnPage",
  });
});

/** @internal */
export type ListOpportunitiesResponseMeta$Outbound = {
  items_on_page?: number | undefined;
  cursors?: ListOpportunitiesResponseCursors$Outbound | undefined;
};

/** @internal */
export const ListOpportunitiesResponseMeta$outboundSchema: z.ZodType<
  ListOpportunitiesResponseMeta$Outbound,
  z.ZodTypeDef,
  ListOpportunitiesResponseMeta
> = z.object({
  itemsOnPage: z.number().int().optional(),
  cursors: z.lazy(() => ListOpportunitiesResponseCursors$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    itemsOnPage: "items_on_page",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOpportunitiesResponseMeta$ {
  /** @deprecated use `ListOpportunitiesResponseMeta$inboundSchema` instead. */
  export const inboundSchema = ListOpportunitiesResponseMeta$inboundSchema;
  /** @deprecated use `ListOpportunitiesResponseMeta$outboundSchema` instead. */
  export const outboundSchema = ListOpportunitiesResponseMeta$outboundSchema;
  /** @deprecated use `ListOpportunitiesResponseMeta$Outbound` instead. */
  export type Outbound = ListOpportunitiesResponseMeta$Outbound;
}

export function listOpportunitiesResponseMetaToJSON(
  listOpportunitiesResponseMeta: ListOpportunitiesResponseMeta,
): string {
  return JSON.stringify(
    ListOpportunitiesResponseMeta$outboundSchema.parse(
      listOpportunitiesResponseMeta,
    ),
  );
}

export function listOpportunitiesResponseMetaFromJSON(
  jsonString: string,
): SafeParseResult<ListOpportunitiesResponseMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListOpportunitiesResponseMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListOpportunitiesResponseMeta' from JSON`,
  );
}

/** @internal */
export const ListOpportunitiesResponseLinks$inboundSchema: z.ZodType<
  ListOpportunitiesResponseLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  previous: z.nullable(z.string()).optional(),
  current: z.string().optional(),
  next: z.nullable(z.string()).optional(),
});

/** @internal */
export type ListOpportunitiesResponseLinks$Outbound = {
  previous?: string | null | undefined;
  current?: string | undefined;
  next?: string | null | undefined;
};

/** @internal */
export const ListOpportunitiesResponseLinks$outboundSchema: z.ZodType<
  ListOpportunitiesResponseLinks$Outbound,
  z.ZodTypeDef,
  ListOpportunitiesResponseLinks
> = z.object({
  previous: z.nullable(z.string()).optional(),
  current: z.string().optional(),
  next: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOpportunitiesResponseLinks$ {
  /** @deprecated use `ListOpportunitiesResponseLinks$inboundSchema` instead. */
  export const inboundSchema = ListOpportunitiesResponseLinks$inboundSchema;
  /** @deprecated use `ListOpportunitiesResponseLinks$outboundSchema` instead. */
  export const outboundSchema = ListOpportunitiesResponseLinks$outboundSchema;
  /** @deprecated use `ListOpportunitiesResponseLinks$Outbound` instead. */
  export type Outbound = ListOpportunitiesResponseLinks$Outbound;
}

export function listOpportunitiesResponseLinksToJSON(
  listOpportunitiesResponseLinks: ListOpportunitiesResponseLinks,
): string {
  return JSON.stringify(
    ListOpportunitiesResponseLinks$outboundSchema.parse(
      listOpportunitiesResponseLinks,
    ),
  );
}

export function listOpportunitiesResponseLinksFromJSON(
  jsonString: string,
): SafeParseResult<ListOpportunitiesResponseLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListOpportunitiesResponseLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListOpportunitiesResponseLinks' from JSON`,
  );
}

/** @internal */
export const ListOpportunitiesResponse$inboundSchema: z.ZodType<
  ListOpportunitiesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number().int(),
  status: z.string(),
  service: z.string(),
  resource: z.string(),
  operation: z.string(),
  data: z.array(z.lazy(() => ListOpportunitiesResponseData$inboundSchema)),
  meta: z.lazy(() => ListOpportunitiesResponseMeta$inboundSchema).optional(),
  links: z.lazy(() => ListOpportunitiesResponseLinks$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "status_code": "statusCode",
  });
});

/** @internal */
export type ListOpportunitiesResponse$Outbound = {
  status_code: number;
  status: string;
  service: string;
  resource: string;
  operation: string;
  data: Array<ListOpportunitiesResponseData$Outbound>;
  meta?: ListOpportunitiesResponseMeta$Outbound | undefined;
  links?: ListOpportunitiesResponseLinks$Outbound | undefined;
};

/** @internal */
export const ListOpportunitiesResponse$outboundSchema: z.ZodType<
  ListOpportunitiesResponse$Outbound,
  z.ZodTypeDef,
  ListOpportunitiesResponse
> = z.object({
  statusCode: z.number().int(),
  status: z.string(),
  service: z.string(),
  resource: z.string(),
  operation: z.string(),
  data: z.array(z.lazy(() => ListOpportunitiesResponseData$outboundSchema)),
  meta: z.lazy(() => ListOpportunitiesResponseMeta$outboundSchema).optional(),
  links: z.lazy(() => ListOpportunitiesResponseLinks$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    statusCode: "status_code",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOpportunitiesResponse$ {
  /** @deprecated use `ListOpportunitiesResponse$inboundSchema` instead. */
  export const inboundSchema = ListOpportunitiesResponse$inboundSchema;
  /** @deprecated use `ListOpportunitiesResponse$outboundSchema` instead. */
  export const outboundSchema = ListOpportunitiesResponse$outboundSchema;
  /** @deprecated use `ListOpportunitiesResponse$Outbound` instead. */
  export type Outbound = ListOpportunitiesResponse$Outbound;
}

export function listOpportunitiesResponseToJSON(
  listOpportunitiesResponse: ListOpportunitiesResponse,
): string {
  return JSON.stringify(
    ListOpportunitiesResponse$outboundSchema.parse(listOpportunitiesResponse),
  );
}

export function listOpportunitiesResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListOpportunitiesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListOpportunitiesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListOpportunitiesResponse' from JSON`,
  );
}
