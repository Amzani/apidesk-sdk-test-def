/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { RFCDate } from "../../types/rfcdate.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Currency,
  Currency$inboundSchema,
  Currency$outboundSchema,
} from "./currency.js";

export type CreateOpportunityRequestValue6 = {};

export type CreateOpportunityRequestValue4 = {};

/**
 * The 'custom_fields.value' property holds the actual data or value for the custom field. This is where users input the specific information that the custom field is meant to capture. It is optional and should match the expected data type for the custom field.
 */
export type CreateOpportunityRequestValue =
  | CreateOpportunityRequestValue4
  | string
  | number
  | boolean
  | Array<string>
  | Array<CreateOpportunityRequestValue6>;

export type CreateOpportunityRequestCustomFields = {
  /**
   * Unique identifier for the custom field. This ID is required to specify which custom field is being referenced, ensuring that the correct data is associated with the opportunity.
   */
  id: string | null;
  /**
   * The 'custom_fields.name' property specifies the name of a custom field associated with the opportunity. This allows users to define and identify custom attributes that are specific to their business needs. It is optional and should be a descriptive string that clearly conveys the purpose of the custom field.
   */
  name?: string | null | undefined;
  /**
   * The 'custom_fields.description' property provides additional context or details about the custom field. It helps in understanding the purpose and usage of the custom field within the opportunity. This field is optional and should be a clear, informative string.
   */
  description?: string | null | undefined;
  /**
   * The 'custom_fields.value' property holds the actual data or value for the custom field. This is where users input the specific information that the custom field is meant to capture. It is optional and should match the expected data type for the custom field.
   */
  value?:
    | CreateOpportunityRequestValue4
    | string
    | number
    | boolean
    | Array<string>
    | Array<CreateOpportunityRequestValue6>
    | null
    | undefined;
};

export type CreateOpportunityRequestExtendPaths = {
  /**
   * The 'path' is a required JSONPath string that indicates where within the data structure the specified value should be applied. This is essential for accurately targeting and modifying specific parts of the opportunity data, ensuring that changes are applied correctly and efficiently.
   */
  path: string;
  /**
   * This property specifies the value to be set at a designated path within the CRM system. It is crucial for dynamically updating or adding specific data points related to the opportunity being created. The value can be of any type, allowing flexibility to accommodate various data formats as required by the operation.
   */
  value?: any | undefined;
};

export type CreateOpportunityRequestPassThrough = {
  /**
   * The 'service_id' is a mandatory string that identifies the specific service to which the pass-through operation should be applied. This is crucial for directing the opportunity creation request to the correct service within the CRM system, ensuring that the operation is executed in the intended context.
   */
  serviceId: string;
  /**
   * The 'operation_id' is an optional string that specifies a particular workflow operation for the pass-through. This is particularly useful when the opportunity creation involves multiple downstream requests, allowing for precise targeting of the operation within the CRM workflow.
   */
  operationId?: string | undefined;
  /**
   * The 'extend_object' is an optional object that allows for the inclusion of additional properties directly within the opportunity creation request. This flexibility supports custom extensions and modifications to the standard request structure, accommodating unique business requirements.
   */
  extendObject?: { [k: string]: any } | undefined;
  /**
   * The 'extend_paths' is an optional array of objects designed for structured data modifications using specified paths. This feature enables developers to apply precise changes to the opportunity data structure, facilitating complex data manipulation scenarios.
   */
  extendPaths?: Array<CreateOpportunityRequestExtendPaths> | undefined;
};

export type CreateOpportunityRequest = {
  /**
   * The title or name of the opportunity. This field is crucial as it serves as the primary identifier for the opportunity within the CRM system. It must be a descriptive string that clearly conveys the essence of the opportunity, aiding in easy recognition and tracking within sales pipelines.
   */
  title: string;
  /**
   * The unique identifier of the primary contact associated with the opportunity. This optional field links the opportunity to a specific contact, facilitating personalized communication and follow-up. Ensure the ID corresponds to an existing contact in the CRM to maintain data integrity.
   */
  primaryContactId?: string | null | undefined;
  /**
   * A description of the opportunity. This optional field allows you to provide additional context or details about the opportunity, which can be useful for internal tracking and understanding the opportunity's scope and potential impact.
   */
  description?: string | null | undefined;
  /**
   * The type of the opportunity. This optional field categorizes the opportunity, helping to organize and filter opportunities based on their nature or business area. Ensure the type is a valid string that aligns with your organization's classification system.
   */
  type?: string | null | undefined;
  /**
   * The monetary value associated with the opportunity. This optional field quantifies the potential financial impact of the opportunity, aiding in revenue forecasting and prioritization of sales efforts. It should be a numeric value representing the expected revenue from the opportunity.
   */
  monetaryAmount?: number | null | undefined;
  currency?: Currency | null | undefined;
  /**
   * Represents the likelihood of successfully closing the opportunity, expressed as a percentage. This value helps prioritize opportunities based on their potential success rate, aiding in strategic decision-making within the sales pipeline.
   */
  winProbability?: number | null | undefined;
  /**
   * Denotes the date when the opportunity is expected to be or has been closed. If this field is null, it indicates that the opportunity is still open. This helps in tracking the timeline and status of opportunities within the CRM.
   */
  closeDate?: RFCDate | null | undefined;
  /**
   * Identifies the specific reason for losing the opportunity using a unique identifier. This aids in analyzing patterns and reasons for lost opportunities, which can inform future sales strategies and improvements.
   */
  lossReasonId?: string | null | undefined;
  /**
   * Provides a textual explanation for why the opportunity was lost. This information is crucial for understanding the context of lost deals and can be used to refine sales approaches and address recurring issues.
   */
  lossReason?: string | null | undefined;
  /**
   * The unique identifier for the reason an opportunity was won. This ID helps categorize and analyze successful deals within the CRM. It should be a valid string that corresponds to a predefined reason in the system.
   */
  wonReasonId?: string | null | undefined;
  /**
   * A descriptive reason explaining why the opportunity was won. This field provides context for the success of the deal and aids in future strategy planning. It should be a clear and concise string that accurately reflects the reason for winning.
   */
  wonReason?: string | null | undefined;
  /**
   * The unique identifier for the pipeline associated with the opportunity. This ID is crucial for tracking the opportunity's progress within a specific sales pipeline. It must be a valid string that matches an existing pipeline in the CRM.
   */
  pipelineId?: string | null | undefined;
  /**
   * The unique identifier for the stage within the pipeline where the opportunity currently resides. This helps in managing and visualizing the opportunity's current status in the sales process. It should be a valid string that corresponds to a stage in the specified pipeline.
   */
  pipelineStageId?: string | null | undefined;
  /**
   * The unique identifier for the source from which the opportunity originated. This ID is used to track the origin of leads and assess the effectiveness of different lead sources. It must be a valid string that matches a known source in the CRM system.
   */
  sourceId?: string | null | undefined;
  /**
   * The unique identifier of the lead associated with the opportunity. This property links the opportunity to a specific lead, allowing for better tracking and management within the CRM. It should be a valid string that corresponds to an existing lead ID in the system.
   */
  leadId?: string | null | undefined;
  /**
   * The source from which the lead associated with the opportunity originated. This helps in understanding the lead's background and tailoring the sales approach accordingly. It should be a descriptive string indicating the lead's origin, such as 'web', 'referral', or 'event'.
   */
  leadSource?: string | null | undefined;
  /**
   * The unique identifier of the primary contact associated with the opportunity. This property is used to establish a direct link between the opportunity and a specific contact, facilitating communication and follow-up. It must be a valid string that matches an existing contact ID in the CRM.
   */
  contactId?: string | null | undefined;
  /**
   * An array containing the unique identifiers of all contacts associated with the opportunity. This allows for associating multiple contacts with a single opportunity, enabling comprehensive tracking of all involved parties. Each entry in the array should be a valid contact ID string.
   */
  contactIds?: Array<string> | undefined;
  /**
   * The unique identifier of the company associated with the opportunity. This ID links the opportunity to a specific company within the CRM, allowing for organized tracking and management of potential deals. It should be a valid string that corresponds to an existing company record in the system.
   */
  companyId?: string | null | undefined;
  /**
   * The name of the company associated with the opportunity. This field helps in identifying the company involved in the potential deal, providing clarity and context within the CRM. It should be a valid string representing the company's name as recognized in the system.
   */
  companyName?: string | null | undefined;
  /**
   * The unique identifier of the user who owns the opportunity. This ID is crucial for assigning responsibility and tracking the progress of the opportunity within the sales pipeline. It must be a valid string that corresponds to an existing user in the CRM system.
   */
  ownerId?: string | null | undefined;
  /**
   * The priority level of the opportunity. This field indicates the importance or urgency of the opportunity, helping to prioritize actions and resources. It should be a valid string that reflects the priority status as defined within the CRM system.
   */
  priority?: string | null | undefined;
  /**
   * The current status of the opportunity. This field tracks the stage of the opportunity within the sales process, aiding in pipeline management and forecasting. It should be a valid string that represents the opportunity's status as per the CRM's defined stages.
   */
  status?: string | null | undefined;
  /**
   * The unique identifier of the current status of the opportunity. This ID helps track the opportunity's progress within the sales pipeline. It should be a valid string that corresponds to a predefined status in the CRM system.
   */
  statusId?: string | null | undefined;
  /**
   * An array of tags associated with the opportunity. Tags are used to categorize and filter opportunities within the CRM, enhancing searchability and organization. Each tag should be a descriptive string that reflects the opportunity's characteristics or status.
   */
  tags?: Array<string> | null | undefined;
  /**
   * An array of custom fields that allow for additional, user-defined data to be attached to the opportunity. These fields enable customization and flexibility in capturing specific information relevant to the opportunity.
   */
  customFields?: Array<CreateOpportunityRequestCustomFields> | undefined;
  /**
   * The 'stage_last_changed_at' property records the date and time when the opportunity's stage was last updated. This timestamp is crucial for tracking the progress and changes in the sales pipeline. It should be formatted as an ISO 8601 date-time string and is optional.
   */
  stageLastChangedAt?: Date | null | undefined;
  /**
   * The 'pass_through' property allows for the inclusion of service-specific custom data or structured modifications when creating or updating resources. This is useful for integrating with specific services that require additional data not covered by standard fields. It is optional and should be structured as an array of key-value pairs or objects.
   */
  passThrough?: Array<CreateOpportunityRequestPassThrough> | undefined;
};

/** @internal */
export const CreateOpportunityRequestValue6$inboundSchema: z.ZodType<
  CreateOpportunityRequestValue6,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateOpportunityRequestValue6$Outbound = {};

/** @internal */
export const CreateOpportunityRequestValue6$outboundSchema: z.ZodType<
  CreateOpportunityRequestValue6$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequestValue6
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequestValue6$ {
  /** @deprecated use `CreateOpportunityRequestValue6$inboundSchema` instead. */
  export const inboundSchema = CreateOpportunityRequestValue6$inboundSchema;
  /** @deprecated use `CreateOpportunityRequestValue6$outboundSchema` instead. */
  export const outboundSchema = CreateOpportunityRequestValue6$outboundSchema;
  /** @deprecated use `CreateOpportunityRequestValue6$Outbound` instead. */
  export type Outbound = CreateOpportunityRequestValue6$Outbound;
}

export function createOpportunityRequestValue6ToJSON(
  createOpportunityRequestValue6: CreateOpportunityRequestValue6,
): string {
  return JSON.stringify(
    CreateOpportunityRequestValue6$outboundSchema.parse(
      createOpportunityRequestValue6,
    ),
  );
}

export function createOpportunityRequestValue6FromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequestValue6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateOpportunityRequestValue6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequestValue6' from JSON`,
  );
}

/** @internal */
export const CreateOpportunityRequestValue4$inboundSchema: z.ZodType<
  CreateOpportunityRequestValue4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateOpportunityRequestValue4$Outbound = {};

/** @internal */
export const CreateOpportunityRequestValue4$outboundSchema: z.ZodType<
  CreateOpportunityRequestValue4$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequestValue4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequestValue4$ {
  /** @deprecated use `CreateOpportunityRequestValue4$inboundSchema` instead. */
  export const inboundSchema = CreateOpportunityRequestValue4$inboundSchema;
  /** @deprecated use `CreateOpportunityRequestValue4$outboundSchema` instead. */
  export const outboundSchema = CreateOpportunityRequestValue4$outboundSchema;
  /** @deprecated use `CreateOpportunityRequestValue4$Outbound` instead. */
  export type Outbound = CreateOpportunityRequestValue4$Outbound;
}

export function createOpportunityRequestValue4ToJSON(
  createOpportunityRequestValue4: CreateOpportunityRequestValue4,
): string {
  return JSON.stringify(
    CreateOpportunityRequestValue4$outboundSchema.parse(
      createOpportunityRequestValue4,
    ),
  );
}

export function createOpportunityRequestValue4FromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequestValue4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateOpportunityRequestValue4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequestValue4' from JSON`,
  );
}

/** @internal */
export const CreateOpportunityRequestValue$inboundSchema: z.ZodType<
  CreateOpportunityRequestValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateOpportunityRequestValue4$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.string()),
  z.array(z.lazy(() => CreateOpportunityRequestValue6$inboundSchema)),
]);

/** @internal */
export type CreateOpportunityRequestValue$Outbound =
  | CreateOpportunityRequestValue4$Outbound
  | string
  | number
  | boolean
  | Array<string>
  | Array<CreateOpportunityRequestValue6$Outbound>;

/** @internal */
export const CreateOpportunityRequestValue$outboundSchema: z.ZodType<
  CreateOpportunityRequestValue$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequestValue
> = z.union([
  z.lazy(() => CreateOpportunityRequestValue4$outboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.string()),
  z.array(z.lazy(() => CreateOpportunityRequestValue6$outboundSchema)),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequestValue$ {
  /** @deprecated use `CreateOpportunityRequestValue$inboundSchema` instead. */
  export const inboundSchema = CreateOpportunityRequestValue$inboundSchema;
  /** @deprecated use `CreateOpportunityRequestValue$outboundSchema` instead. */
  export const outboundSchema = CreateOpportunityRequestValue$outboundSchema;
  /** @deprecated use `CreateOpportunityRequestValue$Outbound` instead. */
  export type Outbound = CreateOpportunityRequestValue$Outbound;
}

export function createOpportunityRequestValueToJSON(
  createOpportunityRequestValue: CreateOpportunityRequestValue,
): string {
  return JSON.stringify(
    CreateOpportunityRequestValue$outboundSchema.parse(
      createOpportunityRequestValue,
    ),
  );
}

export function createOpportunityRequestValueFromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequestValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateOpportunityRequestValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequestValue' from JSON`,
  );
}

/** @internal */
export const CreateOpportunityRequestCustomFields$inboundSchema: z.ZodType<
  CreateOpportunityRequestCustomFields,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()),
  name: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  value: z.nullable(
    z.union([
      z.lazy(() => CreateOpportunityRequestValue4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.string()),
      z.array(z.lazy(() => CreateOpportunityRequestValue6$inboundSchema)),
    ]),
  ).optional(),
});

/** @internal */
export type CreateOpportunityRequestCustomFields$Outbound = {
  id: string | null;
  name?: string | null | undefined;
  description?: string | null | undefined;
  value?:
    | CreateOpportunityRequestValue4$Outbound
    | string
    | number
    | boolean
    | Array<string>
    | Array<CreateOpportunityRequestValue6$Outbound>
    | null
    | undefined;
};

/** @internal */
export const CreateOpportunityRequestCustomFields$outboundSchema: z.ZodType<
  CreateOpportunityRequestCustomFields$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequestCustomFields
> = z.object({
  id: z.nullable(z.string()),
  name: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  value: z.nullable(
    z.union([
      z.lazy(() => CreateOpportunityRequestValue4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.string()),
      z.array(z.lazy(() => CreateOpportunityRequestValue6$outboundSchema)),
    ]),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequestCustomFields$ {
  /** @deprecated use `CreateOpportunityRequestCustomFields$inboundSchema` instead. */
  export const inboundSchema =
    CreateOpportunityRequestCustomFields$inboundSchema;
  /** @deprecated use `CreateOpportunityRequestCustomFields$outboundSchema` instead. */
  export const outboundSchema =
    CreateOpportunityRequestCustomFields$outboundSchema;
  /** @deprecated use `CreateOpportunityRequestCustomFields$Outbound` instead. */
  export type Outbound = CreateOpportunityRequestCustomFields$Outbound;
}

export function createOpportunityRequestCustomFieldsToJSON(
  createOpportunityRequestCustomFields: CreateOpportunityRequestCustomFields,
): string {
  return JSON.stringify(
    CreateOpportunityRequestCustomFields$outboundSchema.parse(
      createOpportunityRequestCustomFields,
    ),
  );
}

export function createOpportunityRequestCustomFieldsFromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequestCustomFields, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateOpportunityRequestCustomFields$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequestCustomFields' from JSON`,
  );
}

/** @internal */
export const CreateOpportunityRequestExtendPaths$inboundSchema: z.ZodType<
  CreateOpportunityRequestExtendPaths,
  z.ZodTypeDef,
  unknown
> = z.object({
  path: z.string(),
  value: z.any().optional(),
});

/** @internal */
export type CreateOpportunityRequestExtendPaths$Outbound = {
  path: string;
  value?: any | undefined;
};

/** @internal */
export const CreateOpportunityRequestExtendPaths$outboundSchema: z.ZodType<
  CreateOpportunityRequestExtendPaths$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequestExtendPaths
> = z.object({
  path: z.string(),
  value: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequestExtendPaths$ {
  /** @deprecated use `CreateOpportunityRequestExtendPaths$inboundSchema` instead. */
  export const inboundSchema =
    CreateOpportunityRequestExtendPaths$inboundSchema;
  /** @deprecated use `CreateOpportunityRequestExtendPaths$outboundSchema` instead. */
  export const outboundSchema =
    CreateOpportunityRequestExtendPaths$outboundSchema;
  /** @deprecated use `CreateOpportunityRequestExtendPaths$Outbound` instead. */
  export type Outbound = CreateOpportunityRequestExtendPaths$Outbound;
}

export function createOpportunityRequestExtendPathsToJSON(
  createOpportunityRequestExtendPaths: CreateOpportunityRequestExtendPaths,
): string {
  return JSON.stringify(
    CreateOpportunityRequestExtendPaths$outboundSchema.parse(
      createOpportunityRequestExtendPaths,
    ),
  );
}

export function createOpportunityRequestExtendPathsFromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequestExtendPaths, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateOpportunityRequestExtendPaths$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequestExtendPaths' from JSON`,
  );
}

/** @internal */
export const CreateOpportunityRequestPassThrough$inboundSchema: z.ZodType<
  CreateOpportunityRequestPassThrough,
  z.ZodTypeDef,
  unknown
> = z.object({
  service_id: z.string(),
  operation_id: z.string().optional(),
  extend_object: z.record(z.any()).optional(),
  extend_paths: z.array(
    z.lazy(() => CreateOpportunityRequestExtendPaths$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "service_id": "serviceId",
    "operation_id": "operationId",
    "extend_object": "extendObject",
    "extend_paths": "extendPaths",
  });
});

/** @internal */
export type CreateOpportunityRequestPassThrough$Outbound = {
  service_id: string;
  operation_id?: string | undefined;
  extend_object?: { [k: string]: any } | undefined;
  extend_paths?:
    | Array<CreateOpportunityRequestExtendPaths$Outbound>
    | undefined;
};

/** @internal */
export const CreateOpportunityRequestPassThrough$outboundSchema: z.ZodType<
  CreateOpportunityRequestPassThrough$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequestPassThrough
> = z.object({
  serviceId: z.string(),
  operationId: z.string().optional(),
  extendObject: z.record(z.any()).optional(),
  extendPaths: z.array(
    z.lazy(() => CreateOpportunityRequestExtendPaths$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    serviceId: "service_id",
    operationId: "operation_id",
    extendObject: "extend_object",
    extendPaths: "extend_paths",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequestPassThrough$ {
  /** @deprecated use `CreateOpportunityRequestPassThrough$inboundSchema` instead. */
  export const inboundSchema =
    CreateOpportunityRequestPassThrough$inboundSchema;
  /** @deprecated use `CreateOpportunityRequestPassThrough$outboundSchema` instead. */
  export const outboundSchema =
    CreateOpportunityRequestPassThrough$outboundSchema;
  /** @deprecated use `CreateOpportunityRequestPassThrough$Outbound` instead. */
  export type Outbound = CreateOpportunityRequestPassThrough$Outbound;
}

export function createOpportunityRequestPassThroughToJSON(
  createOpportunityRequestPassThrough: CreateOpportunityRequestPassThrough,
): string {
  return JSON.stringify(
    CreateOpportunityRequestPassThrough$outboundSchema.parse(
      createOpportunityRequestPassThrough,
    ),
  );
}

export function createOpportunityRequestPassThroughFromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequestPassThrough, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateOpportunityRequestPassThrough$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequestPassThrough' from JSON`,
  );
}

/** @internal */
export const CreateOpportunityRequest$inboundSchema: z.ZodType<
  CreateOpportunityRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  title: z.string(),
  primary_contact_id: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  type: z.nullable(z.string()).optional(),
  monetary_amount: z.nullable(z.number()).optional(),
  currency: z.nullable(Currency$inboundSchema).optional(),
  win_probability: z.nullable(z.number()).optional(),
  close_date: z.nullable(z.string().transform(v => new RFCDate(v))).optional(),
  loss_reason_id: z.nullable(z.string()).optional(),
  loss_reason: z.nullable(z.string()).optional(),
  won_reason_id: z.nullable(z.string()).optional(),
  won_reason: z.nullable(z.string()).optional(),
  pipeline_id: z.nullable(z.string()).optional(),
  pipeline_stage_id: z.nullable(z.string()).optional(),
  source_id: z.nullable(z.string()).optional(),
  lead_id: z.nullable(z.string()).optional(),
  lead_source: z.nullable(z.string()).optional(),
  contact_id: z.nullable(z.string()).optional(),
  contact_ids: z.array(z.string()).optional(),
  company_id: z.nullable(z.string()).optional(),
  company_name: z.nullable(z.string()).optional(),
  owner_id: z.nullable(z.string()).optional(),
  priority: z.nullable(z.string()).optional(),
  status: z.nullable(z.string()).optional(),
  status_id: z.nullable(z.string()).optional(),
  tags: z.nullable(z.array(z.string())).optional(),
  custom_fields: z.array(
    z.lazy(() => CreateOpportunityRequestCustomFields$inboundSchema),
  ).optional(),
  stage_last_changed_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  pass_through: z.array(
    z.lazy(() => CreateOpportunityRequestPassThrough$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "primary_contact_id": "primaryContactId",
    "monetary_amount": "monetaryAmount",
    "win_probability": "winProbability",
    "close_date": "closeDate",
    "loss_reason_id": "lossReasonId",
    "loss_reason": "lossReason",
    "won_reason_id": "wonReasonId",
    "won_reason": "wonReason",
    "pipeline_id": "pipelineId",
    "pipeline_stage_id": "pipelineStageId",
    "source_id": "sourceId",
    "lead_id": "leadId",
    "lead_source": "leadSource",
    "contact_id": "contactId",
    "contact_ids": "contactIds",
    "company_id": "companyId",
    "company_name": "companyName",
    "owner_id": "ownerId",
    "status_id": "statusId",
    "custom_fields": "customFields",
    "stage_last_changed_at": "stageLastChangedAt",
    "pass_through": "passThrough",
  });
});

/** @internal */
export type CreateOpportunityRequest$Outbound = {
  title: string;
  primary_contact_id?: string | null | undefined;
  description?: string | null | undefined;
  type?: string | null | undefined;
  monetary_amount?: number | null | undefined;
  currency?: string | null | undefined;
  win_probability?: number | null | undefined;
  close_date?: string | null | undefined;
  loss_reason_id?: string | null | undefined;
  loss_reason?: string | null | undefined;
  won_reason_id?: string | null | undefined;
  won_reason?: string | null | undefined;
  pipeline_id?: string | null | undefined;
  pipeline_stage_id?: string | null | undefined;
  source_id?: string | null | undefined;
  lead_id?: string | null | undefined;
  lead_source?: string | null | undefined;
  contact_id?: string | null | undefined;
  contact_ids?: Array<string> | undefined;
  company_id?: string | null | undefined;
  company_name?: string | null | undefined;
  owner_id?: string | null | undefined;
  priority?: string | null | undefined;
  status?: string | null | undefined;
  status_id?: string | null | undefined;
  tags?: Array<string> | null | undefined;
  custom_fields?:
    | Array<CreateOpportunityRequestCustomFields$Outbound>
    | undefined;
  stage_last_changed_at?: string | null | undefined;
  pass_through?:
    | Array<CreateOpportunityRequestPassThrough$Outbound>
    | undefined;
};

/** @internal */
export const CreateOpportunityRequest$outboundSchema: z.ZodType<
  CreateOpportunityRequest$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequest
> = z.object({
  title: z.string(),
  primaryContactId: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  type: z.nullable(z.string()).optional(),
  monetaryAmount: z.nullable(z.number()).optional(),
  currency: z.nullable(Currency$outboundSchema).optional(),
  winProbability: z.nullable(z.number()).optional(),
  closeDate: z.nullable(z.instanceof(RFCDate).transform(v => v.toString()))
    .optional(),
  lossReasonId: z.nullable(z.string()).optional(),
  lossReason: z.nullable(z.string()).optional(),
  wonReasonId: z.nullable(z.string()).optional(),
  wonReason: z.nullable(z.string()).optional(),
  pipelineId: z.nullable(z.string()).optional(),
  pipelineStageId: z.nullable(z.string()).optional(),
  sourceId: z.nullable(z.string()).optional(),
  leadId: z.nullable(z.string()).optional(),
  leadSource: z.nullable(z.string()).optional(),
  contactId: z.nullable(z.string()).optional(),
  contactIds: z.array(z.string()).optional(),
  companyId: z.nullable(z.string()).optional(),
  companyName: z.nullable(z.string()).optional(),
  ownerId: z.nullable(z.string()).optional(),
  priority: z.nullable(z.string()).optional(),
  status: z.nullable(z.string()).optional(),
  statusId: z.nullable(z.string()).optional(),
  tags: z.nullable(z.array(z.string())).optional(),
  customFields: z.array(
    z.lazy(() => CreateOpportunityRequestCustomFields$outboundSchema),
  ).optional(),
  stageLastChangedAt: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  passThrough: z.array(
    z.lazy(() => CreateOpportunityRequestPassThrough$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    primaryContactId: "primary_contact_id",
    monetaryAmount: "monetary_amount",
    winProbability: "win_probability",
    closeDate: "close_date",
    lossReasonId: "loss_reason_id",
    lossReason: "loss_reason",
    wonReasonId: "won_reason_id",
    wonReason: "won_reason",
    pipelineId: "pipeline_id",
    pipelineStageId: "pipeline_stage_id",
    sourceId: "source_id",
    leadId: "lead_id",
    leadSource: "lead_source",
    contactId: "contact_id",
    contactIds: "contact_ids",
    companyId: "company_id",
    companyName: "company_name",
    ownerId: "owner_id",
    statusId: "status_id",
    customFields: "custom_fields",
    stageLastChangedAt: "stage_last_changed_at",
    passThrough: "pass_through",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequest$ {
  /** @deprecated use `CreateOpportunityRequest$inboundSchema` instead. */
  export const inboundSchema = CreateOpportunityRequest$inboundSchema;
  /** @deprecated use `CreateOpportunityRequest$outboundSchema` instead. */
  export const outboundSchema = CreateOpportunityRequest$outboundSchema;
  /** @deprecated use `CreateOpportunityRequest$Outbound` instead. */
  export type Outbound = CreateOpportunityRequest$Outbound;
}

export function createOpportunityRequestToJSON(
  createOpportunityRequest: CreateOpportunityRequest,
): string {
  return JSON.stringify(
    CreateOpportunityRequest$outboundSchema.parse(createOpportunityRequest),
  );
}

export function createOpportunityRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateOpportunityRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequest' from JSON`,
  );
}
