/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { RFCDate } from "../../types/rfcdate.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Specifies the currency type for the opportunity's financial transactions, following the ISO 4217 standard. This property is optional and should be provided if the opportunity involves monetary values, ensuring accurate financial tracking within the CRM.
 */
export const CreateOpportunityRequestCurrency = {
  UnknownCurrency: "UNKNOWN_CURRENCY",
  Aed: "AED",
  Afn: "AFN",
  All: "ALL",
  Amd: "AMD",
  Ang: "ANG",
  Aoa: "AOA",
  Ars: "ARS",
  Aud: "AUD",
  Awg: "AWG",
  Azn: "AZN",
  Bam: "BAM",
  Bbd: "BBD",
  Bdt: "BDT",
  Bgn: "BGN",
  Bhd: "BHD",
  Bif: "BIF",
  Bmd: "BMD",
  Bnd: "BND",
  Bob: "BOB",
  Bov: "BOV",
  Brl: "BRL",
  Bsd: "BSD",
  Btn: "BTN",
  Bwp: "BWP",
  Byr: "BYR",
  Bzd: "BZD",
  Cad: "CAD",
  Cdf: "CDF",
  Che: "CHE",
  Chf: "CHF",
  Chw: "CHW",
  Clf: "CLF",
  Clp: "CLP",
  Cny: "CNY",
  Cop: "COP",
  Cou: "COU",
  Crc: "CRC",
  Cuc: "CUC",
  Cup: "CUP",
  Cve: "CVE",
  Czk: "CZK",
  Djf: "DJF",
  Dkk: "DKK",
  Dop: "DOP",
  Dzd: "DZD",
  Egp: "EGP",
  Ern: "ERN",
  Etb: "ETB",
  Eur: "EUR",
  Fjd: "FJD",
  Fkp: "FKP",
  Gbp: "GBP",
  Gel: "GEL",
  Ghs: "GHS",
  Gip: "GIP",
  Gmd: "GMD",
  Gnf: "GNF",
  Gtq: "GTQ",
  Gyd: "GYD",
  Hkd: "HKD",
  Hnl: "HNL",
  Hrk: "HRK",
  Htg: "HTG",
  Huf: "HUF",
  Idr: "IDR",
  Ils: "ILS",
  Inr: "INR",
  Iqd: "IQD",
  Irr: "IRR",
  Isk: "ISK",
  Jmd: "JMD",
  Jod: "JOD",
  Jpy: "JPY",
  Kes: "KES",
  Kgs: "KGS",
  Khr: "KHR",
  Kmf: "KMF",
  Kpw: "KPW",
  Krw: "KRW",
  Kwd: "KWD",
  Kyd: "KYD",
  Kzt: "KZT",
  Lak: "LAK",
  Lbp: "LBP",
  Lkr: "LKR",
  Lrd: "LRD",
  Lsl: "LSL",
  Ltl: "LTL",
  Lvl: "LVL",
  Lyd: "LYD",
  Mad: "MAD",
  Mdl: "MDL",
  Mga: "MGA",
  Mkd: "MKD",
  Mmk: "MMK",
  Mnt: "MNT",
  Mop: "MOP",
  Mro: "MRO",
  Mur: "MUR",
  Mvr: "MVR",
  Mwk: "MWK",
  Mxn: "MXN",
  Mxv: "MXV",
  Myr: "MYR",
  Mzn: "MZN",
  Nad: "NAD",
  Ngn: "NGN",
  Nio: "NIO",
  Nok: "NOK",
  Npr: "NPR",
  Nzd: "NZD",
  Omr: "OMR",
  Pab: "PAB",
  Pen: "PEN",
  Pgk: "PGK",
  Php: "PHP",
  Pkr: "PKR",
  Pln: "PLN",
  Pyg: "PYG",
  Qar: "QAR",
  Ron: "RON",
  Rsd: "RSD",
  Rub: "RUB",
  Rwf: "RWF",
  Sar: "SAR",
  Sbd: "SBD",
  Scr: "SCR",
  Sdg: "SDG",
  Sek: "SEK",
  Sgd: "SGD",
  Shp: "SHP",
  Sll: "SLL",
  Sos: "SOS",
  Srd: "SRD",
  Ssp: "SSP",
  Std: "STD",
  Svc: "SVC",
  Syp: "SYP",
  Szl: "SZL",
  Thb: "THB",
  Tjs: "TJS",
  Tmt: "TMT",
  Tnd: "TND",
  Top: "TOP",
  Trc: "TRC",
  Try: "TRY",
  Ttd: "TTD",
  Twd: "TWD",
  Tzs: "TZS",
  Uah: "UAH",
  Ugx: "UGX",
  Usd: "USD",
  Usn: "USN",
  Uss: "USS",
  Uyi: "UYI",
  Uyu: "UYU",
  Uzs: "UZS",
  Vef: "VEF",
  Vnd: "VND",
  Vuv: "VUV",
  Wst: "WST",
  Xaf: "XAF",
  Xag: "XAG",
  Xau: "XAU",
  Xba: "XBA",
  Xbb: "XBB",
  Xbc: "XBC",
  Xbd: "XBD",
  Xcd: "XCD",
  Xdr: "XDR",
  Xof: "XOF",
  Xpd: "XPD",
  Xpf: "XPF",
  Xpt: "XPT",
  Xts: "XTS",
  Xxx: "XXX",
  Yer: "YER",
  Zar: "ZAR",
  Zmk: "ZMK",
  Zmw: "ZMW",
  Btc: "BTC",
  Eth: "ETH",
} as const;
/**
 * Specifies the currency type for the opportunity's financial transactions, following the ISO 4217 standard. This property is optional and should be provided if the opportunity involves monetary values, ensuring accurate financial tracking within the CRM.
 */
export type CreateOpportunityRequestCurrency = ClosedEnum<
  typeof CreateOpportunityRequestCurrency
>;

export type CreateOpportunityRequestValue6 = {};

export type CreateOpportunityRequestValue4 = {};

/**
 * The actual data or content stored in the custom field. This value should be formatted according to the type of data it represents, such as a string, number, or date, and should accurately reflect the information intended for the custom field.
 */
export type CreateOpportunityRequestValue =
  | CreateOpportunityRequestValue4
  | string
  | number
  | boolean
  | Array<string>
  | Array<CreateOpportunityRequestValue6>;

export type CreateOpportunityRequestCustomFields = {
  /**
   * Unique identifier for the custom field. This ID is used to specify which custom field the value corresponds to, ensuring the correct association of user-defined data with the opportunity. It must match an existing custom field ID configured in your CRM system.
   */
  id: string | null;
  /**
   * The name assigned to a custom field within the opportunity. This field allows users to label and identify custom data points specific to their business needs. It should be a descriptive string that clearly conveys the purpose of the custom field.
   */
  name?: string | null | undefined;
  /**
   * A detailed explanation of the custom field's purpose and usage within the opportunity. This description helps users understand the context and relevance of the custom field, ensuring it aligns with their business processes.
   */
  description?: string | null | undefined;
  /**
   * The actual data or content stored in the custom field. This value should be formatted according to the type of data it represents, such as a string, number, or date, and should accurately reflect the information intended for the custom field.
   */
  value?:
    | CreateOpportunityRequestValue4
    | string
    | number
    | boolean
    | Array<string>
    | Array<CreateOpportunityRequestValue6>
    | null
    | undefined;
};

export type CreateOpportunityRequestExtendPaths = {
  /**
   * A JSONPath string that specifies the exact location within the request payload where a value should be applied. This is essential for precise data manipulation and ensures that modifications are accurately targeted. The path must be a valid JSONPath expression that corresponds to an existing element in the payload.
   */
  path: string;
  /**
   * Specifies the value to be set at the designated path within the CRM opportunity object. This property is crucial for dynamically extending or modifying the opportunity's data structure, allowing for flexible customization based on specific business needs. The value can be of any data type, including strings, numbers, or objects, and must align with the expected format of the path it is being set to, ensuring seamless integration and operation within the CRM system.
   */
  value?: any | undefined;
};

export type CreateOpportunityRequestPassThrough = {
  /**
   * Specifies the unique identifier for the service to which this pass-through operation should be applied. This is crucial for directing the opportunity creation request to the correct service within the CRM system. The service_id must be a valid string that corresponds to an existing service configuration.
   */
  serviceId: string;
  /**
   * An optional identifier for a specific workflow operation that this pass-through should target. This is particularly useful when the Unify application is executing multiple downstream requests, allowing for precise operation tracking and management. If provided, it must be a valid string that matches an existing operation ID.
   */
  operationId?: string | undefined;
  /**
   * A flexible object that allows for the inclusion of additional properties to extend the functionality of the opportunity creation request. This can be used to pass custom data that may be required by specific services or workflows. The object can contain any key-value pairs as needed.
   */
  extendObject?: { [k: string]: any } | undefined;
  /**
   * An array of objects designed for structured data modifications using specified paths. This allows developers to apply changes to specific parts of the request payload, enhancing customization and control over the data being sent. Each object in the array should follow the defined structure for path modifications.
   */
  extendPaths?: Array<CreateOpportunityRequestExtendPaths> | undefined;
};

export type CreateOpportunityRequest = {
  /**
   * The title or name of the opportunity. This is a required field and should be a concise, descriptive name that clearly identifies the opportunity within the CRM system. It serves as the primary label for the opportunity, making it easily recognizable in lists and reports.
   */
  title: string;
  /**
   * The unique identifier of the primary contact associated with the opportunity. This required field must be a valid string that corresponds to an existing contact in the CRM. It links the opportunity to a specific individual, facilitating communication and follow-up actions.
   */
  primaryContactId: string | null;
  /**
   * A description of the opportunity. This optional field allows you to provide additional context or details about the opportunity, such as its background, objectives, or any relevant notes. It helps in understanding the opportunity's scope and significance within the sales pipeline.
   */
  description?: string | null | undefined;
  /**
   * The type of the opportunity. This optional field can be used to categorize the opportunity, such as 'New Business', 'Renewal', or 'Upsell'. It aids in organizing and filtering opportunities based on their nature or strategic importance.
   */
  type?: string | null | undefined;
  /**
   * The monetary value associated with the opportunity. This optional field should be a numeric value representing the potential revenue from the opportunity. It is crucial for forecasting and assessing the financial impact of the opportunity within the sales pipeline.
   */
  monetaryAmount?: number | null | undefined;
  /**
   * Specifies the currency type for the opportunity's financial transactions, following the ISO 4217 standard. This property is optional and should be provided if the opportunity involves monetary values, ensuring accurate financial tracking within the CRM.
   */
  currency?: CreateOpportunityRequestCurrency | null | undefined;
  /**
   * Represents the likelihood of successfully closing the opportunity, expressed as a percentage from 0 to 100. This optional field helps in forecasting and prioritizing opportunities based on their potential success rate.
   */
  winProbability?: number | null | undefined;
  /**
   * Indicates the date when the opportunity was finalized, formatted as YYYY-MM-DD. If not provided, it implies the opportunity is still open. This optional field is crucial for tracking the sales cycle timeline.
   */
  closeDate?: RFCDate | null | undefined;
  /**
   * The unique identifier for the reason an opportunity was lost, used for categorizing and analyzing lost deals. This optional field aids in understanding patterns and improving future sales strategies.
   */
  lossReasonId?: string | null | undefined;
  /**
   * Describes the reason why the opportunity was not successful, providing context for the loss. This optional field is useful for qualitative analysis and refining sales approaches.
   */
  lossReason?: string | null | undefined;
  /**
   * The unique identifier for the reason an opportunity was marked as won. This ID should correspond to a predefined reason within the CRM system, allowing for consistent tracking and reporting of successful deals.
   */
  wonReasonId?: string | null | undefined;
  /**
   * A descriptive text explaining why the opportunity was won. This field allows sales teams to provide context and insights into successful deals, aiding in future strategy and analysis.
   */
  wonReason?: string | null | undefined;
  /**
   * The unique identifier for the sales pipeline associated with this opportunity. This ID helps categorize the opportunity within the correct pipeline, ensuring accurate tracking and management of sales processes.
   */
  pipelineId?: string | null | undefined;
  /**
   * The unique identifier for the specific stage within the sales pipeline where the opportunity currently resides. This helps in monitoring the progress of the opportunity and managing the sales funnel effectively.
   */
  pipelineStageId?: string | null | undefined;
  /**
   * The unique identifier for the source from which the opportunity originated. This ID is crucial for understanding lead generation channels and optimizing marketing efforts.
   */
  sourceId?: string | null | undefined;
  /**
   * The unique identifier for the lead associated with this opportunity. This ID links the opportunity to a specific lead, allowing for seamless tracking and management within the CRM. It should be a valid string that corresponds to an existing lead record in the system.
   */
  leadId?: string | null | undefined;
  /**
   * Specifies the origin of the lead related to this opportunity, such as 'web', 'referral', or 'advertisement'. This information helps in analyzing the effectiveness of different lead generation channels. It should be a descriptive string that accurately reflects the lead's source.
   */
  leadSource?: string | null | undefined;
  /**
   * The unique identifier for the primary contact associated with this opportunity. This ID is crucial for linking the opportunity to a specific contact, facilitating communication and relationship management. It must be a valid string that matches an existing contact record in the CRM.
   */
  contactId?: string | null | undefined;
  /**
   * An array containing the unique identifiers of all contacts linked to this opportunity. This allows for associating multiple contacts with a single opportunity, which is useful for opportunities involving several stakeholders. Each entry in the array should be a valid string corresponding to a contact ID.
   */
  contactIds?: Array<string> | undefined;
  /**
   * The unique identifier for the company linked to this opportunity. This ID should be a valid string that corresponds to an existing company record in the CRM. It helps associate the opportunity with the correct company, facilitating accurate tracking and management within the sales pipeline.
   */
  companyId?: string | null | undefined;
  /**
   * The name of the company associated with the opportunity. This should be a valid string representing the company's official name, used to easily identify the company within the CRM. Providing this helps in maintaining clarity and context for the opportunity's business association.
   */
  companyName?: string | null | undefined;
  /**
   * The unique identifier of the user responsible for managing the opportunity. This ID should match a valid user record in the CRM, ensuring that the opportunity is assigned to the correct owner for follow-up and management. It is crucial for accountability and tracking progress within the sales process.
   */
  ownerId?: string | null | undefined;
  /**
   * Indicates the priority level of the opportunity, such as 'High', 'Medium', or 'Low'. This string helps in categorizing and managing opportunities based on their urgency and importance, allowing sales teams to prioritize their efforts effectively.
   */
  priority?: string | null | undefined;
  /**
   * Represents the current status of the opportunity, such as 'Open', 'Closed', or 'In Progress'. This string is essential for tracking the opportunity's lifecycle and progress within the CRM, enabling teams to manage and update the sales pipeline accurately.
   */
  status?: string | null | undefined;
  /**
   * The unique identifier of the current status of the opportunity. This property allows you to specify the current stage of the opportunity within the sales pipeline, such as 'New', 'In Progress', or 'Closed'. It helps in tracking and managing the opportunity's lifecycle effectively. Ensure the status_id corresponds to a valid status within your CRM system.
   */
  statusId?: string | null | undefined;
  /**
   * An array of tags associated with the opportunity. Tags are used to categorize and filter opportunities based on specific criteria or attributes, such as 'High Priority', 'Follow-up', or 'VIP Client'. Each tag should be a string that represents a meaningful label for the opportunity.
   */
  tags?: Array<string> | null | undefined;
  /**
   * An array of custom fields that allow you to include additional, user-defined data specific to the opportunity. Custom fields enable you to tailor the opportunity record to meet specific business needs or capture unique information not covered by standard fields. Each entry in the array should include an 'id' and a corresponding value.
   */
  customFields?: Array<CreateOpportunityRequestCustomFields> | undefined;
  /**
   * The timestamp indicating when the opportunity's stage was last updated. This should be in ISO 8601 format (e.g., '2023-01-01T12:00:00Z') and helps track the progression of the opportunity through different stages in the sales pipeline.
   */
  stageLastChangedAt?: Date | null | undefined;
  /**
   * An array that allows the inclusion of service-specific custom data or modifications when creating or updating an opportunity. This property is useful for passing additional parameters that are not covered by standard fields, enabling more flexible and tailored integrations.
   */
  passThrough?: Array<CreateOpportunityRequestPassThrough> | undefined;
};

/** @internal */
export const CreateOpportunityRequestCurrency$inboundSchema: z.ZodNativeEnum<
  typeof CreateOpportunityRequestCurrency
> = z.nativeEnum(CreateOpportunityRequestCurrency);

/** @internal */
export const CreateOpportunityRequestCurrency$outboundSchema: z.ZodNativeEnum<
  typeof CreateOpportunityRequestCurrency
> = CreateOpportunityRequestCurrency$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequestCurrency$ {
  /** @deprecated use `CreateOpportunityRequestCurrency$inboundSchema` instead. */
  export const inboundSchema = CreateOpportunityRequestCurrency$inboundSchema;
  /** @deprecated use `CreateOpportunityRequestCurrency$outboundSchema` instead. */
  export const outboundSchema = CreateOpportunityRequestCurrency$outboundSchema;
}

/** @internal */
export const CreateOpportunityRequestValue6$inboundSchema: z.ZodType<
  CreateOpportunityRequestValue6,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateOpportunityRequestValue6$Outbound = {};

/** @internal */
export const CreateOpportunityRequestValue6$outboundSchema: z.ZodType<
  CreateOpportunityRequestValue6$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequestValue6
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequestValue6$ {
  /** @deprecated use `CreateOpportunityRequestValue6$inboundSchema` instead. */
  export const inboundSchema = CreateOpportunityRequestValue6$inboundSchema;
  /** @deprecated use `CreateOpportunityRequestValue6$outboundSchema` instead. */
  export const outboundSchema = CreateOpportunityRequestValue6$outboundSchema;
  /** @deprecated use `CreateOpportunityRequestValue6$Outbound` instead. */
  export type Outbound = CreateOpportunityRequestValue6$Outbound;
}

export function createOpportunityRequestValue6ToJSON(
  createOpportunityRequestValue6: CreateOpportunityRequestValue6,
): string {
  return JSON.stringify(
    CreateOpportunityRequestValue6$outboundSchema.parse(
      createOpportunityRequestValue6,
    ),
  );
}

export function createOpportunityRequestValue6FromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequestValue6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateOpportunityRequestValue6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequestValue6' from JSON`,
  );
}

/** @internal */
export const CreateOpportunityRequestValue4$inboundSchema: z.ZodType<
  CreateOpportunityRequestValue4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateOpportunityRequestValue4$Outbound = {};

/** @internal */
export const CreateOpportunityRequestValue4$outboundSchema: z.ZodType<
  CreateOpportunityRequestValue4$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequestValue4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequestValue4$ {
  /** @deprecated use `CreateOpportunityRequestValue4$inboundSchema` instead. */
  export const inboundSchema = CreateOpportunityRequestValue4$inboundSchema;
  /** @deprecated use `CreateOpportunityRequestValue4$outboundSchema` instead. */
  export const outboundSchema = CreateOpportunityRequestValue4$outboundSchema;
  /** @deprecated use `CreateOpportunityRequestValue4$Outbound` instead. */
  export type Outbound = CreateOpportunityRequestValue4$Outbound;
}

export function createOpportunityRequestValue4ToJSON(
  createOpportunityRequestValue4: CreateOpportunityRequestValue4,
): string {
  return JSON.stringify(
    CreateOpportunityRequestValue4$outboundSchema.parse(
      createOpportunityRequestValue4,
    ),
  );
}

export function createOpportunityRequestValue4FromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequestValue4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateOpportunityRequestValue4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequestValue4' from JSON`,
  );
}

/** @internal */
export const CreateOpportunityRequestValue$inboundSchema: z.ZodType<
  CreateOpportunityRequestValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateOpportunityRequestValue4$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.string()),
  z.array(z.lazy(() => CreateOpportunityRequestValue6$inboundSchema)),
]);

/** @internal */
export type CreateOpportunityRequestValue$Outbound =
  | CreateOpportunityRequestValue4$Outbound
  | string
  | number
  | boolean
  | Array<string>
  | Array<CreateOpportunityRequestValue6$Outbound>;

/** @internal */
export const CreateOpportunityRequestValue$outboundSchema: z.ZodType<
  CreateOpportunityRequestValue$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequestValue
> = z.union([
  z.lazy(() => CreateOpportunityRequestValue4$outboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.string()),
  z.array(z.lazy(() => CreateOpportunityRequestValue6$outboundSchema)),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequestValue$ {
  /** @deprecated use `CreateOpportunityRequestValue$inboundSchema` instead. */
  export const inboundSchema = CreateOpportunityRequestValue$inboundSchema;
  /** @deprecated use `CreateOpportunityRequestValue$outboundSchema` instead. */
  export const outboundSchema = CreateOpportunityRequestValue$outboundSchema;
  /** @deprecated use `CreateOpportunityRequestValue$Outbound` instead. */
  export type Outbound = CreateOpportunityRequestValue$Outbound;
}

export function createOpportunityRequestValueToJSON(
  createOpportunityRequestValue: CreateOpportunityRequestValue,
): string {
  return JSON.stringify(
    CreateOpportunityRequestValue$outboundSchema.parse(
      createOpportunityRequestValue,
    ),
  );
}

export function createOpportunityRequestValueFromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequestValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateOpportunityRequestValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequestValue' from JSON`,
  );
}

/** @internal */
export const CreateOpportunityRequestCustomFields$inboundSchema: z.ZodType<
  CreateOpportunityRequestCustomFields,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()),
  name: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  value: z.nullable(
    z.union([
      z.lazy(() => CreateOpportunityRequestValue4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.string()),
      z.array(z.lazy(() => CreateOpportunityRequestValue6$inboundSchema)),
    ]),
  ).optional(),
});

/** @internal */
export type CreateOpportunityRequestCustomFields$Outbound = {
  id: string | null;
  name?: string | null | undefined;
  description?: string | null | undefined;
  value?:
    | CreateOpportunityRequestValue4$Outbound
    | string
    | number
    | boolean
    | Array<string>
    | Array<CreateOpportunityRequestValue6$Outbound>
    | null
    | undefined;
};

/** @internal */
export const CreateOpportunityRequestCustomFields$outboundSchema: z.ZodType<
  CreateOpportunityRequestCustomFields$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequestCustomFields
> = z.object({
  id: z.nullable(z.string()),
  name: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  value: z.nullable(
    z.union([
      z.lazy(() => CreateOpportunityRequestValue4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.string()),
      z.array(z.lazy(() => CreateOpportunityRequestValue6$outboundSchema)),
    ]),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequestCustomFields$ {
  /** @deprecated use `CreateOpportunityRequestCustomFields$inboundSchema` instead. */
  export const inboundSchema =
    CreateOpportunityRequestCustomFields$inboundSchema;
  /** @deprecated use `CreateOpportunityRequestCustomFields$outboundSchema` instead. */
  export const outboundSchema =
    CreateOpportunityRequestCustomFields$outboundSchema;
  /** @deprecated use `CreateOpportunityRequestCustomFields$Outbound` instead. */
  export type Outbound = CreateOpportunityRequestCustomFields$Outbound;
}

export function createOpportunityRequestCustomFieldsToJSON(
  createOpportunityRequestCustomFields: CreateOpportunityRequestCustomFields,
): string {
  return JSON.stringify(
    CreateOpportunityRequestCustomFields$outboundSchema.parse(
      createOpportunityRequestCustomFields,
    ),
  );
}

export function createOpportunityRequestCustomFieldsFromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequestCustomFields, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateOpportunityRequestCustomFields$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequestCustomFields' from JSON`,
  );
}

/** @internal */
export const CreateOpportunityRequestExtendPaths$inboundSchema: z.ZodType<
  CreateOpportunityRequestExtendPaths,
  z.ZodTypeDef,
  unknown
> = z.object({
  path: z.string(),
  value: z.any().optional(),
});

/** @internal */
export type CreateOpportunityRequestExtendPaths$Outbound = {
  path: string;
  value?: any | undefined;
};

/** @internal */
export const CreateOpportunityRequestExtendPaths$outboundSchema: z.ZodType<
  CreateOpportunityRequestExtendPaths$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequestExtendPaths
> = z.object({
  path: z.string(),
  value: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequestExtendPaths$ {
  /** @deprecated use `CreateOpportunityRequestExtendPaths$inboundSchema` instead. */
  export const inboundSchema =
    CreateOpportunityRequestExtendPaths$inboundSchema;
  /** @deprecated use `CreateOpportunityRequestExtendPaths$outboundSchema` instead. */
  export const outboundSchema =
    CreateOpportunityRequestExtendPaths$outboundSchema;
  /** @deprecated use `CreateOpportunityRequestExtendPaths$Outbound` instead. */
  export type Outbound = CreateOpportunityRequestExtendPaths$Outbound;
}

export function createOpportunityRequestExtendPathsToJSON(
  createOpportunityRequestExtendPaths: CreateOpportunityRequestExtendPaths,
): string {
  return JSON.stringify(
    CreateOpportunityRequestExtendPaths$outboundSchema.parse(
      createOpportunityRequestExtendPaths,
    ),
  );
}

export function createOpportunityRequestExtendPathsFromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequestExtendPaths, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateOpportunityRequestExtendPaths$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequestExtendPaths' from JSON`,
  );
}

/** @internal */
export const CreateOpportunityRequestPassThrough$inboundSchema: z.ZodType<
  CreateOpportunityRequestPassThrough,
  z.ZodTypeDef,
  unknown
> = z.object({
  service_id: z.string(),
  operation_id: z.string().optional(),
  extend_object: z.record(z.any()).optional(),
  extend_paths: z.array(
    z.lazy(() => CreateOpportunityRequestExtendPaths$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "service_id": "serviceId",
    "operation_id": "operationId",
    "extend_object": "extendObject",
    "extend_paths": "extendPaths",
  });
});

/** @internal */
export type CreateOpportunityRequestPassThrough$Outbound = {
  service_id: string;
  operation_id?: string | undefined;
  extend_object?: { [k: string]: any } | undefined;
  extend_paths?:
    | Array<CreateOpportunityRequestExtendPaths$Outbound>
    | undefined;
};

/** @internal */
export const CreateOpportunityRequestPassThrough$outboundSchema: z.ZodType<
  CreateOpportunityRequestPassThrough$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequestPassThrough
> = z.object({
  serviceId: z.string(),
  operationId: z.string().optional(),
  extendObject: z.record(z.any()).optional(),
  extendPaths: z.array(
    z.lazy(() => CreateOpportunityRequestExtendPaths$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    serviceId: "service_id",
    operationId: "operation_id",
    extendObject: "extend_object",
    extendPaths: "extend_paths",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequestPassThrough$ {
  /** @deprecated use `CreateOpportunityRequestPassThrough$inboundSchema` instead. */
  export const inboundSchema =
    CreateOpportunityRequestPassThrough$inboundSchema;
  /** @deprecated use `CreateOpportunityRequestPassThrough$outboundSchema` instead. */
  export const outboundSchema =
    CreateOpportunityRequestPassThrough$outboundSchema;
  /** @deprecated use `CreateOpportunityRequestPassThrough$Outbound` instead. */
  export type Outbound = CreateOpportunityRequestPassThrough$Outbound;
}

export function createOpportunityRequestPassThroughToJSON(
  createOpportunityRequestPassThrough: CreateOpportunityRequestPassThrough,
): string {
  return JSON.stringify(
    CreateOpportunityRequestPassThrough$outboundSchema.parse(
      createOpportunityRequestPassThrough,
    ),
  );
}

export function createOpportunityRequestPassThroughFromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequestPassThrough, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateOpportunityRequestPassThrough$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequestPassThrough' from JSON`,
  );
}

/** @internal */
export const CreateOpportunityRequest$inboundSchema: z.ZodType<
  CreateOpportunityRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  title: z.string(),
  primary_contact_id: z.nullable(z.string()),
  description: z.nullable(z.string()).optional(),
  type: z.nullable(z.string()).optional(),
  monetary_amount: z.nullable(z.number()).optional(),
  currency: z.nullable(CreateOpportunityRequestCurrency$inboundSchema)
    .optional(),
  win_probability: z.nullable(z.number()).optional(),
  close_date: z.nullable(z.string().transform(v => new RFCDate(v))).optional(),
  loss_reason_id: z.nullable(z.string()).optional(),
  loss_reason: z.nullable(z.string()).optional(),
  won_reason_id: z.nullable(z.string()).optional(),
  won_reason: z.nullable(z.string()).optional(),
  pipeline_id: z.nullable(z.string()).optional(),
  pipeline_stage_id: z.nullable(z.string()).optional(),
  source_id: z.nullable(z.string()).optional(),
  lead_id: z.nullable(z.string()).optional(),
  lead_source: z.nullable(z.string()).optional(),
  contact_id: z.nullable(z.string()).optional(),
  contact_ids: z.array(z.string()).optional(),
  company_id: z.nullable(z.string()).optional(),
  company_name: z.nullable(z.string()).optional(),
  owner_id: z.nullable(z.string()).optional(),
  priority: z.nullable(z.string()).optional(),
  status: z.nullable(z.string()).optional(),
  status_id: z.nullable(z.string()).optional(),
  tags: z.nullable(z.array(z.string())).optional(),
  custom_fields: z.array(
    z.lazy(() => CreateOpportunityRequestCustomFields$inboundSchema),
  ).optional(),
  stage_last_changed_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  pass_through: z.array(
    z.lazy(() => CreateOpportunityRequestPassThrough$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "primary_contact_id": "primaryContactId",
    "monetary_amount": "monetaryAmount",
    "win_probability": "winProbability",
    "close_date": "closeDate",
    "loss_reason_id": "lossReasonId",
    "loss_reason": "lossReason",
    "won_reason_id": "wonReasonId",
    "won_reason": "wonReason",
    "pipeline_id": "pipelineId",
    "pipeline_stage_id": "pipelineStageId",
    "source_id": "sourceId",
    "lead_id": "leadId",
    "lead_source": "leadSource",
    "contact_id": "contactId",
    "contact_ids": "contactIds",
    "company_id": "companyId",
    "company_name": "companyName",
    "owner_id": "ownerId",
    "status_id": "statusId",
    "custom_fields": "customFields",
    "stage_last_changed_at": "stageLastChangedAt",
    "pass_through": "passThrough",
  });
});

/** @internal */
export type CreateOpportunityRequest$Outbound = {
  title: string;
  primary_contact_id: string | null;
  description?: string | null | undefined;
  type?: string | null | undefined;
  monetary_amount?: number | null | undefined;
  currency?: string | null | undefined;
  win_probability?: number | null | undefined;
  close_date?: string | null | undefined;
  loss_reason_id?: string | null | undefined;
  loss_reason?: string | null | undefined;
  won_reason_id?: string | null | undefined;
  won_reason?: string | null | undefined;
  pipeline_id?: string | null | undefined;
  pipeline_stage_id?: string | null | undefined;
  source_id?: string | null | undefined;
  lead_id?: string | null | undefined;
  lead_source?: string | null | undefined;
  contact_id?: string | null | undefined;
  contact_ids?: Array<string> | undefined;
  company_id?: string | null | undefined;
  company_name?: string | null | undefined;
  owner_id?: string | null | undefined;
  priority?: string | null | undefined;
  status?: string | null | undefined;
  status_id?: string | null | undefined;
  tags?: Array<string> | null | undefined;
  custom_fields?:
    | Array<CreateOpportunityRequestCustomFields$Outbound>
    | undefined;
  stage_last_changed_at?: string | null | undefined;
  pass_through?:
    | Array<CreateOpportunityRequestPassThrough$Outbound>
    | undefined;
};

/** @internal */
export const CreateOpportunityRequest$outboundSchema: z.ZodType<
  CreateOpportunityRequest$Outbound,
  z.ZodTypeDef,
  CreateOpportunityRequest
> = z.object({
  title: z.string(),
  primaryContactId: z.nullable(z.string()),
  description: z.nullable(z.string()).optional(),
  type: z.nullable(z.string()).optional(),
  monetaryAmount: z.nullable(z.number()).optional(),
  currency: z.nullable(CreateOpportunityRequestCurrency$outboundSchema)
    .optional(),
  winProbability: z.nullable(z.number()).optional(),
  closeDate: z.nullable(z.instanceof(RFCDate).transform(v => v.toString()))
    .optional(),
  lossReasonId: z.nullable(z.string()).optional(),
  lossReason: z.nullable(z.string()).optional(),
  wonReasonId: z.nullable(z.string()).optional(),
  wonReason: z.nullable(z.string()).optional(),
  pipelineId: z.nullable(z.string()).optional(),
  pipelineStageId: z.nullable(z.string()).optional(),
  sourceId: z.nullable(z.string()).optional(),
  leadId: z.nullable(z.string()).optional(),
  leadSource: z.nullable(z.string()).optional(),
  contactId: z.nullable(z.string()).optional(),
  contactIds: z.array(z.string()).optional(),
  companyId: z.nullable(z.string()).optional(),
  companyName: z.nullable(z.string()).optional(),
  ownerId: z.nullable(z.string()).optional(),
  priority: z.nullable(z.string()).optional(),
  status: z.nullable(z.string()).optional(),
  statusId: z.nullable(z.string()).optional(),
  tags: z.nullable(z.array(z.string())).optional(),
  customFields: z.array(
    z.lazy(() => CreateOpportunityRequestCustomFields$outboundSchema),
  ).optional(),
  stageLastChangedAt: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  passThrough: z.array(
    z.lazy(() => CreateOpportunityRequestPassThrough$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    primaryContactId: "primary_contact_id",
    monetaryAmount: "monetary_amount",
    winProbability: "win_probability",
    closeDate: "close_date",
    lossReasonId: "loss_reason_id",
    lossReason: "loss_reason",
    wonReasonId: "won_reason_id",
    wonReason: "won_reason",
    pipelineId: "pipeline_id",
    pipelineStageId: "pipeline_stage_id",
    sourceId: "source_id",
    leadId: "lead_id",
    leadSource: "lead_source",
    contactId: "contact_id",
    contactIds: "contact_ids",
    companyId: "company_id",
    companyName: "company_name",
    ownerId: "owner_id",
    statusId: "status_id",
    customFields: "custom_fields",
    stageLastChangedAt: "stage_last_changed_at",
    passThrough: "pass_through",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOpportunityRequest$ {
  /** @deprecated use `CreateOpportunityRequest$inboundSchema` instead. */
  export const inboundSchema = CreateOpportunityRequest$inboundSchema;
  /** @deprecated use `CreateOpportunityRequest$outboundSchema` instead. */
  export const outboundSchema = CreateOpportunityRequest$outboundSchema;
  /** @deprecated use `CreateOpportunityRequest$Outbound` instead. */
  export type Outbound = CreateOpportunityRequest$Outbound;
}

export function createOpportunityRequestToJSON(
  createOpportunityRequest: CreateOpportunityRequest,
): string {
  return JSON.stringify(
    CreateOpportunityRequest$outboundSchema.parse(createOpportunityRequest),
  );
}

export function createOpportunityRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateOpportunityRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateOpportunityRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOpportunityRequest' from JSON`,
  );
}
