/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type HrisTimeOffRequestsAllGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  consumerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

/**
 * Time off request status to filter on
 */
export const TimeOffRequestStatus = {
  Requested: "requested",
  Approved: "approved",
  Declined: "declined",
  Cancelled: "cancelled",
  Deleted: "deleted",
  Other: "other",
} as const;
/**
 * Time off request status to filter on
 */
export type TimeOffRequestStatus = ClosedEnum<typeof TimeOffRequestStatus>;

/**
 * Apply filters
 */
export type HrisTimeOffRequestsAllQueryParamFilter = {
  /**
   * Start date
   */
  startDate?: string | undefined;
  /**
   * End date
   */
  endDate?: string | undefined;
  /**
   * Minimum date the time off request was last created or modified
   */
  updatedSince?: string | undefined;
  /**
   * Employee ID
   */
  employeeId?: string | undefined;
  /**
   * Time off request status to filter on
   */
  timeOffRequestStatus?: TimeOffRequestStatus | undefined;
  /**
   * Company ID
   */
  companyId?: string | undefined;
};

export type HrisTimeOffRequestsAllRequest = {
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
   */
  cursor?: string | null | undefined;
  /**
   * Number of results to return. Minimum 1, Maximum 200, Default 20
   */
  limit?: number | undefined;
  /**
   * Apply filters
   */
  filter?: HrisTimeOffRequestsAllQueryParamFilter | undefined;
  /**
   * Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads
   */
  passThrough?: { [k: string]: any } | undefined;
  /**
   * The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.
   */
  fields?: string | null | undefined;
};

/**
 * Contains parameter or domain specific information related to the error and why it occurred.
 */
export type HrisTimeOffRequestsAllDetail = string | { [k: string]: any };

/**
 * Unexpected error
 */
export type HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody = {
  /**
   * HTTP status code
   */
  statusCode?: number | undefined;
  /**
   * Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
   */
  error?: string | undefined;
  /**
   * The type of error returned
   */
  typeName?: string | undefined;
  /**
   * A human-readable message providing more details about the error.
   */
  message?: string | undefined;
  /**
   * Contains parameter or domain specific information related to the error and why it occurred.
   */
  detail?: string | { [k: string]: any } | undefined;
  /**
   * Link to documentation of error type
   */
  ref?: string | undefined;
};

/**
 * The status of the time off request.
 */
export const HrisTimeOffRequestsAllStatus = {
  Requested: "requested",
  Approved: "approved",
  Declined: "declined",
  Cancelled: "cancelled",
  Deleted: "deleted",
  Other: "other",
} as const;
/**
 * The status of the time off request.
 */
export type HrisTimeOffRequestsAllStatus = ClosedEnum<
  typeof HrisTimeOffRequestsAllStatus
>;

/**
 * The type of request
 */
export const HrisTimeOffRequestsAllRequestType = {
  Vacation: "vacation",
  Sick: "sick",
  Personal: "personal",
  JuryDuty: "jury_duty",
  Volunteer: "volunteer",
  Bereavement: "bereavement",
  Other: "other",
} as const;
/**
 * The type of request
 */
export type HrisTimeOffRequestsAllRequestType = ClosedEnum<
  typeof HrisTimeOffRequestsAllRequestType
>;

/**
 * The unit of time off requested. Possible values include: `hours`, `days`, or `other`.
 */
export const HrisTimeOffRequestsAllUnits = {
  Days: "days",
  Hours: "hours",
  Other: "other",
} as const;
/**
 * The unit of time off requested. Possible values include: `hours`, `days`, or `other`.
 */
export type HrisTimeOffRequestsAllUnits = ClosedEnum<
  typeof HrisTimeOffRequestsAllUnits
>;

export type HrisTimeOffRequestsAllNotes = {
  employee?: string | null | undefined;
  manager?: string | null | undefined;
};

/**
 * When custom mappings are configured on the resource, the result is included here.
 */
export type HrisTimeOffRequestsAllCustomMappings = {};

export type HrisTimeOffRequestsAllExtendPaths = {
  /**
   * JSONPath string specifying where to apply the value.
   */
  path: string;
  /**
   * The value to set at the specified path, can be any type.
   */
  value?: any | undefined;
};

export type HrisTimeOffRequestsAllPassThrough = {
  /**
   * Identifier for the service to which this pass_through should be applied.
   */
  serviceId: string;
  /**
   * Optional identifier for a workflow operation to which this pass_through should be applied. This is useful for Unify calls that are making more than one downstream request.
   */
  operationId?: string | undefined;
  /**
   * Simple object allowing any properties for direct extension.
   */
  extendObject?: { [k: string]: any } | undefined;
  /**
   * Array of objects for structured data modifications via paths.
   */
  extendPaths?: Array<HrisTimeOffRequestsAllExtendPaths> | undefined;
};

export type HrisTimeOffRequestsAllData = {
  /**
   * A unique identifier for an object.
   */
  id?: string | undefined;
  /**
   * ID of the employee
   */
  employeeId?: string | null | undefined;
  /**
   * ID of the policy
   */
  policyId?: string | null | undefined;
  /**
   * The status of the time off request.
   */
  status?: HrisTimeOffRequestsAllStatus | null | undefined;
  /**
   * Description of the time off request.
   */
  description?: string | null | undefined;
  /**
   * The start date of the time off request.
   */
  startDate?: string | null | undefined;
  /**
   * The end date of the time off request.
   */
  endDate?: string | null | undefined;
  /**
   * The date the request was made.
   */
  requestDate?: string | null | undefined;
  /**
   * The type of request
   */
  requestType?: HrisTimeOffRequestsAllRequestType | null | undefined;
  /**
   * The date the request was approved
   */
  approvalDate?: string | null | undefined;
  /**
   * The unit of time off requested. Possible values include: `hours`, `days`, or `other`.
   */
  units?: HrisTimeOffRequestsAllUnits | null | undefined;
  /**
   * The amount of time off requested.
   */
  amount?: number | null | undefined;
  /**
   * The day part of the time off request.
   */
  dayPart?: string | null | undefined;
  notes?: HrisTimeOffRequestsAllNotes | undefined;
  /**
   * When custom mappings are configured on the resource, the result is included here.
   */
  customMappings?: HrisTimeOffRequestsAllCustomMappings | null | undefined;
  /**
   * The user who last updated the object.
   */
  updatedBy?: string | null | undefined;
  /**
   * The user who created the object.
   */
  createdBy?: string | null | undefined;
  /**
   * The date and time when the object was last updated.
   */
  updatedAt?: Date | null | undefined;
  /**
   * The date and time when the object was created.
   */
  createdAt?: Date | null | undefined;
  /**
   * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
   */
  passThrough?: Array<HrisTimeOffRequestsAllPassThrough> | undefined;
  /**
   * The policy type of the time off request
   */
  policyType?: string | undefined;
};

/**
 * Cursors to navigate to previous or next pages through the API
 */
export type HrisTimeOffRequestsAllCursors = {
  /**
   * Cursor to navigate to the previous page of results through the API
   */
  previous?: string | null | undefined;
  /**
   * Cursor to navigate to the current page of results through the API
   */
  current?: string | null | undefined;
  /**
   * Cursor to navigate to the next page of results through the API
   */
  next?: string | null | undefined;
};

/**
 * Response metadata
 */
export type HrisTimeOffRequestsAllMeta = {
  /**
   * Number of items returned in the data property of the response
   */
  itemsOnPage?: number | undefined;
  /**
   * Cursors to navigate to previous or next pages through the API
   */
  cursors?: HrisTimeOffRequestsAllCursors | undefined;
};

/**
 * Links to navigate to previous or next pages through the API
 */
export type HrisTimeOffRequestsAllLinks = {
  /**
   * Link to navigate to the previous page through the API
   */
  previous?: string | null | undefined;
  /**
   * Link to navigate to the current page through the API
   */
  current?: string | undefined;
  /**
   * Link to navigate to the previous page through the API
   */
  next?: string | null | undefined;
};

/**
 * TimeOffRequests
 */
export type HrisTimeOffRequestsAllResponseBody = {
  /**
   * HTTP Response Status Code
   */
  statusCode: number;
  /**
   * HTTP Response Status
   */
  status: string;
  /**
   * Apideck ID of service provider
   */
  service: string;
  /**
   * Unified API resource name
   */
  resource: string;
  /**
   * Operation performed
   */
  operation: string;
  data: Array<HrisTimeOffRequestsAllData>;
  /**
   * Response metadata
   */
  meta?: HrisTimeOffRequestsAllMeta | undefined;
  /**
   * Links to navigate to previous or next pages through the API
   */
  links?: HrisTimeOffRequestsAllLinks | undefined;
};

export type HrisTimeOffRequestsAllResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * TimeOffRequests
   */
  twoHundredApplicationJsonObject?:
    | HrisTimeOffRequestsAllResponseBody
    | undefined;
  /**
   * Unexpected error
   */
  defaultApplicationJsonObject?:
    | HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody
    | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllGlobals$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  consumerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type HrisTimeOffRequestsAllGlobals$Outbound = {
  consumerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllGlobals$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllGlobals$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllGlobals
> = z.object({
  consumerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllGlobals$ {
  /** @deprecated use `HrisTimeOffRequestsAllGlobals$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllGlobals$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllGlobals$outboundSchema` instead. */
  export const outboundSchema = HrisTimeOffRequestsAllGlobals$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllGlobals$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllGlobals$Outbound;
}

export function hrisTimeOffRequestsAllGlobalsToJSON(
  hrisTimeOffRequestsAllGlobals: HrisTimeOffRequestsAllGlobals,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllGlobals$outboundSchema.parse(
      hrisTimeOffRequestsAllGlobals,
    ),
  );
}

export function hrisTimeOffRequestsAllGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisTimeOffRequestsAllGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllGlobals' from JSON`,
  );
}

/** @internal */
export const TimeOffRequestStatus$inboundSchema: z.ZodNativeEnum<
  typeof TimeOffRequestStatus
> = z.nativeEnum(TimeOffRequestStatus);

/** @internal */
export const TimeOffRequestStatus$outboundSchema: z.ZodNativeEnum<
  typeof TimeOffRequestStatus
> = TimeOffRequestStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TimeOffRequestStatus$ {
  /** @deprecated use `TimeOffRequestStatus$inboundSchema` instead. */
  export const inboundSchema = TimeOffRequestStatus$inboundSchema;
  /** @deprecated use `TimeOffRequestStatus$outboundSchema` instead. */
  export const outboundSchema = TimeOffRequestStatus$outboundSchema;
}

/** @internal */
export const HrisTimeOffRequestsAllQueryParamFilter$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllQueryParamFilter,
  z.ZodTypeDef,
  unknown
> = z.object({
  start_date: z.string().optional(),
  end_date: z.string().optional(),
  updated_since: z.string().optional(),
  employee_id: z.string().optional(),
  time_off_request_status: TimeOffRequestStatus$inboundSchema.optional(),
  company_id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "start_date": "startDate",
    "end_date": "endDate",
    "updated_since": "updatedSince",
    "employee_id": "employeeId",
    "time_off_request_status": "timeOffRequestStatus",
    "company_id": "companyId",
  });
});

/** @internal */
export type HrisTimeOffRequestsAllQueryParamFilter$Outbound = {
  start_date?: string | undefined;
  end_date?: string | undefined;
  updated_since?: string | undefined;
  employee_id?: string | undefined;
  time_off_request_status?: string | undefined;
  company_id?: string | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllQueryParamFilter$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllQueryParamFilter$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllQueryParamFilter
> = z.object({
  startDate: z.string().optional(),
  endDate: z.string().optional(),
  updatedSince: z.string().optional(),
  employeeId: z.string().optional(),
  timeOffRequestStatus: TimeOffRequestStatus$outboundSchema.optional(),
  companyId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    startDate: "start_date",
    endDate: "end_date",
    updatedSince: "updated_since",
    employeeId: "employee_id",
    timeOffRequestStatus: "time_off_request_status",
    companyId: "company_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllQueryParamFilter$ {
  /** @deprecated use `HrisTimeOffRequestsAllQueryParamFilter$inboundSchema` instead. */
  export const inboundSchema =
    HrisTimeOffRequestsAllQueryParamFilter$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllQueryParamFilter$outboundSchema` instead. */
  export const outboundSchema =
    HrisTimeOffRequestsAllQueryParamFilter$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllQueryParamFilter$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllQueryParamFilter$Outbound;
}

export function hrisTimeOffRequestsAllQueryParamFilterToJSON(
  hrisTimeOffRequestsAllQueryParamFilter:
    HrisTimeOffRequestsAllQueryParamFilter,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllQueryParamFilter$outboundSchema.parse(
      hrisTimeOffRequestsAllQueryParamFilter,
    ),
  );
}

export function hrisTimeOffRequestsAllQueryParamFilterFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllQueryParamFilter, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisTimeOffRequestsAllQueryParamFilter$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllQueryParamFilter' from JSON`,
  );
}

/** @internal */
export const HrisTimeOffRequestsAllRequest$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  cursor: z.nullable(z.string()).optional(),
  limit: z.number().int().default(20),
  filter: z.lazy(() => HrisTimeOffRequestsAllQueryParamFilter$inboundSchema)
    .optional(),
  pass_through: z.record(z.any()).optional(),
  fields: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "pass_through": "passThrough",
  });
});

/** @internal */
export type HrisTimeOffRequestsAllRequest$Outbound = {
  raw: boolean;
  serviceId?: string | undefined;
  cursor?: string | null | undefined;
  limit: number;
  filter?: HrisTimeOffRequestsAllQueryParamFilter$Outbound | undefined;
  pass_through?: { [k: string]: any } | undefined;
  fields?: string | null | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllRequest$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllRequest$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllRequest
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  cursor: z.nullable(z.string()).optional(),
  limit: z.number().int().default(20),
  filter: z.lazy(() => HrisTimeOffRequestsAllQueryParamFilter$outboundSchema)
    .optional(),
  passThrough: z.record(z.any()).optional(),
  fields: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    passThrough: "pass_through",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllRequest$ {
  /** @deprecated use `HrisTimeOffRequestsAllRequest$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllRequest$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllRequest$outboundSchema` instead. */
  export const outboundSchema = HrisTimeOffRequestsAllRequest$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllRequest$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllRequest$Outbound;
}

export function hrisTimeOffRequestsAllRequestToJSON(
  hrisTimeOffRequestsAllRequest: HrisTimeOffRequestsAllRequest,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllRequest$outboundSchema.parse(
      hrisTimeOffRequestsAllRequest,
    ),
  );
}

export function hrisTimeOffRequestsAllRequestFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisTimeOffRequestsAllRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllRequest' from JSON`,
  );
}

/** @internal */
export const HrisTimeOffRequestsAllDetail$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllDetail,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.record(z.any())]);

/** @internal */
export type HrisTimeOffRequestsAllDetail$Outbound = string | {
  [k: string]: any;
};

/** @internal */
export const HrisTimeOffRequestsAllDetail$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllDetail$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllDetail
> = z.union([z.string(), z.record(z.any())]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllDetail$ {
  /** @deprecated use `HrisTimeOffRequestsAllDetail$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllDetail$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllDetail$outboundSchema` instead. */
  export const outboundSchema = HrisTimeOffRequestsAllDetail$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllDetail$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllDetail$Outbound;
}

export function hrisTimeOffRequestsAllDetailToJSON(
  hrisTimeOffRequestsAllDetail: HrisTimeOffRequestsAllDetail,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllDetail$outboundSchema.parse(
      hrisTimeOffRequestsAllDetail,
    ),
  );
}

export function hrisTimeOffRequestsAllDetailFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllDetail, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisTimeOffRequestsAllDetail$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllDetail' from JSON`,
  );
}

/** @internal */
export const HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$inboundSchema:
  z.ZodType<
    HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number().optional(),
    error: z.string().optional(),
    type_name: z.string().optional(),
    message: z.string().optional(),
    detail: z.union([z.string(), z.record(z.any())]).optional(),
    ref: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "status_code": "statusCode",
      "type_name": "typeName",
    });
  });

/** @internal */
export type HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$Outbound = {
  status_code?: number | undefined;
  error?: string | undefined;
  type_name?: string | undefined;
  message?: string | undefined;
  detail?: string | { [k: string]: any } | undefined;
  ref?: string | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$outboundSchema:
  z.ZodType<
    HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$Outbound,
    z.ZodTypeDef,
    HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody
  > = z.object({
    statusCode: z.number().optional(),
    error: z.string().optional(),
    typeName: z.string().optional(),
    message: z.string().optional(),
    detail: z.union([z.string(), z.record(z.any())]).optional(),
    ref: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      statusCode: "status_code",
      typeName: "type_name",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$ {
  /** @deprecated use `HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$Outbound` instead. */
  export type Outbound =
    HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$Outbound;
}

export function hrisTimeOffRequestsAllHrisTimeOffRequestsResponseBodyToJSON(
  hrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody:
    HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$outboundSchema.parse(
      hrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody,
    ),
  );
}

export function hrisTimeOffRequestsAllHrisTimeOffRequestsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody' from JSON`,
  );
}

/** @internal */
export const HrisTimeOffRequestsAllStatus$inboundSchema: z.ZodNativeEnum<
  typeof HrisTimeOffRequestsAllStatus
> = z.nativeEnum(HrisTimeOffRequestsAllStatus);

/** @internal */
export const HrisTimeOffRequestsAllStatus$outboundSchema: z.ZodNativeEnum<
  typeof HrisTimeOffRequestsAllStatus
> = HrisTimeOffRequestsAllStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllStatus$ {
  /** @deprecated use `HrisTimeOffRequestsAllStatus$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllStatus$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllStatus$outboundSchema` instead. */
  export const outboundSchema = HrisTimeOffRequestsAllStatus$outboundSchema;
}

/** @internal */
export const HrisTimeOffRequestsAllRequestType$inboundSchema: z.ZodNativeEnum<
  typeof HrisTimeOffRequestsAllRequestType
> = z.nativeEnum(HrisTimeOffRequestsAllRequestType);

/** @internal */
export const HrisTimeOffRequestsAllRequestType$outboundSchema: z.ZodNativeEnum<
  typeof HrisTimeOffRequestsAllRequestType
> = HrisTimeOffRequestsAllRequestType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllRequestType$ {
  /** @deprecated use `HrisTimeOffRequestsAllRequestType$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllRequestType$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllRequestType$outboundSchema` instead. */
  export const outboundSchema =
    HrisTimeOffRequestsAllRequestType$outboundSchema;
}

/** @internal */
export const HrisTimeOffRequestsAllUnits$inboundSchema: z.ZodNativeEnum<
  typeof HrisTimeOffRequestsAllUnits
> = z.nativeEnum(HrisTimeOffRequestsAllUnits);

/** @internal */
export const HrisTimeOffRequestsAllUnits$outboundSchema: z.ZodNativeEnum<
  typeof HrisTimeOffRequestsAllUnits
> = HrisTimeOffRequestsAllUnits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllUnits$ {
  /** @deprecated use `HrisTimeOffRequestsAllUnits$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllUnits$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllUnits$outboundSchema` instead. */
  export const outboundSchema = HrisTimeOffRequestsAllUnits$outboundSchema;
}

/** @internal */
export const HrisTimeOffRequestsAllNotes$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllNotes,
  z.ZodTypeDef,
  unknown
> = z.object({
  employee: z.nullable(z.string()).optional(),
  manager: z.nullable(z.string()).optional(),
});

/** @internal */
export type HrisTimeOffRequestsAllNotes$Outbound = {
  employee?: string | null | undefined;
  manager?: string | null | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllNotes$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllNotes$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllNotes
> = z.object({
  employee: z.nullable(z.string()).optional(),
  manager: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllNotes$ {
  /** @deprecated use `HrisTimeOffRequestsAllNotes$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllNotes$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllNotes$outboundSchema` instead. */
  export const outboundSchema = HrisTimeOffRequestsAllNotes$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllNotes$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllNotes$Outbound;
}

export function hrisTimeOffRequestsAllNotesToJSON(
  hrisTimeOffRequestsAllNotes: HrisTimeOffRequestsAllNotes,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllNotes$outboundSchema.parse(
      hrisTimeOffRequestsAllNotes,
    ),
  );
}

export function hrisTimeOffRequestsAllNotesFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllNotes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisTimeOffRequestsAllNotes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllNotes' from JSON`,
  );
}

/** @internal */
export const HrisTimeOffRequestsAllCustomMappings$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllCustomMappings,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type HrisTimeOffRequestsAllCustomMappings$Outbound = {};

/** @internal */
export const HrisTimeOffRequestsAllCustomMappings$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllCustomMappings$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllCustomMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllCustomMappings$ {
  /** @deprecated use `HrisTimeOffRequestsAllCustomMappings$inboundSchema` instead. */
  export const inboundSchema =
    HrisTimeOffRequestsAllCustomMappings$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllCustomMappings$outboundSchema` instead. */
  export const outboundSchema =
    HrisTimeOffRequestsAllCustomMappings$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllCustomMappings$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllCustomMappings$Outbound;
}

export function hrisTimeOffRequestsAllCustomMappingsToJSON(
  hrisTimeOffRequestsAllCustomMappings: HrisTimeOffRequestsAllCustomMappings,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllCustomMappings$outboundSchema.parse(
      hrisTimeOffRequestsAllCustomMappings,
    ),
  );
}

export function hrisTimeOffRequestsAllCustomMappingsFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllCustomMappings, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisTimeOffRequestsAllCustomMappings$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllCustomMappings' from JSON`,
  );
}

/** @internal */
export const HrisTimeOffRequestsAllExtendPaths$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllExtendPaths,
  z.ZodTypeDef,
  unknown
> = z.object({
  path: z.string(),
  value: z.any().optional(),
});

/** @internal */
export type HrisTimeOffRequestsAllExtendPaths$Outbound = {
  path: string;
  value?: any | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllExtendPaths$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllExtendPaths$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllExtendPaths
> = z.object({
  path: z.string(),
  value: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllExtendPaths$ {
  /** @deprecated use `HrisTimeOffRequestsAllExtendPaths$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllExtendPaths$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllExtendPaths$outboundSchema` instead. */
  export const outboundSchema =
    HrisTimeOffRequestsAllExtendPaths$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllExtendPaths$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllExtendPaths$Outbound;
}

export function hrisTimeOffRequestsAllExtendPathsToJSON(
  hrisTimeOffRequestsAllExtendPaths: HrisTimeOffRequestsAllExtendPaths,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllExtendPaths$outboundSchema.parse(
      hrisTimeOffRequestsAllExtendPaths,
    ),
  );
}

export function hrisTimeOffRequestsAllExtendPathsFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllExtendPaths, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisTimeOffRequestsAllExtendPaths$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllExtendPaths' from JSON`,
  );
}

/** @internal */
export const HrisTimeOffRequestsAllPassThrough$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllPassThrough,
  z.ZodTypeDef,
  unknown
> = z.object({
  service_id: z.string(),
  operation_id: z.string().optional(),
  extend_object: z.record(z.any()).optional(),
  extend_paths: z.array(
    z.lazy(() => HrisTimeOffRequestsAllExtendPaths$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "service_id": "serviceId",
    "operation_id": "operationId",
    "extend_object": "extendObject",
    "extend_paths": "extendPaths",
  });
});

/** @internal */
export type HrisTimeOffRequestsAllPassThrough$Outbound = {
  service_id: string;
  operation_id?: string | undefined;
  extend_object?: { [k: string]: any } | undefined;
  extend_paths?: Array<HrisTimeOffRequestsAllExtendPaths$Outbound> | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllPassThrough$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllPassThrough$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllPassThrough
> = z.object({
  serviceId: z.string(),
  operationId: z.string().optional(),
  extendObject: z.record(z.any()).optional(),
  extendPaths: z.array(
    z.lazy(() => HrisTimeOffRequestsAllExtendPaths$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    serviceId: "service_id",
    operationId: "operation_id",
    extendObject: "extend_object",
    extendPaths: "extend_paths",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllPassThrough$ {
  /** @deprecated use `HrisTimeOffRequestsAllPassThrough$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllPassThrough$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllPassThrough$outboundSchema` instead. */
  export const outboundSchema =
    HrisTimeOffRequestsAllPassThrough$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllPassThrough$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllPassThrough$Outbound;
}

export function hrisTimeOffRequestsAllPassThroughToJSON(
  hrisTimeOffRequestsAllPassThrough: HrisTimeOffRequestsAllPassThrough,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllPassThrough$outboundSchema.parse(
      hrisTimeOffRequestsAllPassThrough,
    ),
  );
}

export function hrisTimeOffRequestsAllPassThroughFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllPassThrough, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisTimeOffRequestsAllPassThrough$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllPassThrough' from JSON`,
  );
}

/** @internal */
export const HrisTimeOffRequestsAllData$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllData,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  employee_id: z.nullable(z.string()).optional(),
  policy_id: z.nullable(z.string()).optional(),
  status: z.nullable(HrisTimeOffRequestsAllStatus$inboundSchema).optional(),
  description: z.nullable(z.string()).optional(),
  start_date: z.nullable(z.string()).optional(),
  end_date: z.nullable(z.string()).optional(),
  request_date: z.nullable(z.string()).optional(),
  request_type: z.nullable(HrisTimeOffRequestsAllRequestType$inboundSchema)
    .optional(),
  approval_date: z.nullable(z.string()).optional(),
  units: z.nullable(HrisTimeOffRequestsAllUnits$inboundSchema).optional(),
  amount: z.nullable(z.number()).optional(),
  day_part: z.nullable(z.string()).optional(),
  notes: z.lazy(() => HrisTimeOffRequestsAllNotes$inboundSchema).optional(),
  custom_mappings: z.nullable(
    z.lazy(() => HrisTimeOffRequestsAllCustomMappings$inboundSchema),
  ).optional(),
  updated_by: z.nullable(z.string()).optional(),
  created_by: z.nullable(z.string()).optional(),
  updated_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  created_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  pass_through: z.array(
    z.lazy(() => HrisTimeOffRequestsAllPassThrough$inboundSchema),
  ).optional(),
  policy_type: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "employee_id": "employeeId",
    "policy_id": "policyId",
    "start_date": "startDate",
    "end_date": "endDate",
    "request_date": "requestDate",
    "request_type": "requestType",
    "approval_date": "approvalDate",
    "day_part": "dayPart",
    "custom_mappings": "customMappings",
    "updated_by": "updatedBy",
    "created_by": "createdBy",
    "updated_at": "updatedAt",
    "created_at": "createdAt",
    "pass_through": "passThrough",
    "policy_type": "policyType",
  });
});

/** @internal */
export type HrisTimeOffRequestsAllData$Outbound = {
  id?: string | undefined;
  employee_id?: string | null | undefined;
  policy_id?: string | null | undefined;
  status?: string | null | undefined;
  description?: string | null | undefined;
  start_date?: string | null | undefined;
  end_date?: string | null | undefined;
  request_date?: string | null | undefined;
  request_type?: string | null | undefined;
  approval_date?: string | null | undefined;
  units?: string | null | undefined;
  amount?: number | null | undefined;
  day_part?: string | null | undefined;
  notes?: HrisTimeOffRequestsAllNotes$Outbound | undefined;
  custom_mappings?:
    | HrisTimeOffRequestsAllCustomMappings$Outbound
    | null
    | undefined;
  updated_by?: string | null | undefined;
  created_by?: string | null | undefined;
  updated_at?: string | null | undefined;
  created_at?: string | null | undefined;
  pass_through?: Array<HrisTimeOffRequestsAllPassThrough$Outbound> | undefined;
  policy_type?: string | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllData$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllData$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllData
> = z.object({
  id: z.string().optional(),
  employeeId: z.nullable(z.string()).optional(),
  policyId: z.nullable(z.string()).optional(),
  status: z.nullable(HrisTimeOffRequestsAllStatus$outboundSchema).optional(),
  description: z.nullable(z.string()).optional(),
  startDate: z.nullable(z.string()).optional(),
  endDate: z.nullable(z.string()).optional(),
  requestDate: z.nullable(z.string()).optional(),
  requestType: z.nullable(HrisTimeOffRequestsAllRequestType$outboundSchema)
    .optional(),
  approvalDate: z.nullable(z.string()).optional(),
  units: z.nullable(HrisTimeOffRequestsAllUnits$outboundSchema).optional(),
  amount: z.nullable(z.number()).optional(),
  dayPart: z.nullable(z.string()).optional(),
  notes: z.lazy(() => HrisTimeOffRequestsAllNotes$outboundSchema).optional(),
  customMappings: z.nullable(
    z.lazy(() => HrisTimeOffRequestsAllCustomMappings$outboundSchema),
  ).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  passThrough: z.array(
    z.lazy(() => HrisTimeOffRequestsAllPassThrough$outboundSchema),
  ).optional(),
  policyType: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    employeeId: "employee_id",
    policyId: "policy_id",
    startDate: "start_date",
    endDate: "end_date",
    requestDate: "request_date",
    requestType: "request_type",
    approvalDate: "approval_date",
    dayPart: "day_part",
    customMappings: "custom_mappings",
    updatedBy: "updated_by",
    createdBy: "created_by",
    updatedAt: "updated_at",
    createdAt: "created_at",
    passThrough: "pass_through",
    policyType: "policy_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllData$ {
  /** @deprecated use `HrisTimeOffRequestsAllData$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllData$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllData$outboundSchema` instead. */
  export const outboundSchema = HrisTimeOffRequestsAllData$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllData$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllData$Outbound;
}

export function hrisTimeOffRequestsAllDataToJSON(
  hrisTimeOffRequestsAllData: HrisTimeOffRequestsAllData,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllData$outboundSchema.parse(hrisTimeOffRequestsAllData),
  );
}

export function hrisTimeOffRequestsAllDataFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisTimeOffRequestsAllData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllData' from JSON`,
  );
}

/** @internal */
export const HrisTimeOffRequestsAllCursors$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllCursors,
  z.ZodTypeDef,
  unknown
> = z.object({
  previous: z.nullable(z.string()).optional(),
  current: z.nullable(z.string()).optional(),
  next: z.nullable(z.string()).optional(),
});

/** @internal */
export type HrisTimeOffRequestsAllCursors$Outbound = {
  previous?: string | null | undefined;
  current?: string | null | undefined;
  next?: string | null | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllCursors$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllCursors$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllCursors
> = z.object({
  previous: z.nullable(z.string()).optional(),
  current: z.nullable(z.string()).optional(),
  next: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllCursors$ {
  /** @deprecated use `HrisTimeOffRequestsAllCursors$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllCursors$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllCursors$outboundSchema` instead. */
  export const outboundSchema = HrisTimeOffRequestsAllCursors$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllCursors$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllCursors$Outbound;
}

export function hrisTimeOffRequestsAllCursorsToJSON(
  hrisTimeOffRequestsAllCursors: HrisTimeOffRequestsAllCursors,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllCursors$outboundSchema.parse(
      hrisTimeOffRequestsAllCursors,
    ),
  );
}

export function hrisTimeOffRequestsAllCursorsFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllCursors, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisTimeOffRequestsAllCursors$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllCursors' from JSON`,
  );
}

/** @internal */
export const HrisTimeOffRequestsAllMeta$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  items_on_page: z.number().int().optional(),
  cursors: z.lazy(() => HrisTimeOffRequestsAllCursors$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "items_on_page": "itemsOnPage",
  });
});

/** @internal */
export type HrisTimeOffRequestsAllMeta$Outbound = {
  items_on_page?: number | undefined;
  cursors?: HrisTimeOffRequestsAllCursors$Outbound | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllMeta$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllMeta$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllMeta
> = z.object({
  itemsOnPage: z.number().int().optional(),
  cursors: z.lazy(() => HrisTimeOffRequestsAllCursors$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    itemsOnPage: "items_on_page",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllMeta$ {
  /** @deprecated use `HrisTimeOffRequestsAllMeta$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllMeta$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllMeta$outboundSchema` instead. */
  export const outboundSchema = HrisTimeOffRequestsAllMeta$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllMeta$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllMeta$Outbound;
}

export function hrisTimeOffRequestsAllMetaToJSON(
  hrisTimeOffRequestsAllMeta: HrisTimeOffRequestsAllMeta,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllMeta$outboundSchema.parse(hrisTimeOffRequestsAllMeta),
  );
}

export function hrisTimeOffRequestsAllMetaFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisTimeOffRequestsAllMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllMeta' from JSON`,
  );
}

/** @internal */
export const HrisTimeOffRequestsAllLinks$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  previous: z.nullable(z.string()).optional(),
  current: z.string().optional(),
  next: z.nullable(z.string()).optional(),
});

/** @internal */
export type HrisTimeOffRequestsAllLinks$Outbound = {
  previous?: string | null | undefined;
  current?: string | undefined;
  next?: string | null | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllLinks$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllLinks$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllLinks
> = z.object({
  previous: z.nullable(z.string()).optional(),
  current: z.string().optional(),
  next: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllLinks$ {
  /** @deprecated use `HrisTimeOffRequestsAllLinks$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllLinks$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllLinks$outboundSchema` instead. */
  export const outboundSchema = HrisTimeOffRequestsAllLinks$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllLinks$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllLinks$Outbound;
}

export function hrisTimeOffRequestsAllLinksToJSON(
  hrisTimeOffRequestsAllLinks: HrisTimeOffRequestsAllLinks,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllLinks$outboundSchema.parse(
      hrisTimeOffRequestsAllLinks,
    ),
  );
}

export function hrisTimeOffRequestsAllLinksFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisTimeOffRequestsAllLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllLinks' from JSON`,
  );
}

/** @internal */
export const HrisTimeOffRequestsAllResponseBody$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number().int(),
  status: z.string(),
  service: z.string(),
  resource: z.string(),
  operation: z.string(),
  data: z.array(z.lazy(() => HrisTimeOffRequestsAllData$inboundSchema)),
  meta: z.lazy(() => HrisTimeOffRequestsAllMeta$inboundSchema).optional(),
  links: z.lazy(() => HrisTimeOffRequestsAllLinks$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "status_code": "statusCode",
  });
});

/** @internal */
export type HrisTimeOffRequestsAllResponseBody$Outbound = {
  status_code: number;
  status: string;
  service: string;
  resource: string;
  operation: string;
  data: Array<HrisTimeOffRequestsAllData$Outbound>;
  meta?: HrisTimeOffRequestsAllMeta$Outbound | undefined;
  links?: HrisTimeOffRequestsAllLinks$Outbound | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllResponseBody$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllResponseBody$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllResponseBody
> = z.object({
  statusCode: z.number().int(),
  status: z.string(),
  service: z.string(),
  resource: z.string(),
  operation: z.string(),
  data: z.array(z.lazy(() => HrisTimeOffRequestsAllData$outboundSchema)),
  meta: z.lazy(() => HrisTimeOffRequestsAllMeta$outboundSchema).optional(),
  links: z.lazy(() => HrisTimeOffRequestsAllLinks$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    statusCode: "status_code",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllResponseBody$ {
  /** @deprecated use `HrisTimeOffRequestsAllResponseBody$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllResponseBody$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    HrisTimeOffRequestsAllResponseBody$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllResponseBody$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllResponseBody$Outbound;
}

export function hrisTimeOffRequestsAllResponseBodyToJSON(
  hrisTimeOffRequestsAllResponseBody: HrisTimeOffRequestsAllResponseBody,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllResponseBody$outboundSchema.parse(
      hrisTimeOffRequestsAllResponseBody,
    ),
  );
}

export function hrisTimeOffRequestsAllResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisTimeOffRequestsAllResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllResponseBody' from JSON`,
  );
}

/** @internal */
export const HrisTimeOffRequestsAllResponse$inboundSchema: z.ZodType<
  HrisTimeOffRequestsAllResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  "200_application/json_object": z.lazy(() =>
    HrisTimeOffRequestsAllResponseBody$inboundSchema
  ).optional(),
  "default_application/json_object": z.lazy(() =>
    HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$inboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "200_application/json_object": "twoHundredApplicationJsonObject",
    "default_application/json_object": "defaultApplicationJsonObject",
  });
});

/** @internal */
export type HrisTimeOffRequestsAllResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  "200_application/json_object"?:
    | HrisTimeOffRequestsAllResponseBody$Outbound
    | undefined;
  "default_application/json_object"?:
    | HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$Outbound
    | undefined;
};

/** @internal */
export const HrisTimeOffRequestsAllResponse$outboundSchema: z.ZodType<
  HrisTimeOffRequestsAllResponse$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsAllResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  twoHundredApplicationJsonObject: z.lazy(() =>
    HrisTimeOffRequestsAllResponseBody$outboundSchema
  ).optional(),
  defaultApplicationJsonObject: z.lazy(() =>
    HrisTimeOffRequestsAllHrisTimeOffRequestsResponseBody$outboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    twoHundredApplicationJsonObject: "200_application/json_object",
    defaultApplicationJsonObject: "default_application/json_object",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsAllResponse$ {
  /** @deprecated use `HrisTimeOffRequestsAllResponse$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsAllResponse$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllResponse$outboundSchema` instead. */
  export const outboundSchema = HrisTimeOffRequestsAllResponse$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsAllResponse$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsAllResponse$Outbound;
}

export function hrisTimeOffRequestsAllResponseToJSON(
  hrisTimeOffRequestsAllResponse: HrisTimeOffRequestsAllResponse,
): string {
  return JSON.stringify(
    HrisTimeOffRequestsAllResponse$outboundSchema.parse(
      hrisTimeOffRequestsAllResponse,
    ),
  );
}

export function hrisTimeOffRequestsAllResponseFromJSON(
  jsonString: string,
): SafeParseResult<HrisTimeOffRequestsAllResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisTimeOffRequestsAllResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisTimeOffRequestsAllResponse' from JSON`,
  );
}
