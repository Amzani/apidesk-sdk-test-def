/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PipelinesAddSecurity = {
  apiKey: string;
};

export type PipelinesAddRequest = {
  /**
   * A boolean flag that, when set to true, includes the raw response in the output. This is primarily used for debugging purposes to provide more detailed information about the response. By default, this is set to false.
   */
  raw?: boolean | undefined;
  /**
   * A unique identifier for the consumer making the request. This ID is crucial for authenticating the consumer and ensuring that the correct data is accessed or modified. It must be a valid consumer ID associated with your account.
   */
  consumerId: string;
  /**
   * The unique identifier of your Unify application. This ID is used to authenticate the application making the request and must match the ID assigned to your application in the Apideck platform.
   */
  appId: string;
  /**
   * An optional parameter used to specify the target service when multiple integrations are active. This ID helps direct the request to the correct service, such as 'pipedrive' or 'salesforce'. It is only necessary if your setup includes multiple services.
   */
  serviceId?: string | undefined;
  pipelineCreateRequest: components.PipelineCreateRequest;
};

export type PipelinesAddResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * Pipeline created
   */
  pipelineCreateResponse?: components.PipelineCreateResponse | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const PipelinesAddSecurity$inboundSchema: z.ZodType<
  PipelinesAddSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string(),
});

/** @internal */
export type PipelinesAddSecurity$Outbound = {
  apiKey: string;
};

/** @internal */
export const PipelinesAddSecurity$outboundSchema: z.ZodType<
  PipelinesAddSecurity$Outbound,
  z.ZodTypeDef,
  PipelinesAddSecurity
> = z.object({
  apiKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PipelinesAddSecurity$ {
  /** @deprecated use `PipelinesAddSecurity$inboundSchema` instead. */
  export const inboundSchema = PipelinesAddSecurity$inboundSchema;
  /** @deprecated use `PipelinesAddSecurity$outboundSchema` instead. */
  export const outboundSchema = PipelinesAddSecurity$outboundSchema;
  /** @deprecated use `PipelinesAddSecurity$Outbound` instead. */
  export type Outbound = PipelinesAddSecurity$Outbound;
}

export function pipelinesAddSecurityToJSON(
  pipelinesAddSecurity: PipelinesAddSecurity,
): string {
  return JSON.stringify(
    PipelinesAddSecurity$outboundSchema.parse(pipelinesAddSecurity),
  );
}

export function pipelinesAddSecurityFromJSON(
  jsonString: string,
): SafeParseResult<PipelinesAddSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PipelinesAddSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PipelinesAddSecurity' from JSON`,
  );
}

/** @internal */
export const PipelinesAddRequest$inboundSchema: z.ZodType<
  PipelinesAddRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  raw: z.boolean().default(false),
  consumerId: z.string(),
  appId: z.string(),
  serviceId: z.string().optional(),
  PipelineCreateRequest: components.PipelineCreateRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "PipelineCreateRequest": "pipelineCreateRequest",
  });
});

/** @internal */
export type PipelinesAddRequest$Outbound = {
  raw: boolean;
  consumerId: string;
  appId: string;
  serviceId?: string | undefined;
  PipelineCreateRequest: components.PipelineCreateRequest$Outbound;
};

/** @internal */
export const PipelinesAddRequest$outboundSchema: z.ZodType<
  PipelinesAddRequest$Outbound,
  z.ZodTypeDef,
  PipelinesAddRequest
> = z.object({
  raw: z.boolean().default(false),
  consumerId: z.string(),
  appId: z.string(),
  serviceId: z.string().optional(),
  pipelineCreateRequest: components.PipelineCreateRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    pipelineCreateRequest: "PipelineCreateRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PipelinesAddRequest$ {
  /** @deprecated use `PipelinesAddRequest$inboundSchema` instead. */
  export const inboundSchema = PipelinesAddRequest$inboundSchema;
  /** @deprecated use `PipelinesAddRequest$outboundSchema` instead. */
  export const outboundSchema = PipelinesAddRequest$outboundSchema;
  /** @deprecated use `PipelinesAddRequest$Outbound` instead. */
  export type Outbound = PipelinesAddRequest$Outbound;
}

export function pipelinesAddRequestToJSON(
  pipelinesAddRequest: PipelinesAddRequest,
): string {
  return JSON.stringify(
    PipelinesAddRequest$outboundSchema.parse(pipelinesAddRequest),
  );
}

export function pipelinesAddRequestFromJSON(
  jsonString: string,
): SafeParseResult<PipelinesAddRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PipelinesAddRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PipelinesAddRequest' from JSON`,
  );
}

/** @internal */
export const PipelinesAddResponse$inboundSchema: z.ZodType<
  PipelinesAddResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  PipelineCreateResponse: components.PipelineCreateResponse$inboundSchema
    .optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "PipelineCreateResponse": "pipelineCreateResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type PipelinesAddResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  PipelineCreateResponse?:
    | components.PipelineCreateResponse$Outbound
    | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const PipelinesAddResponse$outboundSchema: z.ZodType<
  PipelinesAddResponse$Outbound,
  z.ZodTypeDef,
  PipelinesAddResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  pipelineCreateResponse: components.PipelineCreateResponse$outboundSchema
    .optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    pipelineCreateResponse: "PipelineCreateResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PipelinesAddResponse$ {
  /** @deprecated use `PipelinesAddResponse$inboundSchema` instead. */
  export const inboundSchema = PipelinesAddResponse$inboundSchema;
  /** @deprecated use `PipelinesAddResponse$outboundSchema` instead. */
  export const outboundSchema = PipelinesAddResponse$outboundSchema;
  /** @deprecated use `PipelinesAddResponse$Outbound` instead. */
  export type Outbound = PipelinesAddResponse$Outbound;
}

export function pipelinesAddResponseToJSON(
  pipelinesAddResponse: PipelinesAddResponse,
): string {
  return JSON.stringify(
    PipelinesAddResponse$outboundSchema.parse(pipelinesAddResponse),
  );
}

export function pipelinesAddResponseFromJSON(
  jsonString: string,
): SafeParseResult<PipelinesAddResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PipelinesAddResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PipelinesAddResponse' from JSON`,
  );
}
