lockVersion: 2.0.0
id: 8238423c-5f65-470e-b680-91edfd45a6e4
management:
  docChecksum: f9a72d957c075583e15030199957ee00
  docVersion: 10.8.2
  speakeasyVersion: 1.468.2
  generationVersion: 2.493.4
  releaseVersion: 0.2.0
  configChecksum: b112fee4884bb40664766523751378c8
features:
  typescript:
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.1.11
    core: 3.18.12
    defaultEnabledRetries: 0.1.0
    deprecations: 2.81.1
    devContainers: 2.90.0
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.1.2
    errors: 2.84.0
    globalSecurity: 2.82.12
    globalSecurityCallbacks: 0.1.0
    globalServerURLs: 2.82.4
    inputOutputModels: 2.82.0
    methodSecurity: 2.82.5
    nameOverrides: 2.81.2
    nullables: 0.1.0
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.2.0
    unions: 2.85.8
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .eslintrc.cjs
  - .gitattributes
  - .npmignore
  - FUNCTIONS.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/models/components/accounttype.md
  - docs/models/components/activitiesfilter.md
  - docs/models/components/activitieslistresponse.md
  - docs/models/components/activitieslistresponsecursors.md
  - docs/models/components/activitieslistresponsecustomfields.md
  - docs/models/components/activitieslistresponsecustommappings.md
  - docs/models/components/activitieslistresponsedata.md
  - docs/models/components/activitieslistresponsedatatype.md
  - docs/models/components/activitieslistresponseextendpaths.md
  - docs/models/components/activitieslistresponselinks.md
  - docs/models/components/activitieslistresponselocationaddress.md
  - docs/models/components/activitieslistresponsemeta.md
  - docs/models/components/activitieslistresponsepassthrough.md
  - docs/models/components/activitieslistresponseshowas.md
  - docs/models/components/activitieslistresponsestatus.md
  - docs/models/components/activitieslistresponsetype.md
  - docs/models/components/activitieslistresponsevalue.md
  - docs/models/components/activitieslistresponsevalue4.md
  - docs/models/components/activitieslistresponsevalue6.md
  - docs/models/components/activitiessort.md
  - docs/models/components/activitiessortby.md
  - docs/models/components/activitiessortdirection.md
  - docs/models/components/activitycreaterequest.md
  - docs/models/components/activitycreaterequestattendees.md
  - docs/models/components/activitycreaterequestcustomfields.md
  - docs/models/components/activitycreaterequestextendpaths.md
  - docs/models/components/activitycreaterequestlocationaddresstype.md
  - docs/models/components/activitycreaterequestpassthrough.md
  - docs/models/components/activitycreaterequesttype.md
  - docs/models/components/activitycreaterequestvalue.md
  - docs/models/components/activitycreaterequestvalue4.md
  - docs/models/components/activitycreaterequestvalue6.md
  - docs/models/components/activitycreateresponse.md
  - docs/models/components/activitycreateresponseunifiedid.md
  - docs/models/components/activitydeleteresponse.md
  - docs/models/components/activitydeleteresponseunifiedid.md
  - docs/models/components/activitygetresponse.md
  - docs/models/components/activitygetresponseattendees.md
  - docs/models/components/activitygetresponsecustomfields.md
  - docs/models/components/activitygetresponsecustommappings.md
  - docs/models/components/activitygetresponsedata.md
  - docs/models/components/activitygetresponsedatatype.md
  - docs/models/components/activitygetresponseextendpaths.md
  - docs/models/components/activitygetresponselocationaddress.md
  - docs/models/components/activitygetresponsepassthrough.md
  - docs/models/components/activitygetresponseshowas.md
  - docs/models/components/activitygetresponsestatus.md
  - docs/models/components/activitygetresponsetype.md
  - docs/models/components/activitygetresponsevalue.md
  - docs/models/components/activitygetresponsevalue4.md
  - docs/models/components/activitygetresponsevalue6.md
  - docs/models/components/activityupdaterequest.md
  - docs/models/components/activityupdaterequestattendees.md
  - docs/models/components/activityupdaterequestcustomfields.md
  - docs/models/components/activityupdaterequestextendpaths.md
  - docs/models/components/activityupdaterequestlocationaddress.md
  - docs/models/components/activityupdaterequestlocationaddresstype.md
  - docs/models/components/activityupdaterequestpassthrough.md
  - docs/models/components/activityupdaterequestshowas.md
  - docs/models/components/activityupdaterequeststatus.md
  - docs/models/components/activityupdaterequesttype.md
  - docs/models/components/activityupdaterequestvalue.md
  - docs/models/components/activityupdaterequestvalue4.md
  - docs/models/components/activityupdaterequestvalue6.md
  - docs/models/components/activityupdateresponse.md
  - docs/models/components/activityupdateresponseunifiedid.md
  - docs/models/components/addresses.md
  - docs/models/components/attendees.md
  - docs/models/components/bankaccounts.md
  - docs/models/components/by.md
  - docs/models/components/companiesfilter.md
  - docs/models/components/companieslistresponse.md
  - docs/models/components/companieslistresponseaccounttype.md
  - docs/models/components/companieslistresponseaddresses.md
  - docs/models/components/companieslistresponsebankaccounts.md
  - docs/models/components/companieslistresponsecompanyrowtype.md
  - docs/models/components/companieslistresponsecurrency.md
  - docs/models/components/companieslistresponsecustomfields.md
  - docs/models/components/companieslistresponsedatacurrency.md
  - docs/models/components/companieslistresponsedataemailstype.md
  - docs/models/components/companieslistresponsedataphonenumberstype.md
  - docs/models/components/companieslistresponsedatatype.md
  - docs/models/components/companieslistresponseemails.md
  - docs/models/components/companieslistresponseextendpaths.md
  - docs/models/components/companieslistresponsepassthrough.md
  - docs/models/components/companieslistresponsephonenumbers.md
  - docs/models/components/companieslistresponsesociallinks.md
  - docs/models/components/companieslistresponsetype.md
  - docs/models/components/companieslistresponsevalue.md
  - docs/models/components/companieslistresponsevalue4.md
  - docs/models/components/companieslistresponsevalue6.md
  - docs/models/components/companieslistresponsewebsites.md
  - docs/models/components/companiessort.md
  - docs/models/components/companycreaterequest.md
  - docs/models/components/companycreaterequestcurrency.md
  - docs/models/components/companycreaterequestemailstype.md
  - docs/models/components/companycreaterequestphonenumberstype.md
  - docs/models/components/companycreaterequesttype.md
  - docs/models/components/companycreaterequestwebsitestype.md
  - docs/models/components/companycreateresponse.md
  - docs/models/components/companydeleteresponse.md
  - docs/models/components/companydeleteresponseunifiedid.md
  - docs/models/components/companygetresponse.md
  - docs/models/components/companygetresponseaccounttype.md
  - docs/models/components/companygetresponseaddresses.md
  - docs/models/components/companygetresponsebankaccounts.md
  - docs/models/components/companygetresponsecompanyrowtype.md
  - docs/models/components/companygetresponsecurrency.md
  - docs/models/components/companygetresponsecustomfields.md
  - docs/models/components/companygetresponsecustommappings.md
  - docs/models/components/companygetresponsedata.md
  - docs/models/components/companygetresponsedatacurrency.md
  - docs/models/components/companygetresponsedataemailstype.md
  - docs/models/components/companygetresponsedataphonenumberstype.md
  - docs/models/components/companygetresponsedatatype.md
  - docs/models/components/companygetresponseemails.md
  - docs/models/components/companygetresponseextendpaths.md
  - docs/models/components/companygetresponsepassthrough.md
  - docs/models/components/companygetresponsephonenumbers.md
  - docs/models/components/companygetresponsesociallinks.md
  - docs/models/components/companygetresponsetype.md
  - docs/models/components/companygetresponsevalue.md
  - docs/models/components/companygetresponsevalue4.md
  - docs/models/components/companygetresponsevalue6.md
  - docs/models/components/companygetresponsewebsites.md
  - docs/models/components/companyrowtype.md
  - docs/models/components/companyupdaterequest.md
  - docs/models/components/companyupdaterequestaccounttype.md
  - docs/models/components/companyupdaterequestaddresses.md
  - docs/models/components/companyupdaterequestaddressestype.md
  - docs/models/components/companyupdaterequestbankaccounts.md
  - docs/models/components/companyupdaterequestbankaccountscurrency.md
  - docs/models/components/companyupdaterequestcompanyrowtype.md
  - docs/models/components/companyupdaterequestcurrency.md
  - docs/models/components/companyupdaterequestcustomfields.md
  - docs/models/components/companyupdaterequestemails.md
  - docs/models/components/companyupdaterequestemailstype.md
  - docs/models/components/companyupdaterequestextendpaths.md
  - docs/models/components/companyupdaterequestpassthrough.md
  - docs/models/components/companyupdaterequestphonenumbers.md
  - docs/models/components/companyupdaterequestphonenumberstype.md
  - docs/models/components/companyupdaterequestsociallinks.md
  - docs/models/components/companyupdaterequesttype.md
  - docs/models/components/companyupdaterequestvalue.md
  - docs/models/components/companyupdaterequestwebsites.md
  - docs/models/components/companyupdateresponse.md
  - docs/models/components/companyupdateresponseunifiedid.md
  - docs/models/components/contactcreaterequest.md
  - docs/models/components/contactcreaterequestaddresses.md
  - docs/models/components/contactcreaterequestaddressestype.md
  - docs/models/components/contactcreaterequestcustomfields.md
  - docs/models/components/contactcreaterequestemails.md
  - docs/models/components/contactcreaterequestemailstype.md
  - docs/models/components/contactcreaterequestextendpaths.md
  - docs/models/components/contactcreaterequestpassthrough.md
  - docs/models/components/contactcreaterequestphonenumbers.md
  - docs/models/components/contactcreaterequestphonenumberstype.md
  - docs/models/components/contactcreaterequestsociallinks.md
  - docs/models/components/contactcreaterequesttype.md
  - docs/models/components/contactcreaterequestvalue.md
  - docs/models/components/contactcreaterequestvalue4.md
  - docs/models/components/contactcreaterequestvalue6.md
  - docs/models/components/contactcreaterequestwebsites.md
  - docs/models/components/contactcreateresponse.md
  - docs/models/components/contactcreateresponseunifiedid.md
  - docs/models/components/contactdeleteresponse.md
  - docs/models/components/contactdeleteresponseunifiedid.md
  - docs/models/components/contactgetresponse.md
  - docs/models/components/contactgetresponseaddresses.md
  - docs/models/components/contactgetresponsecustomfields.md
  - docs/models/components/contactgetresponsecustommappings.md
  - docs/models/components/contactgetresponsedata.md
  - docs/models/components/contactgetresponsedataaddressestype.md
  - docs/models/components/contactgetresponsedataemailstype.md
  - docs/models/components/contactgetresponsedataphonenumberstype.md
  - docs/models/components/contactgetresponsedatatype.md
  - docs/models/components/contactgetresponseemails.md
  - docs/models/components/contactgetresponseextendpaths.md
  - docs/models/components/contactgetresponsegender.md
  - docs/models/components/contactgetresponsepassthrough.md
  - docs/models/components/contactgetresponsephonenumbers.md
  - docs/models/components/contactgetresponsesociallinks.md
  - docs/models/components/contactgetresponsetype.md
  - docs/models/components/contactgetresponsevalue.md
  - docs/models/components/contactgetresponsevalue4.md
  - docs/models/components/contactgetresponsevalue6.md
  - docs/models/components/contactgetresponsewebsites.md
  - docs/models/components/contactsfilter.md
  - docs/models/components/contactslistresponse.md
  - docs/models/components/contactslistresponseaddresses.md
  - docs/models/components/contactslistresponsecursors.md
  - docs/models/components/contactslistresponsecustomfields.md
  - docs/models/components/contactslistresponsecustommappings.md
  - docs/models/components/contactslistresponsedata.md
  - docs/models/components/contactslistresponsedataaddressestype.md
  - docs/models/components/contactslistresponsedataemailstype.md
  - docs/models/components/contactslistresponsedataphonenumberstype.md
  - docs/models/components/contactslistresponsedatatype.md
  - docs/models/components/contactslistresponseemails.md
  - docs/models/components/contactslistresponseextendpaths.md
  - docs/models/components/contactslistresponsegender.md
  - docs/models/components/contactslistresponselinks.md
  - docs/models/components/contactslistresponsemeta.md
  - docs/models/components/contactslistresponsepassthrough.md
  - docs/models/components/contactslistresponsephonenumbers.md
  - docs/models/components/contactslistresponsesociallinks.md
  - docs/models/components/contactslistresponsetype.md
  - docs/models/components/contactslistresponsevalue.md
  - docs/models/components/contactslistresponsevalue4.md
  - docs/models/components/contactslistresponsevalue6.md
  - docs/models/components/contactslistresponsewebsites.md
  - docs/models/components/contactssort.md
  - docs/models/components/contactssortby.md
  - docs/models/components/contactssortdirection.md
  - docs/models/components/contactupdaterequest.md
  - docs/models/components/contactupdaterequestaddresses.md
  - docs/models/components/contactupdaterequestaddressestype.md
  - docs/models/components/contactupdaterequestcustomfields.md
  - docs/models/components/contactupdaterequestemails.md
  - docs/models/components/contactupdaterequestemailstype.md
  - docs/models/components/contactupdaterequestextendpaths.md
  - docs/models/components/contactupdaterequestgender.md
  - docs/models/components/contactupdaterequestpassthrough.md
  - docs/models/components/contactupdaterequestphonenumbers.md
  - docs/models/components/contactupdaterequestphonenumberstype.md
  - docs/models/components/contactupdaterequestsociallinks.md
  - docs/models/components/contactupdaterequesttype.md
  - docs/models/components/contactupdaterequestvalue.md
  - docs/models/components/contactupdaterequestvalue4.md
  - docs/models/components/contactupdaterequestvalue6.md
  - docs/models/components/contactupdaterequestwebsites.md
  - docs/models/components/contactupdaterequestwebsitestype.md
  - docs/models/components/contactupdateresponse.md
  - docs/models/components/contactupdateresponseunifiedid.md
  - docs/models/components/currency.md
  - docs/models/components/cursors.md
  - docs/models/components/customfields.md
  - docs/models/components/custommappings.md
  - docs/models/components/data.md
  - docs/models/components/detail.md
  - docs/models/components/direction.md
  - docs/models/components/emails.md
  - docs/models/components/extendpaths.md
  - docs/models/components/four.md
  - docs/models/components/gender.md
  - docs/models/components/httpmetadata.md
  - docs/models/components/leadcreaterequest.md
  - docs/models/components/leadcreaterequestaddresses.md
  - docs/models/components/leadcreaterequestaddressestype.md
  - docs/models/components/leadcreaterequestcurrency.md
  - docs/models/components/leadcreaterequestcustomfields.md
  - docs/models/components/leadcreaterequestemails.md
  - docs/models/components/leadcreaterequestemailstype.md
  - docs/models/components/leadcreaterequestextendpaths.md
  - docs/models/components/leadcreaterequestpassthrough.md
  - docs/models/components/leadcreaterequestphonenumbers.md
  - docs/models/components/leadcreaterequestphonenumberstype.md
  - docs/models/components/leadcreaterequestsociallinks.md
  - docs/models/components/leadcreaterequesttype.md
  - docs/models/components/leadcreaterequestvalue.md
  - docs/models/components/leadcreaterequestvalue4.md
  - docs/models/components/leadcreaterequestvalue6.md
  - docs/models/components/leadcreaterequestwebsites.md
  - docs/models/components/leadcreateresponse.md
  - docs/models/components/leadcreateresponseunifiedid.md
  - docs/models/components/leaddeleteresponse.md
  - docs/models/components/leaddeleteresponseunifiedid.md
  - docs/models/components/leadgetresponse.md
  - docs/models/components/leadgetresponseaddresses.md
  - docs/models/components/leadgetresponsecurrency.md
  - docs/models/components/leadgetresponsecustomfields.md
  - docs/models/components/leadgetresponsecustommappings.md
  - docs/models/components/leadgetresponsedata.md
  - docs/models/components/leadgetresponsedataemailstype.md
  - docs/models/components/leadgetresponsedataphonenumberstype.md
  - docs/models/components/leadgetresponsedatatype.md
  - docs/models/components/leadgetresponseemails.md
  - docs/models/components/leadgetresponseextendpaths.md
  - docs/models/components/leadgetresponsepassthrough.md
  - docs/models/components/leadgetresponsephonenumbers.md
  - docs/models/components/leadgetresponsesociallinks.md
  - docs/models/components/leadgetresponsetype.md
  - docs/models/components/leadgetresponsevalue.md
  - docs/models/components/leadgetresponsevalue4.md
  - docs/models/components/leadgetresponsevalue6.md
  - docs/models/components/leadgetresponsewebsites.md
  - docs/models/components/leadsfilter.md
  - docs/models/components/leadslistresponse.md
  - docs/models/components/leadslistresponseaddresses.md
  - docs/models/components/leadslistresponsecurrency.md
  - docs/models/components/leadslistresponsecursors.md
  - docs/models/components/leadslistresponsecustomfields.md
  - docs/models/components/leadslistresponsecustommappings.md
  - docs/models/components/leadslistresponsedata.md
  - docs/models/components/leadslistresponsedataemailstype.md
  - docs/models/components/leadslistresponsedataphonenumberstype.md
  - docs/models/components/leadslistresponsedatatype.md
  - docs/models/components/leadslistresponseemails.md
  - docs/models/components/leadslistresponseextendpaths.md
  - docs/models/components/leadslistresponselinks.md
  - docs/models/components/leadslistresponsemeta.md
  - docs/models/components/leadslistresponsepassthrough.md
  - docs/models/components/leadslistresponsephonenumbers.md
  - docs/models/components/leadslistresponsesociallinks.md
  - docs/models/components/leadslistresponsetype.md
  - docs/models/components/leadslistresponsevalue.md
  - docs/models/components/leadslistresponsevalue4.md
  - docs/models/components/leadslistresponsevalue6.md
  - docs/models/components/leadslistresponsewebsites.md
  - docs/models/components/leadssort.md
  - docs/models/components/leadssortby.md
  - docs/models/components/leadssortdirection.md
  - docs/models/components/leadupdaterequest.md
  - docs/models/components/leadupdaterequestaddresses.md
  - docs/models/components/leadupdaterequestaddressestype.md
  - docs/models/components/leadupdaterequestcurrency.md
  - docs/models/components/leadupdaterequestcustomfields.md
  - docs/models/components/leadupdaterequestemails.md
  - docs/models/components/leadupdaterequestemailstype.md
  - docs/models/components/leadupdaterequestextendpaths.md
  - docs/models/components/leadupdaterequestpassthrough.md
  - docs/models/components/leadupdaterequestphonenumbers.md
  - docs/models/components/leadupdaterequestphonenumberstype.md
  - docs/models/components/leadupdaterequestsociallinks.md
  - docs/models/components/leadupdaterequesttype.md
  - docs/models/components/leadupdaterequestvalue.md
  - docs/models/components/leadupdaterequestvalue4.md
  - docs/models/components/leadupdaterequestvalue6.md
  - docs/models/components/leadupdaterequestwebsites.md
  - docs/models/components/leadupdateresponse.md
  - docs/models/components/leadupdateresponseunifiedid.md
  - docs/models/components/links.md
  - docs/models/components/locationaddress.md
  - docs/models/components/meta.md
  - docs/models/components/notecreaterequest.md
  - docs/models/components/notecreaterequestextendpaths.md
  - docs/models/components/notecreaterequestpassthrough.md
  - docs/models/components/notecreateresponse.md
  - docs/models/components/notecreateresponseunifiedid.md
  - docs/models/components/notedeleteresponse.md
  - docs/models/components/notedeleteresponseunifiedid.md
  - docs/models/components/notegetresponse.md
  - docs/models/components/notegetresponsecustommappings.md
  - docs/models/components/notegetresponsedata.md
  - docs/models/components/notegetresponseextendpaths.md
  - docs/models/components/notegetresponsepassthrough.md
  - docs/models/components/noteslistresponse.md
  - docs/models/components/noteslistresponsecursors.md
  - docs/models/components/noteslistresponsecustommappings.md
  - docs/models/components/noteslistresponsedata.md
  - docs/models/components/noteslistresponseextendpaths.md
  - docs/models/components/noteslistresponselinks.md
  - docs/models/components/noteslistresponsemeta.md
  - docs/models/components/noteslistresponsepassthrough.md
  - docs/models/components/noteupdaterequest.md
  - docs/models/components/noteupdaterequestextendpaths.md
  - docs/models/components/noteupdaterequestpassthrough.md
  - docs/models/components/noteupdateresponse.md
  - docs/models/components/noteupdateresponseunifiedid.md
  - docs/models/components/opportunitiesfilter.md
  - docs/models/components/opportunitieslistresponse.md
  - docs/models/components/opportunitieslistresponsecurrency.md
  - docs/models/components/opportunitieslistresponsecursors.md
  - docs/models/components/opportunitieslistresponsecustomfields.md
  - docs/models/components/opportunitieslistresponsecustommappings.md
  - docs/models/components/opportunitieslistresponsedata.md
  - docs/models/components/opportunitieslistresponseextendpaths.md
  - docs/models/components/opportunitieslistresponselinks.md
  - docs/models/components/opportunitieslistresponsemeta.md
  - docs/models/components/opportunitieslistresponsepassthrough.md
  - docs/models/components/opportunitieslistresponsevalue.md
  - docs/models/components/opportunitieslistresponsevalue4.md
  - docs/models/components/opportunitieslistresponsevalue6.md
  - docs/models/components/opportunitiessort.md
  - docs/models/components/opportunitiessortby.md
  - docs/models/components/opportunitiessortdirection.md
  - docs/models/components/opportunitycreaterequest.md
  - docs/models/components/opportunitycreaterequestcurrency.md
  - docs/models/components/opportunitycreaterequestcustomfields.md
  - docs/models/components/opportunitycreaterequestextendpaths.md
  - docs/models/components/opportunitycreaterequestpassthrough.md
  - docs/models/components/opportunitycreaterequestvalue.md
  - docs/models/components/opportunitycreaterequestvalue4.md
  - docs/models/components/opportunitycreaterequestvalue6.md
  - docs/models/components/opportunitycreateresponse.md
  - docs/models/components/opportunitycreateresponseunifiedid.md
  - docs/models/components/opportunitydeleteresponse.md
  - docs/models/components/opportunitydeleteresponseunifiedid.md
  - docs/models/components/opportunitygetresponse.md
  - docs/models/components/opportunitygetresponsecurrency.md
  - docs/models/components/opportunitygetresponsecustomfields.md
  - docs/models/components/opportunitygetresponsecustommappings.md
  - docs/models/components/opportunitygetresponsedata.md
  - docs/models/components/opportunitygetresponseextendpaths.md
  - docs/models/components/opportunitygetresponsepassthrough.md
  - docs/models/components/opportunitygetresponsevalue.md
  - docs/models/components/opportunitygetresponsevalue4.md
  - docs/models/components/opportunitygetresponsevalue6.md
  - docs/models/components/opportunityupdaterequest.md
  - docs/models/components/opportunityupdaterequestcurrency.md
  - docs/models/components/opportunityupdaterequestcustomfields.md
  - docs/models/components/opportunityupdaterequestextendpaths.md
  - docs/models/components/opportunityupdaterequestpassthrough.md
  - docs/models/components/opportunityupdaterequestvalue.md
  - docs/models/components/opportunityupdaterequestvalue4.md
  - docs/models/components/opportunityupdaterequestvalue6.md
  - docs/models/components/opportunityupdateresponse.md
  - docs/models/components/opportunityupdateresponseunifiedid.md
  - docs/models/components/passthrough.md
  - docs/models/components/phonenumbers.md
  - docs/models/components/pipelinecreaterequest.md
  - docs/models/components/pipelinecreaterequestcurrency.md
  - docs/models/components/pipelinecreaterequestextendpaths.md
  - docs/models/components/pipelinecreaterequestpassthrough.md
  - docs/models/components/pipelinecreaterequeststages.md
  - docs/models/components/pipelinecreateresponse.md
  - docs/models/components/pipelinecreateresponseunifiedid.md
  - docs/models/components/pipelinedeleteresponse.md
  - docs/models/components/pipelinedeleteresponseunifiedid.md
  - docs/models/components/pipelinegetresponse.md
  - docs/models/components/pipelinegetresponsecurrency.md
  - docs/models/components/pipelinegetresponsedata.md
  - docs/models/components/pipelinegetresponseextendpaths.md
  - docs/models/components/pipelinegetresponsepassthrough.md
  - docs/models/components/pipelinegetresponsestages.md
  - docs/models/components/pipelineslistresponse.md
  - docs/models/components/pipelineslistresponsecurrency.md
  - docs/models/components/pipelineslistresponsecursors.md
  - docs/models/components/pipelineslistresponsedata.md
  - docs/models/components/pipelineslistresponseextendpaths.md
  - docs/models/components/pipelineslistresponselinks.md
  - docs/models/components/pipelineslistresponsemeta.md
  - docs/models/components/pipelineslistresponsepassthrough.md
  - docs/models/components/pipelineupdaterequest.md
  - docs/models/components/pipelineupdaterequestcurrency.md
  - docs/models/components/pipelineupdaterequestextendpaths.md
  - docs/models/components/pipelineupdaterequestpassthrough.md
  - docs/models/components/pipelineupdaterequeststages.md
  - docs/models/components/pipelineupdateresponse.md
  - docs/models/components/pipelineupdateresponseunifiedid.md
  - docs/models/components/security.md
  - docs/models/components/showas.md
  - docs/models/components/six.md
  - docs/models/components/sociallinks.md
  - docs/models/components/stages.md
  - docs/models/components/status.md
  - docs/models/components/type.md
  - docs/models/components/unexpectederrorresponse.md
  - docs/models/components/unifiedid.md
  - docs/models/components/usercreaterequest.md
  - docs/models/components/usercreaterequestaddresses.md
  - docs/models/components/usercreaterequestemails.md
  - docs/models/components/usercreaterequestemailstype.md
  - docs/models/components/usercreaterequestextendpaths.md
  - docs/models/components/usercreaterequestpassthrough.md
  - docs/models/components/usercreaterequestphonenumbers.md
  - docs/models/components/usercreaterequestphonenumberstype.md
  - docs/models/components/usercreaterequesttype.md
  - docs/models/components/usercreateresponse.md
  - docs/models/components/usercreateresponseunifiedid.md
  - docs/models/components/userdeleteresponse.md
  - docs/models/components/userdeleteresponseunifiedid.md
  - docs/models/components/usergetresponse.md
  - docs/models/components/usergetresponseaddresses.md
  - docs/models/components/usergetresponsecustommappings.md
  - docs/models/components/usergetresponsedata.md
  - docs/models/components/usergetresponsedataemailstype.md
  - docs/models/components/usergetresponsedatatype.md
  - docs/models/components/usergetresponseemails.md
  - docs/models/components/usergetresponseextendpaths.md
  - docs/models/components/usergetresponsepassthrough.md
  - docs/models/components/usergetresponsephonenumbers.md
  - docs/models/components/usergetresponsetype.md
  - docs/models/components/userslistresponse.md
  - docs/models/components/userslistresponseaddresses.md
  - docs/models/components/userslistresponsecursors.md
  - docs/models/components/userslistresponsecustommappings.md
  - docs/models/components/userslistresponsedata.md
  - docs/models/components/userslistresponsedataemailstype.md
  - docs/models/components/userslistresponsedatatype.md
  - docs/models/components/userslistresponseemails.md
  - docs/models/components/userslistresponseextendpaths.md
  - docs/models/components/userslistresponselinks.md
  - docs/models/components/userslistresponsemeta.md
  - docs/models/components/userslistresponsepassthrough.md
  - docs/models/components/userslistresponsephonenumbers.md
  - docs/models/components/userslistresponsetype.md
  - docs/models/components/userupdaterequest.md
  - docs/models/components/userupdaterequestaddresses.md
  - docs/models/components/userupdaterequestemails.md
  - docs/models/components/userupdaterequestemailstype.md
  - docs/models/components/userupdaterequestextendpaths.md
  - docs/models/components/userupdaterequestpassthrough.md
  - docs/models/components/userupdaterequestphonenumbers.md
  - docs/models/components/userupdaterequestphonenumberstype.md
  - docs/models/components/userupdaterequesttype.md
  - docs/models/components/userupdateresponse.md
  - docs/models/components/userupdateresponseunifiedid.md
  - docs/models/components/value.md
  - docs/models/components/value4.md
  - docs/models/components/value6.md
  - docs/models/components/websites.md
  - docs/models/errors/badrequestresponse.md
  - docs/models/errors/detail.md
  - docs/models/errors/notfoundresponse.md
  - docs/models/errors/notfoundresponsedetail.md
  - docs/models/errors/paymentrequiredresponse.md
  - docs/models/errors/unauthorizedresponse.md
  - docs/models/errors/unauthorizedresponsedetail.md
  - docs/models/errors/unprocessableentityresponse.md
  - docs/models/errors/unprocessableentityresponsedetail.md
  - docs/models/operations/activitiesaddrequest.md
  - docs/models/operations/activitiesaddresponse.md
  - docs/models/operations/activitiesaddsecurity.md
  - docs/models/operations/activitiesallrequest.md
  - docs/models/operations/activitiesallresponse.md
  - docs/models/operations/activitiesallsecurity.md
  - docs/models/operations/activitiesdeleterequest.md
  - docs/models/operations/activitiesdeleteresponse.md
  - docs/models/operations/activitiesdeletesecurity.md
  - docs/models/operations/activitiesonerequest.md
  - docs/models/operations/activitiesoneresponse.md
  - docs/models/operations/activitiesonesecurity.md
  - docs/models/operations/activitiesupdaterequest.md
  - docs/models/operations/activitiesupdateresponse.md
  - docs/models/operations/activitiesupdatesecurity.md
  - docs/models/operations/companiesaddrequest.md
  - docs/models/operations/companiesaddresponse.md
  - docs/models/operations/companiesaddsecurity.md
  - docs/models/operations/companiesallrequest.md
  - docs/models/operations/companiesallresponse.md
  - docs/models/operations/companiesallsecurity.md
  - docs/models/operations/companiesdeleterequest.md
  - docs/models/operations/companiesdeleteresponse.md
  - docs/models/operations/companiesdeletesecurity.md
  - docs/models/operations/companiesonerequest.md
  - docs/models/operations/companiesoneresponse.md
  - docs/models/operations/companiesonesecurity.md
  - docs/models/operations/companiesupdaterequest.md
  - docs/models/operations/companiesupdateresponse.md
  - docs/models/operations/companiesupdatesecurity.md
  - docs/models/operations/contactsaddrequest.md
  - docs/models/operations/contactsaddresponse.md
  - docs/models/operations/contactsaddsecurity.md
  - docs/models/operations/contactsallrequest.md
  - docs/models/operations/contactsallresponse.md
  - docs/models/operations/contactsallsecurity.md
  - docs/models/operations/contactsdeleterequest.md
  - docs/models/operations/contactsdeleteresponse.md
  - docs/models/operations/contactsdeletesecurity.md
  - docs/models/operations/contactsonerequest.md
  - docs/models/operations/contactsoneresponse.md
  - docs/models/operations/contactsonesecurity.md
  - docs/models/operations/contactsupdaterequest.md
  - docs/models/operations/contactsupdateresponse.md
  - docs/models/operations/contactsupdatesecurity.md
  - docs/models/operations/leadsaddrequest.md
  - docs/models/operations/leadsaddresponse.md
  - docs/models/operations/leadsaddsecurity.md
  - docs/models/operations/leadsallrequest.md
  - docs/models/operations/leadsallresponse.md
  - docs/models/operations/leadsallsecurity.md
  - docs/models/operations/leadsdeleterequest.md
  - docs/models/operations/leadsdeleteresponse.md
  - docs/models/operations/leadsdeletesecurity.md
  - docs/models/operations/leadsonerequest.md
  - docs/models/operations/leadsoneresponse.md
  - docs/models/operations/leadsonesecurity.md
  - docs/models/operations/leadsupdaterequest.md
  - docs/models/operations/leadsupdateresponse.md
  - docs/models/operations/leadsupdatesecurity.md
  - docs/models/operations/notesaddrequest.md
  - docs/models/operations/notesaddresponse.md
  - docs/models/operations/notesaddsecurity.md
  - docs/models/operations/notesallrequest.md
  - docs/models/operations/notesallresponse.md
  - docs/models/operations/notesallsecurity.md
  - docs/models/operations/notesdeleterequest.md
  - docs/models/operations/notesdeleteresponse.md
  - docs/models/operations/notesdeletesecurity.md
  - docs/models/operations/notesonerequest.md
  - docs/models/operations/notesoneresponse.md
  - docs/models/operations/notesonesecurity.md
  - docs/models/operations/notesupdaterequest.md
  - docs/models/operations/notesupdateresponse.md
  - docs/models/operations/notesupdatesecurity.md
  - docs/models/operations/opportunitiesaddrequest.md
  - docs/models/operations/opportunitiesaddresponse.md
  - docs/models/operations/opportunitiesaddsecurity.md
  - docs/models/operations/opportunitiesallrequest.md
  - docs/models/operations/opportunitiesallresponse.md
  - docs/models/operations/opportunitiesallsecurity.md
  - docs/models/operations/opportunitiesdeleterequest.md
  - docs/models/operations/opportunitiesdeleteresponse.md
  - docs/models/operations/opportunitiesdeletesecurity.md
  - docs/models/operations/opportunitiesonerequest.md
  - docs/models/operations/opportunitiesoneresponse.md
  - docs/models/operations/opportunitiesonesecurity.md
  - docs/models/operations/opportunitiesupdaterequest.md
  - docs/models/operations/opportunitiesupdateresponse.md
  - docs/models/operations/opportunitiesupdatesecurity.md
  - docs/models/operations/pipelinesaddrequest.md
  - docs/models/operations/pipelinesaddresponse.md
  - docs/models/operations/pipelinesaddsecurity.md
  - docs/models/operations/pipelinesallrequest.md
  - docs/models/operations/pipelinesallresponse.md
  - docs/models/operations/pipelinesallsecurity.md
  - docs/models/operations/pipelinesdeleterequest.md
  - docs/models/operations/pipelinesdeleteresponse.md
  - docs/models/operations/pipelinesdeletesecurity.md
  - docs/models/operations/pipelinesonerequest.md
  - docs/models/operations/pipelinesoneresponse.md
  - docs/models/operations/pipelinesonesecurity.md
  - docs/models/operations/pipelinesupdaterequest.md
  - docs/models/operations/pipelinesupdateresponse.md
  - docs/models/operations/pipelinesupdatesecurity.md
  - docs/models/operations/usersaddrequest.md
  - docs/models/operations/usersaddresponse.md
  - docs/models/operations/usersaddsecurity.md
  - docs/models/operations/usersallrequest.md
  - docs/models/operations/usersallresponse.md
  - docs/models/operations/usersallsecurity.md
  - docs/models/operations/usersdeleterequest.md
  - docs/models/operations/usersdeleteresponse.md
  - docs/models/operations/usersdeletesecurity.md
  - docs/models/operations/usersonerequest.md
  - docs/models/operations/usersoneresponse.md
  - docs/models/operations/usersonesecurity.md
  - docs/models/operations/usersupdaterequest.md
  - docs/models/operations/usersupdateresponse.md
  - docs/models/operations/usersupdatesecurity.md
  - docs/sdks/activities/README.md
  - docs/sdks/apideck/README.md
  - docs/sdks/companies/README.md
  - docs/sdks/contacts/README.md
  - docs/sdks/leads/README.md
  - docs/sdks/notes/README.md
  - docs/sdks/opportunities/README.md
  - docs/sdks/pipelines/README.md
  - docs/sdks/users/README.md
  - docs/types/rfcdate.md
  - jsr.json
  - package.json
  - src/core.ts
  - src/funcs/activitiesActivitiesAdd.ts
  - src/funcs/activitiesActivitiesAll.ts
  - src/funcs/activitiesActivitiesDelete.ts
  - src/funcs/activitiesActivitiesOne.ts
  - src/funcs/activitiesActivitiesUpdate.ts
  - src/funcs/companiesCompaniesAdd.ts
  - src/funcs/companiesCompaniesAll.ts
  - src/funcs/companiesCompaniesDelete.ts
  - src/funcs/companiesCompaniesOne.ts
  - src/funcs/companiesCompaniesUpdate.ts
  - src/funcs/contactsContactsAdd.ts
  - src/funcs/contactsContactsAll.ts
  - src/funcs/contactsContactsDelete.ts
  - src/funcs/contactsContactsOne.ts
  - src/funcs/contactsContactsUpdate.ts
  - src/funcs/leadsLeadsAdd.ts
  - src/funcs/leadsLeadsAll.ts
  - src/funcs/leadsLeadsDelete.ts
  - src/funcs/leadsLeadsOne.ts
  - src/funcs/leadsLeadsUpdate.ts
  - src/funcs/notesNotesAdd.ts
  - src/funcs/notesNotesAll.ts
  - src/funcs/notesNotesDelete.ts
  - src/funcs/notesNotesOne.ts
  - src/funcs/notesNotesUpdate.ts
  - src/funcs/opportunitiesOpportunitiesAdd.ts
  - src/funcs/opportunitiesOpportunitiesAll.ts
  - src/funcs/opportunitiesOpportunitiesDelete.ts
  - src/funcs/opportunitiesOpportunitiesOne.ts
  - src/funcs/opportunitiesOpportunitiesUpdate.ts
  - src/funcs/pipelinesPipelinesAdd.ts
  - src/funcs/pipelinesPipelinesAll.ts
  - src/funcs/pipelinesPipelinesDelete.ts
  - src/funcs/pipelinesPipelinesOne.ts
  - src/funcs/pipelinesPipelinesUpdate.ts
  - src/funcs/usersUsersAdd.ts
  - src/funcs/usersUsersAll.ts
  - src/funcs/usersUsersDelete.ts
  - src/funcs/usersUsersOne.ts
  - src/funcs/usersUsersUpdate.ts
  - src/hooks/hooks.ts
  - src/hooks/index.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/env.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/models/components/activitiesfilter.ts
  - src/models/components/activitieslistresponse.ts
  - src/models/components/activitiessort.ts
  - src/models/components/activitycreaterequest.ts
  - src/models/components/activitycreateresponse.ts
  - src/models/components/activitydeleteresponse.ts
  - src/models/components/activitygetresponse.ts
  - src/models/components/activityupdaterequest.ts
  - src/models/components/activityupdateresponse.ts
  - src/models/components/companiesfilter.ts
  - src/models/components/companieslistresponse.ts
  - src/models/components/companiessort.ts
  - src/models/components/companycreaterequest.ts
  - src/models/components/companycreateresponse.ts
  - src/models/components/companydeleteresponse.ts
  - src/models/components/companygetresponse.ts
  - src/models/components/companyupdaterequest.ts
  - src/models/components/companyupdateresponse.ts
  - src/models/components/contactcreaterequest.ts
  - src/models/components/contactcreateresponse.ts
  - src/models/components/contactdeleteresponse.ts
  - src/models/components/contactgetresponse.ts
  - src/models/components/contactsfilter.ts
  - src/models/components/contactslistresponse.ts
  - src/models/components/contactssort.ts
  - src/models/components/contactupdaterequest.ts
  - src/models/components/contactupdateresponse.ts
  - src/models/components/httpmetadata.ts
  - src/models/components/index.ts
  - src/models/components/leadcreaterequest.ts
  - src/models/components/leadcreateresponse.ts
  - src/models/components/leaddeleteresponse.ts
  - src/models/components/leadgetresponse.ts
  - src/models/components/leadsfilter.ts
  - src/models/components/leadslistresponse.ts
  - src/models/components/leadssort.ts
  - src/models/components/leadupdaterequest.ts
  - src/models/components/leadupdateresponse.ts
  - src/models/components/notecreaterequest.ts
  - src/models/components/notecreateresponse.ts
  - src/models/components/notedeleteresponse.ts
  - src/models/components/notegetresponse.ts
  - src/models/components/noteslistresponse.ts
  - src/models/components/noteupdaterequest.ts
  - src/models/components/noteupdateresponse.ts
  - src/models/components/opportunitiesfilter.ts
  - src/models/components/opportunitieslistresponse.ts
  - src/models/components/opportunitiessort.ts
  - src/models/components/opportunitycreaterequest.ts
  - src/models/components/opportunitycreateresponse.ts
  - src/models/components/opportunitydeleteresponse.ts
  - src/models/components/opportunitygetresponse.ts
  - src/models/components/opportunityupdaterequest.ts
  - src/models/components/opportunityupdateresponse.ts
  - src/models/components/pipelinecreaterequest.ts
  - src/models/components/pipelinecreateresponse.ts
  - src/models/components/pipelinedeleteresponse.ts
  - src/models/components/pipelinegetresponse.ts
  - src/models/components/pipelineslistresponse.ts
  - src/models/components/pipelineupdaterequest.ts
  - src/models/components/pipelineupdateresponse.ts
  - src/models/components/security.ts
  - src/models/components/unexpectederrorresponse.ts
  - src/models/components/usercreaterequest.ts
  - src/models/components/usercreateresponse.ts
  - src/models/components/userdeleteresponse.ts
  - src/models/components/usergetresponse.ts
  - src/models/components/userslistresponse.ts
  - src/models/components/userupdaterequest.ts
  - src/models/components/userupdateresponse.ts
  - src/models/errors/apierror.ts
  - src/models/errors/badrequestresponse.ts
  - src/models/errors/httpclienterrors.ts
  - src/models/errors/index.ts
  - src/models/errors/notfoundresponse.ts
  - src/models/errors/paymentrequiredresponse.ts
  - src/models/errors/sdkvalidationerror.ts
  - src/models/errors/unauthorizedresponse.ts
  - src/models/errors/unprocessableentityresponse.ts
  - src/models/operations/activitiesadd.ts
  - src/models/operations/activitiesall.ts
  - src/models/operations/activitiesdelete.ts
  - src/models/operations/activitiesone.ts
  - src/models/operations/activitiesupdate.ts
  - src/models/operations/companiesadd.ts
  - src/models/operations/companiesall.ts
  - src/models/operations/companiesdelete.ts
  - src/models/operations/companiesone.ts
  - src/models/operations/companiesupdate.ts
  - src/models/operations/contactsadd.ts
  - src/models/operations/contactsall.ts
  - src/models/operations/contactsdelete.ts
  - src/models/operations/contactsone.ts
  - src/models/operations/contactsupdate.ts
  - src/models/operations/index.ts
  - src/models/operations/leadsadd.ts
  - src/models/operations/leadsall.ts
  - src/models/operations/leadsdelete.ts
  - src/models/operations/leadsone.ts
  - src/models/operations/leadsupdate.ts
  - src/models/operations/notesadd.ts
  - src/models/operations/notesall.ts
  - src/models/operations/notesdelete.ts
  - src/models/operations/notesone.ts
  - src/models/operations/notesupdate.ts
  - src/models/operations/opportunitiesadd.ts
  - src/models/operations/opportunitiesall.ts
  - src/models/operations/opportunitiesdelete.ts
  - src/models/operations/opportunitiesone.ts
  - src/models/operations/opportunitiesupdate.ts
  - src/models/operations/pipelinesadd.ts
  - src/models/operations/pipelinesall.ts
  - src/models/operations/pipelinesdelete.ts
  - src/models/operations/pipelinesone.ts
  - src/models/operations/pipelinesupdate.ts
  - src/models/operations/usersadd.ts
  - src/models/operations/usersall.ts
  - src/models/operations/usersdelete.ts
  - src/models/operations/usersone.ts
  - src/models/operations/usersupdate.ts
  - src/sdk/activities.ts
  - src/sdk/companies.ts
  - src/sdk/contacts.ts
  - src/sdk/index.ts
  - src/sdk/leads.ts
  - src/sdk/notes.ts
  - src/sdk/opportunities.ts
  - src/sdk/pipelines.ts
  - src/sdk/sdk.ts
  - src/sdk/users.ts
  - src/types/blobs.ts
  - src/types/constdatetime.ts
  - src/types/enums.ts
  - src/types/fp.ts
  - src/types/index.ts
  - src/types/operations.ts
  - src/types/rfcdate.ts
  - src/types/streams.ts
  - tsconfig.json
examples:
  companiesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "SpaceX", "owner_id": "12345", "image": "https://www.spacex.com/static/images/share.jpg", "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.", "vat_number": "BE0689615164", "currency": "USD", "status": "Open", "fax": "+12129876543", "annual_revenue": "+$35m", "number_of_employees": "500-1000", "industry": "Apparel", "ownership": "Public", "sales_tax_number": "12456EN", "payee_number": "78932EN", "abn_or_tfn": "46 115 614 695", "abn_branch": "123", "acn": "XXX XXX XXX", "first_name": "Elon", "last_name": "Musk", "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "websites": [], "addresses": [], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "row_type": {"id": "12345", "name": "Customer Account"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "tags": ["New"], "read_only": false, "salutation": "Mr", "birthday": "2000-08-12", "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  companiesAll:
    "":
      parameters:
        query:
          filter: {"name": "SpaceX"}
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "all", "data": [{"id": "12345", "name": "SpaceX", "interaction_count": 1, "owner_id": "12345", "image": "https://www.spacex.com/static/images/share.jpg", "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.", "vat_number": "BE0689615164", "currency": "USD", "status": "Open", "fax": "+12129876543", "annual_revenue": "+$35m", "number_of_employees": "500-1000", "industry": "Apparel", "ownership": "Public", "sales_tax_number": "12456EN", "payee_number": "78932EN", "abn_or_tfn": "46 115 614 695", "abn_branch": "123", "acn": "XXX XXX XXX", "first_name": "Elon", "last_name": "Musk", "parent_id": "22345", "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "row_type": {"id": "12345", "name": "Customer Account"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}], "tags": ["New"], "read_only": false, "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "salutation": "Mr", "birthday": "2000-08-12", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  companiesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "one", "data": {"id": "12345", "name": "SpaceX", "interaction_count": 1, "owner_id": "12345", "image": "https://www.spacex.com/static/images/share.jpg", "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.", "vat_number": "BE0689615164", "currency": "USD", "status": "Open", "fax": "+12129876543", "annual_revenue": "+$35m", "number_of_employees": "500-1000", "industry": "Apparel", "ownership": "Public", "sales_tax_number": "12456EN", "payee_number": "78932EN", "abn_or_tfn": "46 115 614 695", "abn_branch": "123", "acn": "XXX XXX XXX", "first_name": "Elon", "last_name": "Musk", "parent_id": "22345", "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "row_type": {"id": "12345", "name": "Customer Account"}, "custom_fields": [], "tags": ["New"], "read_only": false, "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "salutation": "Mr", "birthday": "2000-08-12", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  companiesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "SpaceX", "owner_id": "12345", "image": "https://www.spacex.com/static/images/share.jpg", "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.", "vat_number": "BE0689615164", "currency": "USD", "status": "Open", "fax": "+12129876543", "annual_revenue": "+$35m", "number_of_employees": "500-1000", "industry": "Apparel", "ownership": "Public", "sales_tax_number": "12456EN", "payee_number": "78932EN", "abn_or_tfn": "46 115 614 695", "abn_branch": "123", "acn": "XXX XXX XXX", "first_name": "Elon", "last_name": "Musk", "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "row_type": {"id": "12345", "name": "Customer Account"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level"}], "tags": ["New"], "read_only": false, "salutation": "Mr", "birthday": "2000-08-12", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  companiesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  contactsAll:
    "":
      parameters:
        query:
          filter: {"first_name": "Elon", "last_name": "Musk", "email": "elon@tesla.com", "company_id": "12345", "owner_id": "12345"}
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "contacts", "operation": "all", "data": [{"id": "12345", "name": "Elon Musk", "owner_id": "54321", "type": "personal", "company_id": "23456", "company_name": "23456", "lead_id": "34567", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "title": "CEO", "department": "Engineering", "language": "EN", "gender": "female", "birthday": "2000-08-12", "photo_url": "https://unavatar.io/elon-musk", "lead_source": "Cold Call", "fax": "+12129876543", "description": "Internal champion", "current_balance": 10.5, "status": "open", "active": true, "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "email_domain": "gmail.com", "custom_fields": [], "tags": ["New"], "first_call_at": "2020-09-30T07:43:32.000Z", "first_email_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "updated_at": "2017-08-12T20:43:21.291Z", "created_at": "2017-08-12T20:43:21.291Z", "opportunity_ids": ["12345"], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "name": "Elon Musk", "owner_id": "54321", "type": "personal", "company_id": "23456", "company_name": "23456", "lead_id": "34567", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "title": "CEO", "department": "Engineering", "language": "EN", "gender": "female", "birthday": "2000-08-12", "photo_url": "https://unavatar.io/elon-musk", "lead_source": "Cold Call", "fax": "+12129876543", "description": "Internal champion", "current_balance": 10.5, "status": "open", "active": true, "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "email_domain": "gmail.com", "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}], "tags": ["New"], "first_call_at": "2020-09-30T07:43:32.000Z", "first_email_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "updated_at": "2017-08-12T20:43:21.291Z", "created_at": "2017-08-12T20:43:21.291Z", "opportunity_ids": ["12345"], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "name": "Elon Musk", "owner_id": "54321", "type": "personal", "company_id": "23456", "company_name": "23456", "lead_id": "34567", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "title": "CEO", "department": "Engineering", "language": "EN", "gender": "female", "birthday": "2000-08-12", "photo_url": "https://unavatar.io/elon-musk", "lead_source": "Cold Call", "fax": "+12129876543", "description": "Internal champion", "current_balance": 10.5, "status": "open", "active": true, "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [], "social_links": [], "phone_numbers": [], "emails": [], "email_domain": "gmail.com", "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level"}], "tags": ["New"], "first_call_at": "2020-09-30T07:43:32.000Z", "first_email_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "updated_at": "2017-08-12T20:43:21.291Z", "created_at": "2017-08-12T20:43:21.291Z", "opportunity_ids": ["12345"], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  contactsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Elon Musk", "owner_id": "54321", "type": "personal", "company_id": "23456", "company_name": "23456", "lead_id": "34567", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "title": "CEO", "department": "Engineering", "language": "EN", "gender": "female", "birthday": "2000-08-12", "photo_url": "https://unavatar.io/elon-musk", "lead_source": "Cold Call", "fax": "+12129876543", "description": "Internal champion", "current_balance": 10.5, "status": "open", "active": true, "websites": [], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "email_domain": "gmail.com", "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "tags": ["New"], "opportunity_ids": ["12345"], "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "contacts", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  contactsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
          filter: {"first_name": "Elon", "last_name": "Musk", "email": "elon@tesla.com", "company_id": "12345", "owner_id": "12345"}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "one", "data": {"id": "12345", "name": "Elon Musk", "owner_id": "54321", "type": "personal", "company_id": "23456", "company_name": "23456", "lead_id": "34567", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "title": "CEO", "department": "Engineering", "language": "EN", "gender": "female", "birthday": "2000-08-12", "photo_url": "https://unavatar.io/elon-musk", "lead_source": "Cold Call", "fax": "+12129876543", "description": "Internal champion", "current_balance": 10.5, "status": "open", "active": true, "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "email_domain": "gmail.com", "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}], "tags": ["New"], "first_call_at": "2020-09-30T07:43:32.000Z", "first_email_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "updated_at": "2017-08-12T20:43:21.291Z", "created_at": "2017-08-12T20:43:21.291Z", "opportunity_ids": ["12345"], "pass_through": [{"service_id": "<id>", "extend_paths": []}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  contactsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Elon Musk", "owner_id": "54321", "type": "personal", "company_id": "23456", "company_name": "23456", "lead_id": "34567", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "title": "CEO", "department": "Engineering", "language": "EN", "gender": "female", "birthday": "2000-08-12", "photo_url": "https://unavatar.io/elon-musk", "lead_source": "Cold Call", "fax": "+12129876543", "description": "Internal champion", "current_balance": 10.5, "status": "open", "active": true, "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "email_domain": "gmail.com", "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "tags": ["New"], "opportunity_ids": ["12345"], "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "contacts", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": {"error": "Unprocessable", "message": "Unprocessable request, please verify your request headers and body."}, "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  contactsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "contacts", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  opportunitiesAll:
    "":
      parameters:
        query:
          filter: {"status": "Completed", "monetary_amount": 75000}
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "opportunities", "operation": "all", "data": [{"id": "12345", "title": "New Rocket", "primary_contact_id": "12345", "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.", "type": "Existing Customer - Upgrade", "monetary_amount": 75000, "currency": "USD", "win_probability": 40, "expected_revenue": 75000, "close_date": "2020-10-30", "loss_reason_id": "12345", "loss_reason": "No budget", "won_reason_id": "12345", "won_reason": "Best pitch", "pipeline_id": "12345", "pipeline_stage_id": "12345", "source_id": "12345", "lead_id": "12345", "lead_source": "Website", "contact_id": "12345", "contact_ids": ["12345"], "company_id": "12345", "company_name": "Copper", "owner_id": "12345", "priority": "None", "status": "Open", "status_id": "12345", "tags": ["New"], "interaction_count": 0, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "stage_last_changed_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "date_stage_changed": "2020-09-30T00:00:00.000Z", "date_last_contacted": "2020-09-30T00:00:00.000Z", "date_lead_created": "2020-09-30T00:00:00.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}, {"id": "12345", "title": "New Rocket", "primary_contact_id": "12345", "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.", "type": "Existing Customer - Upgrade", "monetary_amount": 75000, "currency": "USD", "win_probability": 40, "expected_revenue": 75000, "close_date": "2020-10-30", "loss_reason_id": "12345", "loss_reason": "No budget", "won_reason_id": "12345", "won_reason": "Best pitch", "pipeline_id": "12345", "pipeline_stage_id": "12345", "source_id": "12345", "lead_id": "12345", "lead_source": "Website", "contact_id": "12345", "contact_ids": ["12345"], "company_id": "12345", "company_name": "Copper", "owner_id": "12345", "priority": "None", "status": "Open", "status_id": "12345", "tags": ["New"], "interaction_count": 0, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}], "stage_last_changed_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "date_stage_changed": "2020-09-30T00:00:00.000Z", "date_last_contacted": "2020-09-30T00:00:00.000Z", "date_lead_created": "2020-09-30T00:00:00.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}, {"id": "12345", "title": "New Rocket", "primary_contact_id": "12345", "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.", "type": "Existing Customer - Upgrade", "monetary_amount": 75000, "currency": "USD", "win_probability": 40, "expected_revenue": 75000, "close_date": "2020-10-30", "loss_reason_id": "12345", "loss_reason": "No budget", "won_reason_id": "12345", "won_reason": "Best pitch", "pipeline_id": "12345", "pipeline_stage_id": "12345", "source_id": "12345", "lead_id": "12345", "lead_source": "Website", "contact_id": "12345", "contact_ids": ["12345"], "company_id": "12345", "company_name": "Copper", "owner_id": "12345", "priority": "None", "status": "Open", "status_id": "12345", "tags": ["New"], "interaction_count": 0, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "stage_last_changed_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "date_stage_changed": "2020-09-30T00:00:00.000Z", "date_last_contacted": "2020-09-30T00:00:00.000Z", "date_lead_created": "2020-09-30T00:00:00.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": {"error": "Unprocessable", "message": "Unprocessable request, please verify your request headers and body."}, "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  opportunitiesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"title": "New Rocket", "primary_contact_id": "12345", "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.", "type": "Existing Customer - Upgrade", "monetary_amount": 75000, "currency": "USD", "win_probability": 40, "close_date": "2020-10-30", "loss_reason_id": "12345", "loss_reason": "No budget", "won_reason_id": "12345", "won_reason": "Best pitch", "pipeline_id": "12345", "pipeline_stage_id": "12345", "source_id": "12345", "lead_id": "12345", "lead_source": "Website", "contact_id": "12345", "contact_ids": ["12345"], "company_id": "12345", "company_name": "Copper", "owner_id": "12345", "priority": "None", "status": "Open", "status_id": "12345", "tags": ["New"], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "stage_last_changed_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "opportunities", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  opportunitiesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "opportunities", "operation": "one", "data": {"id": "12345", "title": "New Rocket", "primary_contact_id": "12345", "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.", "type": "Existing Customer - Upgrade", "monetary_amount": 75000, "currency": "USD", "win_probability": 40, "expected_revenue": 75000, "close_date": "2020-10-30", "loss_reason_id": "12345", "loss_reason": "No budget", "won_reason_id": "12345", "won_reason": "Best pitch", "pipeline_id": "12345", "pipeline_stage_id": "12345", "source_id": "12345", "lead_id": "12345", "lead_source": "Website", "contact_id": "12345", "contact_ids": ["12345"], "company_id": "12345", "company_name": "Copper", "owner_id": "12345", "priority": "None", "status": "Open", "status_id": "12345", "tags": ["New"], "interaction_count": 0, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "stage_last_changed_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "date_stage_changed": "2020-09-30T00:00:00.000Z", "date_last_contacted": "2020-09-30T00:00:00.000Z", "date_lead_created": "2020-09-30T00:00:00.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  opportunitiesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"title": "New Rocket", "primary_contact_id": "12345", "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.", "type": "Existing Customer - Upgrade", "monetary_amount": 75000, "currency": "USD", "win_probability": 40, "close_date": "2020-10-30", "loss_reason_id": "12345", "loss_reason": "No budget", "won_reason_id": "12345", "won_reason": "Best pitch", "pipeline_id": "12345", "pipeline_stage_id": "12345", "source_id": "12345", "lead_id": "12345", "lead_source": "Website", "contact_id": "12345", "contact_ids": ["12345"], "company_id": "12345", "company_name": "Copper", "owner_id": "12345", "priority": "None", "status": "Open", "status_id": "12345", "tags": ["New"], "custom_fields": [], "stage_last_changed_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  opportunitiesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  leadsAll:
    "":
      parameters:
        query:
          filter: {"first_name": "Elon", "last_name": "Musk", "email": "elon@tesla.com", "phone_number": "1234567890"}
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "all", "data": [{"id": "12345", "name": "Elon Musk", "company_name": "Spacex", "owner_id": "54321", "owner_name": "John Doe", "company_id": "2", "lead_id": "2", "lead_source": "Cold Call", "first_name": "Elon", "last_name": "Musk", "description": "A thinker", "prefix": "Sir", "title": "CEO", "language": "EN", "status": "New", "monetary_amount": 75000, "currency": "USD", "fax": "+12129876543", "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "custom_fields": [], "tags": ["New"], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  leadsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Elon Musk", "company_name": "Spacex", "owner_id": "54321", "owner_name": "John Doe", "company_id": "2", "lead_id": "2", "lead_source": "Cold Call", "first_name": "Elon", "last_name": "Musk", "description": "A thinker", "prefix": "Sir", "title": "CEO", "language": "EN", "status": "New", "monetary_amount": 75000, "currency": "USD", "fax": "+12129876543", "websites": [], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}], "tags": ["New"], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  leadsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "one", "data": {"id": "12345", "name": "Elon Musk", "company_name": "Spacex", "owner_id": "54321", "owner_name": "John Doe", "company_id": "2", "lead_id": "2", "lead_source": "Cold Call", "first_name": "Elon", "last_name": "Musk", "description": "A thinker", "prefix": "Sir", "title": "CEO", "language": "EN", "status": "New", "monetary_amount": 75000, "currency": "USD", "fax": "+12129876543", "websites": [], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level"}], "tags": ["New"], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  leadsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Elon Musk", "company_name": "Spacex", "owner_id": "54321", "owner_name": "John Doe", "company_id": "2", "lead_id": "2", "lead_source": "Cold Call", "first_name": "Elon", "last_name": "Musk", "description": "A thinker", "prefix": "Sir", "title": "CEO", "language": "EN", "status": "New", "monetary_amount": 75000, "currency": "USD", "fax": "+12129876543", "websites": [], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [], "tags": ["New"], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  leadsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pipelinesAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "pipelines", "operation": "all", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pipelinesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"id": "default", "name": "Sales Pipeline", "currency": "USD", "archived": false, "active": false, "display_order": 1, "win_probability_enabled": true, "stages": [{"name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}, {"name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}, {"name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}], "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "pipelines", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pipelinesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "pipelines", "operation": "one", "data": {"id": "default", "name": "Sales Pipeline", "currency": "USD", "archived": false, "active": false, "display_order": 1, "win_probability_enabled": true, "stages": [{"id": "contractsent", "name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}, {"id": "contractsent", "name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}, {"id": "contractsent", "name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pipelinesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"id": "default", "name": "Sales Pipeline", "currency": "USD", "archived": false, "active": false, "display_order": 1, "win_probability_enabled": true, "stages": [{"name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "pipelines", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pipelinesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": {"error": "Unprocessable", "message": "Unprocessable request, please verify your request headers and body."}, "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  notesAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "notes", "operation": "all", "data": [{"id": "12345", "title": "Meeting Notes", "content": "Office hours are 9AM-6PM", "owner_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "active": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "title": "Meeting Notes", "content": "Office hours are 9AM-6PM", "owner_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "active": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}, {"id": "12345", "title": "Meeting Notes", "content": "Office hours are 9AM-6PM", "owner_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "active": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  notesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"title": "Meeting Notes", "content": "Office hours are 9AM-6PM", "owner_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "active": true, "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "notes", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  notesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "notes", "operation": "one", "data": {"id": "12345", "title": "Meeting Notes", "content": "Office hours are 9AM-6PM", "owner_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "active": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  notesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"title": "Meeting Notes", "content": "Office hours are 9AM-6PM", "owner_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "active": true, "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "notes", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  notesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "notes", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  usersAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "users", "operation": "all", "data": [{"id": "12345", "parent_id": "54321", "username": "masterofcoin", "first_name": "Elon", "last_name": "Musk", "title": "CEO", "division": "Europe", "company_name": "SpaceX", "employee_number": "123456-AB", "description": "A description", "image": "https://logo.clearbit.com/spacex.com?s=128", "language": "EN", "status": "active", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "updated_at": "2017-08-12T20:43:21.291Z", "created_at": "2017-08-12T20:43:21.291Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "parent_id": "54321", "username": "masterofcoin", "first_name": "Elon", "last_name": "Musk", "title": "CEO", "division": "Europe", "company_name": "SpaceX", "employee_number": "123456-AB", "description": "A description", "image": "https://logo.clearbit.com/spacex.com?s=128", "language": "EN", "status": "active", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "updated_at": "2017-08-12T20:43:21.291Z", "created_at": "2017-08-12T20:43:21.291Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  usersAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "54321", "username": "masterofcoin", "first_name": "Elon", "last_name": "Musk", "title": "CEO", "division": "Europe", "company_name": "SpaceX", "employee_number": "123456-AB", "description": "A description", "image": "https://logo.clearbit.com/spacex.com?s=128", "language": "EN", "status": "active", "password": "supersecretpassword", "addresses": [], "phone_numbers": [], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "users", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  usersOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "one", "data": {"id": "12345", "parent_id": "54321", "username": "masterofcoin", "first_name": "Elon", "last_name": "Musk", "title": "CEO", "division": "Europe", "company_name": "SpaceX", "employee_number": "123456-AB", "description": "A description", "image": "https://logo.clearbit.com/spacex.com?s=128", "language": "EN", "status": "active", "addresses": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "updated_at": "2017-08-12T20:43:21.291Z", "created_at": "2017-08-12T20:43:21.291Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  usersUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "54321", "username": "masterofcoin", "first_name": "Elon", "last_name": "Musk", "title": "CEO", "division": "Europe", "company_name": "SpaceX", "employee_number": "123456-AB", "description": "A description", "image": "https://logo.clearbit.com/spacex.com?s=128", "language": "EN", "status": "active", "password": "supersecretpassword", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  usersDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "users", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  activitiesAll:
    "":
      parameters:
        query:
          filter: {"updated_since": "2020-09-30T07:43:32.000Z"}
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "activities", "operation": "all", "data": [{"id": "12345", "downstream_id": "12345", "activity_datetime": "2021-05-01T12:00:00.000Z", "duration_seconds": 1800, "user_id": "12345", "account_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "owner_id": "12345", "campaign_id": "12345", "case_id": "12345", "asset_id": "12345", "contract_id": "12345", "product_id": "12345", "solution_id": "12345", "custom_object_id": "12345", "type": "meeting", "title": "Meeting", "description": "More info about the meeting", "note": "An internal note about the meeting", "location": "Space", "location_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "all_day_event": false, "private": true, "group_event": true, "event_sub_type": "debrief", "group_event_type": "Proposed", "child": false, "archived": false, "deleted": false, "show_as": "busy", "done": false, "start_datetime": "2021-05-01T12:00:00.000Z", "end_datetime": "2021-05-01T12:30:00.000Z", "duration_minutes": 30, "activity_date": "2021-05-01", "end_date": "2021-05-01", "recurrent": false, "reminder_datetime": "2021-05-01T17:00:00.000Z", "reminder_set": false, "video_conference_url": "https://us02web.zoom.us/j/88120759396", "video_conference_id": "zoom:88120759396", "custom_fields": [], "attendees": [], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  activitiesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"activity_datetime": "2021-05-01T12:00:00.000Z", "duration_seconds": 1800, "user_id": "12345", "account_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "owner_id": "12345", "campaign_id": "12345", "case_id": "12345", "asset_id": "12345", "contract_id": "12345", "product_id": "12345", "solution_id": "12345", "custom_object_id": "12345", "type": "meeting", "title": "Meeting", "description": "More info about the meeting", "note": "An internal note about the meeting", "location": "Space", "location_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "all_day_event": false, "private": true, "group_event": true, "event_sub_type": "debrief", "group_event_type": "Proposed", "child": false, "archived": false, "deleted": false, "show_as": "busy", "done": false, "start_datetime": "2021-05-01T12:00:00.000Z", "end_datetime": "2021-05-01T12:30:00.000Z", "activity_date": "2021-05-01", "end_date": "2021-05-01", "recurrent": false, "reminder_datetime": "2021-05-01T17:00:00.000Z", "reminder_set": false, "video_conference_url": "https://us02web.zoom.us/j/88120759396", "video_conference_id": "zoom:88120759396", "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}], "attendees": [{"name": "Elon Musk", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "email_address": "elon@musk.com", "is_organizer": true, "status": "accepted"}, {"name": "Elon Musk", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "email_address": "elon@musk.com", "is_organizer": true, "status": "accepted"}], "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "activities", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  activitiesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "activities", "operation": "one", "data": {"id": "12345", "downstream_id": "12345", "activity_datetime": "2021-05-01T12:00:00.000Z", "duration_seconds": 1800, "user_id": "12345", "account_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "owner_id": "12345", "campaign_id": "12345", "case_id": "12345", "asset_id": "12345", "contract_id": "12345", "product_id": "12345", "solution_id": "12345", "custom_object_id": "12345", "type": "meeting", "title": "Meeting", "description": "More info about the meeting", "note": "An internal note about the meeting", "location": "Space", "location_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "all_day_event": false, "private": true, "group_event": true, "event_sub_type": "debrief", "group_event_type": "Proposed", "child": false, "archived": false, "deleted": false, "show_as": "busy", "done": false, "start_datetime": "2021-05-01T12:00:00.000Z", "end_datetime": "2021-05-01T12:30:00.000Z", "duration_minutes": 30, "activity_date": "2021-05-01", "end_date": "2021-05-01", "recurrent": false, "reminder_datetime": "2021-05-01T17:00:00.000Z", "reminder_set": false, "video_conference_url": "https://us02web.zoom.us/j/88120759396", "video_conference_id": "zoom:88120759396", "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "attendees": [], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": []}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": {"error": "Unprocessable", "message": "Unprocessable request, please verify your request headers and body."}, "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  activitiesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"activity_datetime": "2021-05-01T12:00:00.000Z", "duration_seconds": 1800, "user_id": "12345", "account_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "owner_id": "12345", "campaign_id": "12345", "case_id": "12345", "asset_id": "12345", "contract_id": "12345", "product_id": "12345", "solution_id": "12345", "custom_object_id": "12345", "type": "meeting", "title": "Meeting", "description": "More info about the meeting", "note": "An internal note about the meeting", "location": "Space", "location_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "all_day_event": false, "private": true, "group_event": true, "event_sub_type": "debrief", "group_event_type": "Proposed", "child": false, "archived": false, "deleted": false, "show_as": "busy", "done": false, "start_datetime": "2021-05-01T12:00:00.000Z", "end_datetime": "2021-05-01T12:30:00.000Z", "activity_date": "2021-05-01", "end_date": "2021-05-01", "recurrent": false, "reminder_datetime": "2021-05-01T17:00:00.000Z", "reminder_set": false, "video_conference_url": "https://us02web.zoom.us/j/88120759396", "video_conference_id": "zoom:88120759396", "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>", "<value>"]}], "attendees": [{"name": "Elon Musk", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "email_address": "elon@musk.com", "is_organizer": true, "status": "accepted"}, {"name": "Elon Musk", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "email_address": "elon@musk.com", "is_organizer": true, "status": "accepted"}, {"name": "Elon Musk", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "email_address": "elon@musk.com", "is_organizer": true, "status": "accepted"}], "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "activities", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": {"error": "Unprocessable", "message": "Unprocessable request, please verify your request headers and body."}, "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  activitiesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "activities", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeesAll:
    "":
      parameters:
        query:
          filter: {"company_id": "1234", "email": "elon@tesla.com", "first_name": "Elon", "title": "Manager", "last_name": "Musk", "manager_id": "1234", "employment_status": "active", "employee_number": "123456-AB", "department_id": "1234"}
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "all", "data": [{"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "display_name": "Technoking", "preferred_name": "Elon Musk", "initials": "EM", "salutation": "Mr", "title": "CEO", "marital_status": "married", "partner": {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "gender": "male", "initials": "EM", "birthday": "2000-08-12", "deceased_on": "2000-08-12"}, "division": "Europe", "division_id": "12345", "department_id": "12345", "department_name": "12345", "team": {"id": "1234", "name": "Full Stack Engineers"}, "company_id": "23456", "company_name": "SpaceX", "employment_start_date": "2021-10-26", "employment_end_date": "2028-10-26", "leaving_reason": "resigned", "employee_number": "123456-AB", "employment_status": "active", "ethnicity": "African American", "manager": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "employment_status": "active"}, "direct_reports": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "social_security_number": "123456789", "birthday": "2000-08-12", "deceased_on": "2000-08-12", "country_of_birth": "US", "description": "A description", "gender": "male", "pronouns": "she,her", "preferred_language": "EN", "languages": ["EN"], "nationalities": ["US"], "photo_url": "https://unavatar.io/elon-musk", "timezone": "Europe/London", "source": "lever", "source_id": "12345", "record_url": "https://app.intercom.io/contacts/12345", "jobs": [{"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}], "compensations": [{"id": "3404301363494309004", "job_id": "3490439050957906679", "rate": 50, "payment_unit": "hour", "flsa_status": "nonexempt", "effective_date": "2021-06-11"}], "works_remote": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [], "emails": [], "custom_fields": [], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "tax_code": "1111", "tax_id": "234-32-0000", "dietary_preference": "Veggie", "food_allergies": ["No allergies"], "probation_period": {"start_date": "2021-10-01", "end_date": "2021-11-28"}, "tags": ["New"], "row_version": "1-12345", "deleted": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "display_name": "Technoking", "preferred_name": "Elon Musk", "initials": "EM", "salutation": "Mr", "title": "CEO", "marital_status": "married", "partner": {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "gender": "male", "initials": "EM", "birthday": "2000-08-12", "deceased_on": "2000-08-12"}, "division": "Europe", "division_id": "12345", "department_id": "12345", "department_name": "12345", "team": {"id": "1234", "name": "Full Stack Engineers"}, "company_id": "23456", "company_name": "SpaceX", "employment_start_date": "2021-10-26", "employment_end_date": "2028-10-26", "leaving_reason": "resigned", "employee_number": "123456-AB", "employment_status": "active", "ethnicity": "African American", "manager": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "employment_status": "active"}, "direct_reports": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "social_security_number": "123456789", "birthday": "2000-08-12", "deceased_on": "2000-08-12", "country_of_birth": "US", "description": "A description", "gender": "male", "pronouns": "she,her", "preferred_language": "EN", "languages": ["EN"], "nationalities": ["US"], "photo_url": "https://unavatar.io/elon-musk", "timezone": "Europe/London", "source": "lever", "source_id": "12345", "record_url": "https://app.intercom.io/contacts/12345", "jobs": [{"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}], "compensations": [{"id": "3404301363494309004", "job_id": "3490439050957906679", "rate": 50, "payment_unit": "hour", "flsa_status": "nonexempt", "effective_date": "2021-06-11"}], "works_remote": true, "addresses": [], "phone_numbers": [], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}], "social_links": [], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "tax_code": "1111", "tax_id": "234-32-0000", "dietary_preference": "Veggie", "food_allergies": ["No allergies"], "probation_period": {"start_date": "2021-10-01", "end_date": "2021-11-28"}, "tags": ["New"], "row_version": "1-12345", "deleted": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}, {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "display_name": "Technoking", "preferred_name": "Elon Musk", "initials": "EM", "salutation": "Mr", "title": "CEO", "marital_status": "married", "partner": {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "gender": "male", "initials": "EM", "birthday": "2000-08-12", "deceased_on": "2000-08-12"}, "division": "Europe", "division_id": "12345", "department_id": "12345", "department_name": "12345", "team": {"id": "1234", "name": "Full Stack Engineers"}, "company_id": "23456", "company_name": "SpaceX", "employment_start_date": "2021-10-26", "employment_end_date": "2028-10-26", "leaving_reason": "resigned", "employee_number": "123456-AB", "employment_status": "active", "ethnicity": "African American", "manager": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "employment_status": "active"}, "direct_reports": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "social_security_number": "123456789", "birthday": "2000-08-12", "deceased_on": "2000-08-12", "country_of_birth": "US", "description": "A description", "gender": "male", "pronouns": "she,her", "preferred_language": "EN", "languages": ["EN"], "nationalities": ["US"], "photo_url": "https://unavatar.io/elon-musk", "timezone": "Europe/London", "source": "lever", "source_id": "12345", "record_url": "https://app.intercom.io/contacts/12345", "jobs": [{"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}], "compensations": [{"id": "3404301363494309004", "job_id": "3490439050957906679", "rate": 50, "payment_unit": "hour", "flsa_status": "nonexempt", "effective_date": "2021-06-11"}], "works_remote": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "tax_code": "1111", "tax_id": "234-32-0000", "dietary_preference": "Veggie", "food_allergies": ["No allergies"], "probation_period": {"start_date": "2021-10-01", "end_date": "2021-11-28"}, "tags": ["New"], "row_version": "1-12345", "deleted": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "display_name": "Technoking", "preferred_name": "Elon Musk", "initials": "EM", "salutation": "Mr", "title": "CEO", "marital_status": "married", "partner": {"first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "gender": "male", "initials": "EM", "birthday": "2000-08-12", "deceased_on": "2000-08-12"}, "division": "Europe", "division_id": "12345", "department_id": "12345", "department_name": "12345", "team": {"id": "1234", "name": "Full Stack Engineers"}, "company_id": "23456", "company_name": "SpaceX", "employment_start_date": "2021-10-26", "employment_end_date": "2028-10-26", "leaving_reason": "resigned", "employee_number": "123456-AB", "employment_status": "active", "ethnicity": "African American", "manager": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "employment_status": "active"}, "direct_reports": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "social_security_number": "123456789", "birthday": "2000-08-12", "deceased_on": "2000-08-12", "country_of_birth": "US", "description": "A description", "gender": "male", "pronouns": "she,her", "preferred_language": "EN", "languages": ["EN"], "nationalities": ["US"], "photo_url": "https://unavatar.io/elon-musk", "timezone": "Europe/London", "source": "lever", "source_id": "12345", "record_url": "https://app.intercom.io/contacts/12345", "jobs": [{"title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}], "compensations": [{"rate": 50, "payment_unit": "hour", "flsa_status": "nonexempt", "effective_date": "2021-06-11"}], "works_remote": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "custom_fields": [], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "tax_code": "1111", "tax_id": "234-32-0000", "dietary_preference": "Veggie", "food_allergies": ["No allergies"], "probation_period": {"start_date": "2021-10-01", "end_date": "2021-11-28"}, "tags": ["New"], "row_version": "1-12345", "deleted": true, "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": {"error": "Unprocessable", "message": "Unprocessable request, please verify your request headers and body."}, "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
          filter: {"company_id": "1234"}
          pass_through: {"search": "San Francisco"}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "one", "data": {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "display_name": "Technoking", "preferred_name": "Elon Musk", "initials": "EM", "salutation": "Mr", "title": "CEO", "marital_status": "married", "partner": {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "gender": "male", "initials": "EM", "birthday": "2000-08-12", "deceased_on": "2000-08-12"}, "division": "Europe", "division_id": "12345", "department_id": "12345", "department_name": "12345", "team": {"id": "1234", "name": "Full Stack Engineers"}, "company_id": "23456", "company_name": "SpaceX", "employment_start_date": "2021-10-26", "employment_end_date": "2028-10-26", "leaving_reason": "resigned", "employee_number": "123456-AB", "employment_status": "active", "ethnicity": "African American", "manager": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "employment_status": "active"}, "direct_reports": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "social_security_number": "123456789", "birthday": "2000-08-12", "deceased_on": "2000-08-12", "country_of_birth": "US", "description": "A description", "gender": "male", "pronouns": "she,her", "preferred_language": "EN", "languages": ["EN"], "nationalities": ["US"], "photo_url": "https://unavatar.io/elon-musk", "timezone": "Europe/London", "source": "lever", "source_id": "12345", "record_url": "https://app.intercom.io/contacts/12345", "jobs": [{"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}], "compensations": [{"id": "3404301363494309004", "job_id": "3490439050957906679", "rate": 50, "payment_unit": "hour", "flsa_status": "nonexempt", "effective_date": "2021-06-11"}], "works_remote": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "social_links": [], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "tax_code": "1111", "tax_id": "234-32-0000", "dietary_preference": "Veggie", "food_allergies": ["No allergies"], "probation_period": {"start_date": "2021-10-01", "end_date": "2021-11-28"}, "tags": ["New"], "row_version": "1-12345", "deleted": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "display_name": "Technoking", "preferred_name": "Elon Musk", "initials": "EM", "salutation": "Mr", "title": "CEO", "marital_status": "married", "partner": {"first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "gender": "male", "initials": "EM", "birthday": "2000-08-12", "deceased_on": "2000-08-12"}, "division": "Europe", "division_id": "12345", "department_id": "12345", "department_name": "12345", "team": {"id": "1234", "name": "Full Stack Engineers"}, "company_id": "23456", "company_name": "SpaceX", "employment_start_date": "2021-10-26", "employment_end_date": "2028-10-26", "leaving_reason": "resigned", "employee_number": "123456-AB", "employment_status": "active", "ethnicity": "African American", "manager": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "employment_status": "active"}, "direct_reports": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "social_security_number": "123456789", "birthday": "2000-08-12", "deceased_on": "2000-08-12", "country_of_birth": "US", "description": "A description", "gender": "male", "pronouns": "she,her", "preferred_language": "EN", "languages": ["EN"], "nationalities": ["US"], "photo_url": "https://unavatar.io/elon-musk", "timezone": "Europe/London", "source": "lever", "source_id": "12345", "record_url": "https://app.intercom.io/contacts/12345", "jobs": [{"title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}], "compensations": [{"rate": 50, "payment_unit": "hour", "flsa_status": "nonexempt", "effective_date": "2021-06-11"}], "works_remote": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "tax_code": "1111", "tax_id": "234-32-0000", "dietary_preference": "Veggie", "food_allergies": ["No allergies"], "probation_period": {"start_date": "2021-10-01", "end_date": "2021-11-28"}, "tags": ["New"], "row_version": "1-12345", "deleted": true, "pass_through": [{"service_id": "<id>", "extend_paths": []}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.companiesAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "all", "data": [{"id": "12345", "legal_name": "SpaceX", "display_name": "SpaceX", "subdomain": "company", "status": "active", "company_number": "123456-AB", "currency": "USD", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "websites": [], "debtor_id": "12345", "deleted": false, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, {"id": "12345", "legal_name": "SpaceX", "display_name": "SpaceX", "subdomain": "company", "status": "active", "company_number": "123456-AB", "currency": "USD", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "debtor_id": "12345", "deleted": false, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, {"id": "12345", "legal_name": "SpaceX", "display_name": "SpaceX", "subdomain": "company", "status": "active", "company_number": "123456-AB", "currency": "USD", "addresses": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "debtor_id": "12345", "deleted": false, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.companiesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"legal_name": "SpaceX", "display_name": "SpaceX", "subdomain": "company", "status": "active", "company_number": "123456-AB", "currency": "USD", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [], "debtor_id": "12345", "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.companiesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "one", "data": {"id": "12345", "legal_name": "SpaceX", "display_name": "SpaceX", "subdomain": "company", "status": "active", "company_number": "123456-AB", "currency": "USD", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "debtor_id": "12345", "deleted": false, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": {"error": "Unprocessable", "message": "Unprocessable request, please verify your request headers and body."}, "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.companiesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"legal_name": "SpaceX", "display_name": "SpaceX", "subdomain": "company", "status": "active", "company_number": "123456-AB", "currency": "USD", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "debtor_id": "12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.companiesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.departmentsAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "workday", "resource": "Departments", "operation": "all", "data": [{"id": "12345", "parent_id": "22345", "name": "R&D", "code": "2", "description": "R&D", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}, {"id": "12345", "parent_id": "22345", "name": "R&D", "code": "2", "description": "R&D", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, {"id": "12345", "parent_id": "22345", "name": "R&D", "code": "2", "description": "R&D", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": {"error": "Unprocessable", "message": "Unprocessable request, please verify your request headers and body."}, "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.departmentsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "R&D", "code": "2", "description": "R&D", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "workday", "resource": "Departments", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.departmentsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "workday", "resource": "Departments", "operation": "one", "data": {"id": "12345", "parent_id": "22345", "name": "R&D", "code": "2", "description": "R&D", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.departmentsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "R&D", "code": "2", "description": "R&D", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "workday", "resource": "Departments", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.departmentsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "workday", "resource": "Departments", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.payrollsAll:
    "":
      parameters:
        query:
          filter: {"start_date": "2022-04-08", "end_date": "2022-04-21"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "all", "data": [{"id": "12345", "company_id": "23456", "processed": false, "processed_date": "2022-04-08", "check_date": "2022-04-08", "start_date": "2022-04-08", "end_date": "2022-04-21", "totals": {"company_debit": 27992.49, "tax_debit": 8655.32, "check_amount": 27966.23, "net_pay": 19337.17, "gross_pay": 27966.23, "employer_taxes": 2038.93, "employee_taxes": 6616.39, "employer_benefit_contributions": 0, "employee_benefit_deductions": 0}, "compensations": [{"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}, {"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [], "benefits": []}, {"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [], "deductions": [{"name": "Company Car", "amount": 10.97}, {"name": "Company Car", "amount": 10.97}], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}, {"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}]}, {"id": "12345", "company_id": "23456", "processed": false, "processed_date": "2022-04-08", "check_date": "2022-04-08", "start_date": "2022-04-08", "end_date": "2022-04-21", "totals": {"company_debit": 27992.49, "tax_debit": 8655.32, "check_amount": 27966.23, "net_pay": 19337.17, "gross_pay": 27966.23, "employer_taxes": 2038.93, "employee_taxes": 6616.39, "employer_benefit_contributions": 0, "employee_benefit_deductions": 0}, "compensations": []}, {"id": "12345", "company_id": "23456", "processed": false, "processed_date": "2022-04-08", "check_date": "2022-04-08", "start_date": "2022-04-08", "end_date": "2022-04-21", "totals": {"company_debit": 27992.49, "tax_debit": 8655.32, "check_amount": 27966.23, "net_pay": 19337.17, "gross_pay": 27966.23, "employer_taxes": 2038.93, "employee_taxes": 6616.39, "employer_benefit_contributions": 0, "employee_benefit_deductions": 0}, "compensations": [{"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [], "deductions": [], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}, {"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}, {"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}, {"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [{"name": "Company Car", "amount": 10.97}, {"name": "Company Car", "amount": 10.97}], "benefits": []}]}]}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.payrollsOne:
    "":
      parameters:
        path:
          payroll_id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "one", "data": {"id": "12345", "company_id": "23456", "processed": false, "processed_date": "2022-04-08", "check_date": "2022-04-08", "start_date": "2022-04-08", "end_date": "2022-04-21", "totals": {"company_debit": 27992.49, "tax_debit": 8655.32, "check_amount": 27966.23, "net_pay": 19337.17, "gross_pay": 27966.23, "employer_taxes": 2038.93, "employee_taxes": 6616.39, "employer_benefit_contributions": 0, "employee_benefit_deductions": 0}, "compensations": [{"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}, {"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [{"name": "Company Car", "amount": 10.97}, {"name": "Company Car", "amount": 10.97}], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}, {"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}, {"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}, {"name": "CA State Income Tax", "employer": false, "amount": 1.97}, {"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [{"name": "Company Car", "amount": 10.97}], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeePayrollsAll:
    "":
      parameters:
        path:
          employee_id: "<id>"
        query:
          filter: {"start_date": "2022-04-08", "end_date": "2022-04-21"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "all", "data": [{"id": "12345", "employee_id": "12345", "company_id": "23456", "processed": false, "processed_date": "2022-04-08", "check_date": "2022-04-08", "start_date": "2022-04-08", "end_date": "2022-04-21", "totals": {"company_debit": 27992.49, "tax_debit": 8655.32, "check_amount": 27966.23, "net_pay": 19337.17, "gross_pay": 27966.23, "employer_taxes": 2038.93, "employee_taxes": 6616.39, "employer_benefit_contributions": 0, "employee_benefit_deductions": 0}, "compensations": [{"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}, {"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [], "benefits": []}, {"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [], "deductions": [{"name": "Company Car", "amount": 10.97}, {"name": "Company Car", "amount": 10.97}], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}, {"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}]}, {"id": "12345", "employee_id": "12345", "company_id": "23456", "processed": false, "processed_date": "2022-04-08", "check_date": "2022-04-08", "start_date": "2022-04-08", "end_date": "2022-04-21", "totals": {"company_debit": 27992.49, "tax_debit": 8655.32, "check_amount": 27966.23, "net_pay": 19337.17, "gross_pay": 27966.23, "employer_taxes": 2038.93, "employee_taxes": 6616.39, "employer_benefit_contributions": 0, "employee_benefit_deductions": 0}, "compensations": []}, {"id": "12345", "employee_id": "12345", "company_id": "23456", "processed": false, "processed_date": "2022-04-08", "check_date": "2022-04-08", "start_date": "2022-04-08", "end_date": "2022-04-21", "totals": {"company_debit": 27992.49, "tax_debit": 8655.32, "check_amount": 27966.23, "net_pay": 19337.17, "gross_pay": 27966.23, "employer_taxes": 2038.93, "employee_taxes": 6616.39, "employer_benefit_contributions": 0, "employee_benefit_deductions": 0}, "compensations": [{"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [], "deductions": [], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}, {"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}, {"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}, {"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [{"name": "Company Car", "amount": 10.97}, {"name": "Company Car", "amount": 10.97}], "benefits": []}]}]}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeePayrollsOne:
    "":
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "one", "data": {"id": "12345", "employee_id": "12345", "company_id": "23456", "processed": false, "processed_date": "2022-04-08", "check_date": "2022-04-08", "start_date": "2022-04-08", "end_date": "2022-04-21", "totals": {"company_debit": 27992.49, "tax_debit": 8655.32, "check_amount": 27966.23, "net_pay": 19337.17, "gross_pay": 27966.23, "employer_taxes": 2038.93, "employee_taxes": 6616.39, "employer_benefit_contributions": 0, "employee_benefit_deductions": 0}, "compensations": [{"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}, {"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [{"name": "Company Car", "amount": 10.97}, {"name": "Company Car", "amount": 10.97}], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}, {"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}, {"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}, {"name": "CA State Income Tax", "employer": false, "amount": 1.97}, {"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [{"name": "Company Car", "amount": 10.97}], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeeSchedulesAll:
    "":
      parameters:
        path:
          employee_id: "<id>"
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "all", "data": {"employee": {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "display_name": "Technoking", "preferred_name": "Elon Musk", "initials": "EM", "salutation": "Mr", "title": "CEO", "marital_status": "married", "partner": {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "gender": "male", "initials": "EM", "birthday": "2000-08-12", "deceased_on": "2000-08-12"}, "division": "Europe", "division_id": "12345", "department_id": "12345", "department_name": "12345", "team": {"id": "1234", "name": "Full Stack Engineers"}, "company_id": "23456", "company_name": "SpaceX", "employment_start_date": "2021-10-26", "employment_end_date": "2028-10-26", "leaving_reason": "resigned", "employee_number": "123456-AB", "employment_status": "active", "ethnicity": "African American", "manager": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "employment_status": "active"}, "direct_reports": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "social_security_number": "123456789", "birthday": "2000-08-12", "deceased_on": "2000-08-12", "country_of_birth": "US", "description": "A description", "gender": "male", "pronouns": "she,her", "preferred_language": "EN", "languages": ["EN"], "nationalities": ["US"], "photo_url": "https://unavatar.io/elon-musk", "timezone": "Europe/London", "source": "lever", "source_id": "12345", "record_url": "https://app.intercom.io/contacts/12345", "jobs": [{"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}], "compensations": [{"id": "3404301363494309004", "job_id": "3490439050957906679", "rate": 50, "payment_unit": "hour", "flsa_status": "nonexempt", "effective_date": "2021-06-11"}], "works_remote": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "custom_fields": [], "social_links": [], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "tax_code": "1111", "tax_id": "234-32-0000", "dietary_preference": "Veggie", "food_allergies": ["No allergies"], "probation_period": {"start_date": "2021-10-01", "end_date": "2021-11-28"}, "tags": ["New"], "row_version": "1-12345", "deleted": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, "schedules": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": {"error": "Unprocessable", "message": "Unprocessable request, please verify your request headers and body."}, "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.timeOffRequestsAll:
    "":
      parameters:
        query:
          filter: {"start_date": "2022-04-08", "end_date": "2022-04-21", "updated_since": "2020-09-30T07:43:32.000Z", "employee_id": "1234", "time_off_request_status": "approved", "company_id": "1234"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "bamboohr", "resource": "time-off-requests", "operation": "all", "data": [{"id": "12345", "employee_id": "12345", "policy_id": "12345", "status": "approved", "description": "Enjoying some sun.", "start_date": "2022-04-01", "end_date": "2022-04-01", "request_date": "2022-03-21", "request_type": "vacation", "approval_date": "2022-03-21", "units": "hours", "amount": 3.5, "day_part": "morning", "notes": {"employee": "Relaxing on the beach for a few hours.", "manager": "Enjoy!"}, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}], "policy_type": "sick"}, {"id": "12345", "employee_id": "12345", "policy_id": "12345", "status": "approved", "description": "Enjoying some sun.", "start_date": "2022-04-01", "end_date": "2022-04-01", "request_date": "2022-03-21", "request_type": "vacation", "approval_date": "2022-03-21", "units": "hours", "amount": 3.5, "day_part": "morning", "notes": {"employee": "Relaxing on the beach for a few hours.", "manager": "Enjoy!"}, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [], "policy_type": "sick"}, {"id": "12345", "employee_id": "12345", "policy_id": "12345", "status": "approved", "description": "Enjoying some sun.", "start_date": "2022-04-01", "end_date": "2022-04-01", "request_date": "2022-03-21", "request_type": "vacation", "approval_date": "2022-03-21", "units": "hours", "amount": 3.5, "day_part": "morning", "notes": {"employee": "Relaxing on the beach for a few hours.", "manager": "Enjoy!"}, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [], "policy_type": "sick"}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": {"error": "Unprocessable", "message": "Unprocessable request, please verify your request headers and body."}, "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.timeOffRequestsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"employee_id": "12345", "policy_id": "12345", "status": "approved", "description": "Enjoying some sun.", "start_date": "2022-04-01", "end_date": "2022-04-01", "request_date": "2022-03-21", "request_type": "vacation", "approval_date": "2022-03-21", "units": "hours", "amount": 3.5, "day_part": "morning", "notes": {"employee": "Relaxing on the beach for a few hours.", "manager": "Enjoy!"}, "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}], "policy_type": "sick"}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "bamboohr", "resource": "time-off-requests", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.timeOffRequestsOne:
    "":
      parameters:
        path:
          id: "<id>"
          employee_id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "bamboohr", "resource": "time-off-requests", "operation": "one", "data": {"id": "12345", "employee_id": "12345", "policy_id": "12345", "status": "approved", "description": "Enjoying some sun.", "start_date": "2022-04-01", "end_date": "2022-04-01", "request_date": "2022-03-21", "request_type": "vacation", "approval_date": "2022-03-21", "units": "hours", "amount": 3.5, "day_part": "morning", "notes": {"employee": "Relaxing on the beach for a few hours.", "manager": "Enjoy!"}, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}], "policy_type": "sick"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.timeOffRequestsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
          employee_id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"employee_id": "12345", "policy_id": "12345", "status": "approved", "description": "Enjoying some sun.", "start_date": "2022-04-01", "end_date": "2022-04-01", "request_date": "2022-03-21", "request_type": "vacation", "approval_date": "2022-03-21", "units": "hours", "amount": 3.5, "day_part": "morning", "notes": {"employee": "Relaxing on the beach for a few hours.", "manager": "Enjoy!"}, "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}], "policy_type": "sick"}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "bamboohr", "resource": "time-off-requests", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.timeOffRequestsDelete:
    "":
      parameters:
        path:
          id: "<id>"
          employee_id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "bamboohr", "resource": "time-off-requests", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror", "": {}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": {"statusCode": 401, "error": "Unauthorized", "message": "Missing authentication"}, "ref": "https://developers.apideck.com/errors#unauthorizederror", "": {}}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror", "": {}}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror", "": {}}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror", "": {}}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": {"missing": [{"x-apideck-consumer-id": "required"}]}, "ref": "https://developers.apideck.com/errors#unauthorizederror"}
generatedTests: {}
